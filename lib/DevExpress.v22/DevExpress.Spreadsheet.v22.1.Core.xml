<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>DevExpress.Spreadsheet.v22.1.Core</name>
  </assembly>
  <members>
    <member name="N:DevExpress.Spreadsheet">
      <summary>
        <para>Contains classes and interfaces that implement basic spreadsheet functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ActiveSheetChangedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.ActiveSheetChanged event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ActiveSheetChangedEventArgs.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ActiveSheetChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="oldActiveSheetName">A string that is the name of the formerly active sheet.</param>
      <param name="newActiveSheetName">A string that is the name of the sheet that became active.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ActiveSheetChangedEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ActiveSheetChanged"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.ActiveSheetChangedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ActiveSheetChangeEventArgsBase">
      <summary>
        <para>Base class for classes that provides data for the ActiveSheetChanging and ActiveSheetChanged events of the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ActiveSheetChangeEventArgsBase.NewActiveSheetName">
      <summary>
        <para>Gets the name of the new active worksheet.</para>
      </summary>
      <value>A string value specifying the worksheet name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ActiveSheetChangeEventArgsBase.OldActiveSheetName">
      <summary>
        <para>Gets the name of the old active worksheet.</para>
      </summary>
      <value>A string value specifying the worksheet name.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ActiveSheetChangingEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.ActiveSheetChanging event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ActiveSheetChangingEventArgs.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ActiveSheetChangingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="oldActiveSheetName">A string that is the name of the currently active sheet.</param>
      <param name="newActiveSheetName">A string that is the name of the sheet that will be active.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ActiveSheetChangingEventArgs.Cancel">
      <summary>
        <para>Gets or sets whether the changing the active sheet should be canceled.</para>
      </summary>
      <value>true, to cancel the operation; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ActiveSheetChangingEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ActiveSheetChanging"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.ActiveSheetChangingEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Alignment">
      <summary>
        <para>Provides access to the cell content alignment settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Alignment.Horizontal">
      <summary>
        <para>Gets or sets the horizontal alignment of the cell content.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment"/> enumeration member specifying how cell data should be horizontally aligned.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Alignment.Indent">
      <summary>
        <para>Gets or sets the cell content indention from the cell edge, dependent on the applied horizontal alignment.</para>
      </summary>
      <value>An integer value that specifies a space between the cell content and cell edge. An indent increment is equal to three spaces of the Normal style font.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Alignment.RotationAngle">
      <summary>
        <para>Gets or sets the rotation angle of the cell content.</para>
      </summary>
      <value>An integer value that specifies the rotation angle of the cell content (in degrees). The value must be between -90 and 90.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Alignment.ShrinkToFit">
      <summary>
        <para>Specifies whether text size in a cell changes automatically to fit the cell width.</para>
      </summary>
      <value>true to automatically change text size to fit a cell; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Alignment.Vertical">
      <summary>
        <para>Gets or sets the vertical alignment of the cell content.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetVerticalAlignment"/> enumeration member specifying how cell data should be vertically aligned.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Alignment.WrapText">
      <summary>
        <para>Indicates whether the text contained in a cell is wrapped into multiple lines.</para>
      </summary>
      <value>true, if the cell text should be wrapped; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.AreasCollection">
      <summary>
        <para>A collection of worksheet <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects from which a union range is composed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ArrayFormula">
      <summary>
        <para>Contains an array formula and the range to which the formula is applied.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ArrayFormula.Formula">
      <summary>
        <para>Gets a formula applied to an array.</para>
      </summary>
      <value>A string that is the formula applied to an array.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ArrayFormula.Range">
      <summary>
        <para>Gets the range to which an array formula is applied.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range with a particular array formula.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ArrayFormulaCollection">
      <summary>
        <para>A collection of ArrayFormula objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ArrayFormulaCollection.Add(DevExpress.Spreadsheet.CellRange,System.String)">
      <summary>
        <para>Creates a new array formula and adds it to the collection.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the range to which the array formula applies.</param>
      <param name="formula">A string that is the array formula.</param>
      <returns>An <see cref="T:DevExpress.Spreadsheet.ArrayFormula"/> object that is the newly added element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ArrayFormulaCollection.Clear">
      <summary>
        <para>Clears all array formulas.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ArrayFormulaCollection.Contains(DevExpress.Spreadsheet.ArrayFormula)">
      <summary>
        <para>Determines whether the collection contains the specified formula.</para>
      </summary>
      <param name="arrayFormula">An <see cref="T:DevExpress.Spreadsheet.ArrayFormula"/> to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ArrayFormulaCollection.IndexOf(DevExpress.Spreadsheet.ArrayFormula)">
      <summary>
        <para>Returns the zero-based index of the specified element in the collection.</para>
      </summary>
      <param name="arrayFormula">An <see cref="T:DevExpress.Spreadsheet.ArrayFormula"/> to locate in the collection.</param>
      <returns>An integer value that is the position of the specified element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ArrayFormulaCollection.Remove(DevExpress.Spreadsheet.ArrayFormula)">
      <summary>
        <para>Clears the ranges containing the specified array formula.</para>
      </summary>
      <param name="arrayFormula">An <see cref="T:DevExpress.Spreadsheet.ArrayFormula"/> to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ArrayFormulaCollection.Remove(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Clears the array formula in the specified range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object from which the array formula is to be removed.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ArrayFormulaCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the element at the specified index of the <see cref="T:DevExpress.Spreadsheet.ArrayFormulaCollection"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the object to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ArrowheadSize">
      <summary>
        <para>Lists values used to specify an arrowhead’s width and length.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ArrowheadSize.Large">
      <summary>
        <para>Specifies the large size.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ArrowheadSize.Medium">
      <summary>
        <para>Specifies the medium size.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ArrowheadSize.Small">
      <summary>
        <para>Specifies the small size.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ArrowheadType">
      <summary>
        <para>Lists values that specify the type of a connector’s arrowhead.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ArrowheadType.Diamond">
      <summary>
        <para>A diamond-shaped arrowhead.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ArrowheadType.None">
      <summary>
        <para>A connector has no arrowhead at the specified end.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ArrowheadType.Open">
      <summary>
        <para>An open arrowhead.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ArrowheadType.Oval">
      <summary>
        <para>An oval-shaped arrowhead.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ArrowheadType.Stealth">
      <summary>
        <para>A stealth-shaped arrowhead.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ArrowheadType.Triangle">
      <summary>
        <para>A triangular arrowhead.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ArrowSettings">
      <summary>
        <para>Contains arrowhead settings for a connector.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ArrowSettings.EndArrowheadLength">
      <summary>
        <para>Gets or sets the length of an arrowhead at the end of a connector.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ArrowheadSize"/> enumeration values indicating the arrowhead’s length.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ArrowSettings.EndArrowheadType">
      <summary>
        <para>Gets or sets the type of an arrowhead at the end of a connector.</para>
      </summary>
      <value>One of the A <see cref="T:DevExpress.Spreadsheet.ArrowheadType"/> enumeration values indicating the arrowhead’s type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ArrowSettings.EndArrowheadWidth">
      <summary>
        <para>Gets or sets the width of an arrowhead at the end of a connector.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ArrowheadSize"/> enumeration members indicating the arrowhead’s width.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ArrowSettings.StartArrowheadLength">
      <summary>
        <para>Specifies the lenght of an arrowhead at the beginning of a connector.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ArrowheadSize"/> enumeration members indicating the arrowhead length.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ArrowSettings.StartArrowheadType">
      <summary>
        <para>Gets or sets the type of an arrowhead at the beginning of a connector.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ArrowheadType"/> enumeration values indicating the start arrowhead type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ArrowSettings.StartArrowheadWidth">
      <summary>
        <para>Specifies the width of an arrowhead at the beginning of a connector.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ArrowheadSize"/> enumeration values indicating the arrowhead size.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.AutoFilterBase">
      <summary>
        <para>Base interface for objects which implement filtering functionality in a worksheet and tables.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterBase.Clear">
      <summary>
        <para>Removes all the filters specified in a worksheet and displays all hidden rows.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterBase.Columns">
      <summary>
        <para>Gets a collection of filters for columns.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.AutoFilterColumnCollection"/> object that is a collection of filters for columns.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterBase.Disable">
      <summary>
        <para>Turns off the filtering functionality.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterBase.Enabled">
      <summary>
        <para>Gets whether the filtering functionality is enabled.</para>
      </summary>
      <value>true, if filtering is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterBase.Range">
      <summary>
        <para>Returns the range to which the filter is applied.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the entire filtered range.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterBase.ReApply">
      <summary>
        <para>Reapplies a filter.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterBase.SortState">
      <summary>
        <para>Provides access to an interface that allows you to specify sort conditions and perform sorting.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SortState"/> interface.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.AutoFilterColumn">
      <summary>
        <para>Provides filtering functionality for a column.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumn.ApplyCustomFilter(DevExpress.Spreadsheet.FilterValue,DevExpress.Spreadsheet.FilterComparisonOperator,DevExpress.Spreadsheet.FilterValue,DevExpress.Spreadsheet.FilterComparisonOperator,System.Boolean)">
      <summary>
        <para>Applies a custom filter based on the compound filter expression.</para>
      </summary>
      <param name="firstCriteria">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies the first filter criterion value.</param>
      <param name="firstCriteriaOperator">A <see cref="T:DevExpress.Spreadsheet.FilterComparisonOperator"/> enumeration member that defines the comparison operator for the first filter criterion.</param>
      <param name="secondCriteria">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies the second filter criterion value.</param>
      <param name="secondCriteriaOperator">A <see cref="T:DevExpress.Spreadsheet.FilterComparisonOperator"/> enumeration member that defines the comparison operator for the second filter criterion.</param>
      <param name="criterionAnd">A <see cref="T:System.Boolean"/> value indicating whether the logical operator &quot;AND&quot; should be used to combine two filter criteria. If false, the &quot;OR&quot; operator is used.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumn.ApplyCustomFilter(DevExpress.Spreadsheet.FilterValue,DevExpress.Spreadsheet.FilterComparisonOperator)">
      <summary>
        <para>Applies a custom filter based on the specified filter value and comparison operator.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies the filter criterion value.</param>
      <param name="criteriaOperator">One of the <see cref="T:DevExpress.Spreadsheet.FilterComparisonOperator"/> enumeration members that defines the comparison operator used to construct the filter expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumn.ApplyDynamicFilter(DevExpress.Spreadsheet.DynamicFilterType)">
      <summary>
        <para>Applies a dynamic filter that shows dates that fall within a specified time period or displays values that are above or below the average.</para>
      </summary>
      <param name="dynamicFilterType">A <see cref="T:DevExpress.Spreadsheet.DynamicFilterType"/> enumeration member that specifies the filter criterion.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumn.ApplyFilterCriteria(DevExpress.Spreadsheet.FilterValue,System.Collections.Generic.IList{DevExpress.Spreadsheet.DateGrouping})">
      <summary>
        <para>Filters data by cell values and DateTime values.</para>
      </summary>
      <param name="filters">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object containing values to be used in a filter.</param>
      <param name="dateGroupings">A list of <see cref="T:DevExpress.Spreadsheet.DateGrouping"/> items.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumn.ApplyFilterCriteria(DevExpress.Spreadsheet.FilterValue)">
      <summary>
        <para>Filters data by values.</para>
      </summary>
      <param name="filters">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object containing values to be used in a filter.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumn.ApplyFilterCriteria(System.Collections.Generic.IList{DevExpress.Spreadsheet.DateGrouping})">
      <summary>
        <para>Filters data by a list of date and time values.</para>
      </summary>
      <param name="dateGroupings">A list of <see cref="T:DevExpress.Spreadsheet.DateGrouping"/> items.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumn.ApplyTop10Filter(DevExpress.Spreadsheet.Top10Type,System.Int32)">
      <summary>
        <para>Applies the &quot;Top 10&quot; filter that displays top/bottom ranked values.</para>
      </summary>
      <param name="top10Type">A <see cref="T:DevExpress.Spreadsheet.Top10Type"/> enumeration member that specifies the filter criterion.</param>
      <param name="value">A positive integer that is a number or percentage of the rank value.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumn.Clear">
      <summary>
        <para>Removes a filter from a specified column.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterColumn.CustomFilter">
      <summary>
        <para>Provides access to a custom filter applied to values of column cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CustomFilter"/> object containing filter criteria - values and operators.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterColumn.DynamicFilterType">
      <summary>
        <para>Gets the type of the dynamic filter applied to the current column.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DynamicFilterType"/> enumeration member which indicates the dynamic filter type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterColumn.FilterCriteria">
      <summary>
        <para>Gets access to an information about values and date intervals by which to filter.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterCriteria"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterColumn.FilterType">
      <summary>
        <para>Gets the type of the filter applied to the current column.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterType"/> enumeration member which indicates the filter type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterColumn.HiddenButton">
      <summary>
        <para>Gets or set a value indicating whether the AutoFilter button for the specified column should be hidden.</para>
      </summary>
      <value>true, to hide the button; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterColumn.Top10Type">
      <summary>
        <para>Returns the filter operator of the &quot;Top 10&quot; filter applied to a column.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Top10Type"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.AutoFilterColumn.Top10Value">
      <summary>
        <para>Returns the filter value of the &quot;Top 10&quot; filter applied to a column.</para>
      </summary>
      <value>A positive integer that is a number or percentage of the rank value.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.AutoFilterColumnCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Spreadsheet.AutoFilterColumn"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumnCollection.Contains(DevExpress.Spreadsheet.AutoFilterColumn)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="filterColumn">An <see cref="T:DevExpress.Spreadsheet.AutoFilterColumn"/> object to search for.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.AutoFilterColumnCollection.IndexOf(DevExpress.Spreadsheet.AutoFilterColumn)">
      <summary>
        <para>Returns the index of the specified column in the collection.</para>
      </summary>
      <param name="filterColumn">An <see cref="T:DevExpress.Spreadsheet.AutoFilterColumn"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the column position within the collection. &#0045;1 if the column doesn’t belong to the collection.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.AverageConditionalFormatting">
      <summary>
        <para>Represents the &quot;above or below average&quot; conditional formatting rule.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.AverageConditionalFormatting.Condition">
      <summary>
        <para>Gets or sets a type of the conditional format operator used in the &quot;above or below average…&quot; conditional formatting rule.</para>
      </summary>
      <value>One of <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingAverageCondition"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.AverageConditionalFormatting.StdDev">
      <summary>
        <para>Gets or sets the number of standard deviations included above or below the average in the &quot;above or below average…&quot; conditional formatting rule.</para>
      </summary>
      <value>An integer value that is the number of standard deviations.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.BeforeExportEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.BeforeExport"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetBeforeExportEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.BeforeImportEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.BeforeImport"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetBeforeImportEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.BeforePrintSheetEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.BeforePrintSheet"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.BeforePrintSheetEventArgs.Index">
      <summary>
        <para>Returns the index of the worksheet to be printed.</para>
      </summary>
      <value>An integer value specifying a zero-based index of the worksheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.BeforePrintSheetEventArgs.Name">
      <summary>
        <para>Returns the name of the worksheet to be printed.</para>
      </summary>
      <value>A System.String value which specifies the worksheet name.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.BeforePrintSheetEventHandler">
      <summary>
        <para>A method that will handle the BeforePrintSheet event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.BeforePrintSheetEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Border">
      <summary>
        <para>Provides access to the line characteristics of a cell border.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Border.Color">
      <summary>
        <para>Gets or sets the line color of the cell border.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure that specifies the border line color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Border.LineStyle">
      <summary>
        <para>Gets or sets the line style of the cell border.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.BorderLineStyle"/> enumeration member.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.BorderLineStyle">
      <summary>
        <para>Lists line styles for cell borders.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.DashDot">
      <summary>
        <para>The thin dash-dotted border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.DashDotDot">
      <summary>
        <para>The thin dash-dot-dotted border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.Dashed">
      <summary>
        <para>The thin dashed border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.Dotted">
      <summary>
        <para>The thin dotted border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.Double">
      <summary>
        <para>The double border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.Hair">
      <summary>
        <para>The hair border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.Medium">
      <summary>
        <para>The medium solid border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.MediumDashDot">
      <summary>
        <para>The medium dash-dotted border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.MediumDashDotDot">
      <summary>
        <para>The medium dash-dot-dotted border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.MediumDashed">
      <summary>
        <para>The medium dashed border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.None">
      <summary>
        <para>A border is not painted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.SlantDashDot">
      <summary>
        <para>The medium slanted dash-dotted border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.Thick">
      <summary>
        <para>The thick solid border line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BorderLineStyle.Thin">
      <summary>
        <para>The thin solid border line.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Borders">
      <summary>
        <para>Provides access to cell borders.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Borders.BottomBorder">
      <summary>
        <para>Provides access to an object that specifies the bottom border of a cell or cell range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Border"/> object that specifies characteristics of the cell border.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Borders.DiagonalBorderColor">
      <summary>
        <para>Gets or sets the line color of the cell diagonal border.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> value specifying the border line color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Borders.DiagonalBorderLineStyle">
      <summary>
        <para>Gets or sets the line style of the cell diagonal border.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.BorderLineStyle"/> enumeration member specifying the line style.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Borders.DiagonalBorderType">
      <summary>
        <para>Gets or sets the type of the cell diagonal border.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DiagonalBorderType"/> enumerator member specifying a cell diagonal border type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Borders.InsideHorizontalBorders">
      <summary>
        <para>Provides access to an object that specifies all horizontal borders inside a cell range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Border"/> object that specifies cell border characteristics.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Borders.InsideVerticalBorders">
      <summary>
        <para>Provides access to an object that specifies all vertical borders inside a cell range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Border"/> object that specifies cell border characteristics.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Borders.LeftBorder">
      <summary>
        <para>Provides access to an object that specifies the left border of a cell or cell range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Border"/> object that specifies characteristics of a cell border.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Borders.RemoveBorders">
      <summary>
        <para>Removes all borders from a cell or cell range.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Borders.RightBorder">
      <summary>
        <para>Provides access to an object that specifies the right border of a cell or cell range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Border"/> object that specifies characteristics of a cell border.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Borders.SetAllBorders(System.Drawing.Color,DevExpress.Spreadsheet.BorderLineStyle)">
      <summary>
        <para>Sets all borders of a cell or range of cells.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> value specifying the line color of borders.</param>
      <param name="style">A <see cref="T:DevExpress.Spreadsheet.BorderLineStyle"/> enumeration member specifying the line style of borders.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Borders.SetDiagonalBorders(System.Drawing.Color,DevExpress.Spreadsheet.BorderLineStyle,DevExpress.Spreadsheet.DiagonalBorderType)">
      <summary>
        <para>Sets cell diagonal borders.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> value specifying the border line color.</param>
      <param name="style">A <see cref="T:DevExpress.Spreadsheet.BorderLineStyle"/> enumeration member specifying the border line style.</param>
      <param name="diagonalBorderType">A <see cref="T:DevExpress.Spreadsheet.DiagonalBorderType"/> enumerator member specifying the diagonal border type.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Borders.SetOutsideBorders(System.Drawing.Color,DevExpress.Spreadsheet.BorderLineStyle)">
      <summary>
        <para>Sets outside borders for a cell or range of cells.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> value specifying the line color of borders.</param>
      <param name="style">A <see cref="T:DevExpress.Spreadsheet.BorderLineStyle"/> enumeration member specifying the line style of borders.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Borders.TopBorder">
      <summary>
        <para>Provides access to an object that specifies the top border of a cell or cell range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Border"/> object that specifies characteristics of a cell border.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.BuiltInStyleId">
      <summary>
        <para>Lists built-in cell styles.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent1">
      <summary>
        <para>The “Accent1” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent1_20percent">
      <summary>
        <para>The “20% - Accent1” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent1_40percent">
      <summary>
        <para>The “40% - Accent1” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent1_60percent">
      <summary>
        <para>The “60% - Accent1” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent2">
      <summary>
        <para>The “Accent2” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent2_20percent">
      <summary>
        <para>The “20% - Accent2” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent2_40percent">
      <summary>
        <para>The “40% - Accent2” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent2_60percent">
      <summary>
        <para>The “60% - Accent2” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent3">
      <summary>
        <para>The “Accent3” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent3_20percent">
      <summary>
        <para>The “20% - Accent3” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent3_40percent">
      <summary>
        <para>The “40% - Accent3” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent3_60percent">
      <summary>
        <para>The “60% - Accent3” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent4">
      <summary>
        <para>The “Accent4” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent4_20percent">
      <summary>
        <para>The “20% - Accent4” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent4_40percent">
      <summary>
        <para>The “40% - Accent4” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent4_60percent">
      <summary>
        <para>The “60% - Accent4” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent5">
      <summary>
        <para>The “Accent5” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent5_20percent">
      <summary>
        <para>The “20% - Accent5” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent5_40percent">
      <summary>
        <para>The “40% - Accent5” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent5_60percent">
      <summary>
        <para>The “60% - Accent5” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent6">
      <summary>
        <para>The “Accent6” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent6_20percent">
      <summary>
        <para>The “20% - Accent6” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent6_40percent">
      <summary>
        <para>The “40% - Accent6” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Accent6_60percent">
      <summary>
        <para>The “60% - Accent6” themed style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Bad">
      <summary>
        <para>The “Bad” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Calculation">
      <summary>
        <para>The “Calculation” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.CheckCell">
      <summary>
        <para>The “Check Cell” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Comma">
      <summary>
        <para>The “Comma” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Comma0">
      <summary>
        <para>The “Comma” style with no decimal places.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Currency">
      <summary>
        <para>The “Currency” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Currency0">
      <summary>
        <para>The “Currency” style with no decimal places.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Emphasis1">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Emphasis2">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Emphasis3">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Explanatory">
      <summary>
        <para>The “Explanatory” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.FollowedHyperlink">
      <summary>
        <para>The “Followed Hyperlink” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Good">
      <summary>
        <para>The “Good” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Heading1">
      <summary>
        <para>The “Heading 1” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Heading2">
      <summary>
        <para>The “Heading 2” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Heading3">
      <summary>
        <para>The “Heading 3” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Heading4">
      <summary>
        <para>The “Heading 4” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Hyperlink">
      <summary>
        <para>The “Hyperlink” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Input">
      <summary>
        <para>The “Input” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.LinkedCell">
      <summary>
        <para>The “Linked Cell” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Neutral">
      <summary>
        <para>The “Neutral” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Normal">
      <summary>
        <para>The “Normal” style (the default cell style).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Note">
      <summary>
        <para>The “Note” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Output">
      <summary>
        <para>The “Output” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Percent">
      <summary>
        <para>The “Percent” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.TableStyleLight1">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Title">
      <summary>
        <para>The “Title” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.Total">
      <summary>
        <para>The “Total” style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.BuiltInStyleId.WarningText">
      <summary>
        <para>The “Warning Text” style.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.BuiltInTableStyleId">
      <summary>
        <para>Lists built-in styles similar to Excel’s built-in table styles.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.CalculationEngineType">
      <summary>
        <para>Lists types of computational models used for spreadsheet calculations.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CalculationEngineType.ChainBased">
      <summary>
        <para>This is the default calculation engine type. It constructs the calculation chain.</para>
        <para>Spreadsheet analyzes cell formulas to build the tree of dependencies between cells, and constructs the calculation chain. When cell content is modified, the dependency tree allows you to determine which cells should be calculated.  Those cells are marked as needing recalculation.</para>
        <para>There are also cells which are always marked as needing calculation. They are listed below:</para>
        <para />
        <para />
        <para />
        <para>After calling the <see cref="M:DevExpress.Spreadsheet.Workbook.EndUpdate"/> method, the Spreadsheet calculates all cells marked as needing recalculation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CalculationEngineType.Recursive">
      <summary>
        <para>This type of calculation engine was used by default before v15.1.</para>
        <para>When the cell content is modified, all cells are marked as needing recalculation. Calculation of a particular cell is performed when needed &#0045;  in a situation when its actual value is required for rendering or when the calculation engine attempts to obtain a value of another cell which references the current cell.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.CalculationMode">
      <summary>
        <para>Lists modes that specify when to calculate formulas in the document.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CalculationMode.Automatic">
      <summary>
        <para>Recalculates all formulas in the document each time a cell value, formula, or defined name changes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CalculationMode.AutomaticExceptTables">
      <summary>
        <para>Recalculates all formulas except data tables.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CalculationMode.Manual">
      <summary>
        <para>A user triggers calculations in the document.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.CalculationOptions">
      <summary>
        <para>Contains options used for calculation of formulas contained in the worksheet cells.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.CalculationId">
      <summary>
        <para>Allows specifying the version of the calculation engine used to calculate values in the workbook.</para>
      </summary>
      <value>An integer that identifies the version of the calculation engine.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.EnableMultiThreading">
      <summary>
        <para>Gets or sets whether to enable multi-threaded calculations for the current workbook.</para>
      </summary>
      <value>true, to enable multi-threaded calculations; otherwise, false. The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.FullCalculationOnLoad">
      <summary>
        <para>Indicates whether formulas should be recalculated when the workbook is opened.</para>
      </summary>
      <value>true to recalculate all formulas when the workbook is opened; otherwise, false. Default is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.Iterative">
      <summary>
        <para>Gets or sets whether the application should perform iterative calculations for formulas that contain circular references.</para>
      </summary>
      <value>true, to perform iterative calculations; otherwise, false. Default is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.MaxChange">
      <summary>
        <para>Gets or sets the maximum change for iterative calculations.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the change between iterations. Default is 0.001.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.MaxIterationCount">
      <summary>
        <para>Gets or sets the number of iterations which will be performed for the iterative calculation.</para>
      </summary>
      <value>An integer value that specifies the maximum number of calculations. Default is 100.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.Mode">
      <summary>
        <para>Gets or sets the document’s calculation mode.</para>
      </summary>
      <value>An enumeration member that specifies the calculation mode for a workbook. The default value is Automatic.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.PrecisionAsDisplayed">
      <summary>
        <para>Gets or sets a value indicating whether calculations in a workbook should be performed by using the precision of the number format.</para>
      </summary>
      <value>true, to calculate a workbook using the displayed precision of numbers; otherwise, false. Default is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.RecalculateBeforeSaving">
      <summary>
        <para>Gets or sets whether formulas should be calculated when the workbook is saved.</para>
      </summary>
      <value>true, to perform recalculation when the workbook is saved; otherwise, false. Default is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.ThreadCount">
      <summary>
        <para>Gets or sets the number of calculation threads.</para>
      </summary>
      <value>The number of concurrent calculation processes.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CalculationOptions.Use1904DateSystem">
      <summary>
        <para>Gets or sets whether the date system used to convert a date to a serial value starts in 1904.</para>
      </summary>
      <value>true, if the date system starts in 1904; otherwise, false. Default is false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Cell">
      <summary>
        <para>A single cell in a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Cell.ColumnIndex">
      <summary>
        <para>Gets the index of the column that contains the current cell.</para>
      </summary>
      <value>A zero-based integer value that specifies the index of the column containing the current cell.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Cell.DisplayText">
      <summary>
        <para>Returns a cell’s displayed value.</para>
      </summary>
      <value>The cell’s display text.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Cell.GetArrayFormulaRange">
      <summary>
        <para>Gets the entire range filled with an array formula, if the cell belongs to that range.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> of cells filled with an array formula, or null if the current cell does not belong to that range.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Cell.HasQuotePrefix">
      <summary>
        <para>Indicates whether or not the cell value is prefixed with a single quote.</para>
      </summary>
      <value>true, if the cell value contains a leading quote; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Cell.IsDisplayedAsDateTime">
      <summary>
        <para>Indicates whether a numeric value contained in the cell is displayed as a date and time value.</para>
      </summary>
      <value>true, if a date and time format is applied to the cell; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Cell.IsTopLeftCellInArrayFormulaRange">
      <summary>
        <para>Indicates whether the current cell is the top left cell in the array formula range.</para>
      </summary>
      <value>true, if the current cell is the top left cell in the array formula range; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Cell.ParsedExpression">
      <summary>
        <para>Gets or sets the expression tree from which the formula entered in the cell is built.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.ParsedExpression"/> object that contains an expression tree.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Cell.RowIndex">
      <summary>
        <para>Gets the index of the row that contains the current cell.</para>
      </summary>
      <value>A zero-based integer value that specifies the index of the row containing the current cell.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Cell.Tag">
      <summary>
        <para>Gets or sets custom data associated with the cell.</para>
      </summary>
      <value>An object that contains information associated with the cell.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CellCollection">
      <summary>
        <para>A collection of all cells in a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellCollection.Item(System.String)">
      <summary>
        <para>Gets an individual cell by its reference string.</para>
      </summary>
      <param name="position">A string that specifies a reference to a cell in the A1 reference style.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CellKey">
      <summary>
        <para>A cell’s unique identifier within a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellKey.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.CellKey"/> class with the specified settings.</para>
      </summary>
      <param name="sheetId">An integer that is the worksheet’s unique identifier. Use the <see cref="P:DevExpress.Spreadsheet.Sheet.Id"/> property to obtain the worksheet’s ID.</param>
      <param name="columnIndex">A zero-based column index. Use the <see cref="P:DevExpress.Spreadsheet.Cell.ColumnIndex"/> property to obtain the column index.</param>
      <param name="rowIndex">A zero-based row index. Use the <see cref="P:DevExpress.Spreadsheet.Cell.RowIndex"/> property to obtain the row index.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellKey.ColumnIndex">
      <summary>
        <para>Gets the index of the column that contains the current cell.</para>
      </summary>
      <value>A zero-based column index.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellKey.CompareTo(DevExpress.Spreadsheet.CellKey)">
      <summary>
        <para>Compares the current cell key with another and returns an integer that indicates whether the current cell is closer to the upper left position of the first worksheet in a workbook compared with another.</para>
      </summary>
      <param name="other">A  <see cref="T:DevExpress.Spreadsheet.CellKey"/> object to compare with the current cell key.</param>
      <returns>A value that indicates the relative position of the cells. If the value is -1, the current cell is closer to the upper left position of the first worksheet in a workbook than another. If the value is zero, the cell keys refer to the same cell. If the value is 1, the current cell is more distant from the upper left position of the first worksheet in a workbook compared with another.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellKey.Equals(DevExpress.Spreadsheet.CellKey)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.CellKey"/> instance.</para>
      </summary>
      <param name="other">The <see cref="T:DevExpress.Spreadsheet.CellKey"/> object to compare with the current object.</param>
      <returns>true, if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.CellKey"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellKey.Equals(System.Object)">
      <summary>
        <para>Determines whether two cell keys are equal.</para>
      </summary>
      <param name="obj">The <see cref="T:DevExpress.Spreadsheet.CellKey"/> object to compare with the current cell key.</param>
      <returns>true, if the specified cell key is equal to the current <see cref="T:DevExpress.Spreadsheet.CellKey"/> instance; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellKey.GetHashCode">
      <summary>
        <para>Returns a number that identifies the object instance.</para>
      </summary>
      <returns>An integer that identifies the cell key instance.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellKey.op_Equality(DevExpress.Spreadsheet.CellKey,DevExpress.Spreadsheet.CellKey)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.CellKey"/> structures for equality.</para>
      </summary>
      <param name="index1">The first <see cref="T:DevExpress.Spreadsheet.CellKey"/> instance to compare.</param>
      <param name="index2">The second <see cref="T:DevExpress.Spreadsheet.CellKey"/> instance to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.CellKey"/> objects are equal; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellKey.op_Inequality(DevExpress.Spreadsheet.CellKey,DevExpress.Spreadsheet.CellKey)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.CellKey"/> structures to determine whether they are not equal.</para>
      </summary>
      <param name="index1">The first <see cref="T:DevExpress.Spreadsheet.CellKey"/> instance to compare.</param>
      <param name="index2">The second <see cref="T:DevExpress.Spreadsheet.CellKey"/> instance to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.CellKey"/> objects are not equal; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellKey.RowIndex">
      <summary>
        <para>Gets the index of the row that contains the current cell.</para>
      </summary>
      <value>A zero-based row index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellKey.SheetId">
      <summary>
        <para>Returns the ID of the worksheet that contains the current cell.</para>
      </summary>
      <value>An integer that is the worksheet’s ID.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellKey.ToLong">
      <summary>
        <para>Returns a number that uniquely identifies a cell in a workbook.</para>
      </summary>
      <returns>An <see cref="T:System.Int64"/> number that identifies a cell in a workbook.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellKey.ToString">
      <summary>
        <para>Returns a string representation of the cell key.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> that contains the column index, row index, worksheet index and a number that uniquely identifies a cell in a workbook.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.CellRange">
      <summary>
        <para>Defines a range of cells and serves as the base for the <see cref="T:DevExpress.Spreadsheet.Cell"/>, <see cref="T:DevExpress.Spreadsheet.CellCollection"/>, <see cref="T:DevExpress.Spreadsheet.Column"/> and <see cref="T:DevExpress.Spreadsheet.Row"/> interfaces.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Areas">
      <summary>
        <para>Provides access to the ranges that comprise a complex (union) range.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.AreasCollection"/> instance that is the collection of worksheet <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.ArrayFormula">
      <summary>
        <para>Gets or sets the array formula associated with the cell or cell range.</para>
      </summary>
      <value>A string that is the array formula.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.ArrayFormulaInvariant">
      <summary>
        <para>Gets or sets the array formula in the invariant culture.</para>
      </summary>
      <value>A string that is the array formula in the invariant culture (English).</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.BeginUpdateFormatting">
      <summary>
        <para>Starts modifying the cell range formatting.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formatting"/> object representing the cell range formatting.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.BottomRowIndex">
      <summary>
        <para>Gets the index of the row that includes the bottom edge of the cell range.</para>
      </summary>
      <value>An integer value specifying the zero-based index of the row.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.Calculate">
      <summary>
        <para>Forces recalculation of the current cell range.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.ColumnCount">
      <summary>
        <para>Gets the number of columns in the cell range.</para>
      </summary>
      <value>An integer that specifies the number of columns.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.ColumnWidth">
      <summary>
        <para>Gets or sets the width of columns that contain this cell range.</para>
      </summary>
      <value>The column width in measurement units defined by the Workbook.Unit property.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.ColumnWidthInCharacters">
      <summary>
        <para>Gets or sets the width of columns that contain the cell range in characters of the default font specified by the built-in Normal style.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the number of characters that can be accommodated into the column width when the column is formatted with the  built-in Normal style.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.Contains(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Determines whether the current cell range contains the specified range.</para>
      </summary>
      <param name="other">A cell range to be checked.</param>
      <returns>true, if the specified cell range is a part of the current range; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.CopyFrom(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.PasteSpecial,System.Boolean)">
      <summary>
        <para>Copies the source range of cells and pastes the specified part of the copied data into the current cell range.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the cell range to be copied.</param>
      <param name="pasteOptions">A <see cref="T:DevExpress.Spreadsheet.PasteSpecial"/> enumeration member that specifies which part of the copied data should be pasted into the current cell range.</param>
      <param name="overwriteProtectionOnLockedWorksheet">A <see cref="T:System.Boolean"/> value indicating whether cell protection options (<see cref="P:DevExpress.Spreadsheet.Formatting.Protection"/>) of the source range should be applied to the current range if it is located on the protected worksheet.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.CopyFrom(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.PasteSpecial)">
      <summary>
        <para>Copies the source range of cells and pastes the specified part of the copied data into the current cell range.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the cell range to be copied.</param>
      <param name="pasteOptions">A <see cref="T:DevExpress.Spreadsheet.PasteSpecial"/> enumeration member that specifies which part of the copied data should be pasted into the current cell range.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.CopyFrom(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Copies the specified range of cells into the current range.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the cell range to be copied.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.CurrentRegion">
      <summary>
        <para>Gets a range with non-empty cells surrounded by empty rows and columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the area containing non-empty rows and columns.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Dependents">
      <summary>
        <para>Gets a list of ranges (cells) whose formulas refer to the current range or cell, directly or indirectly (at any level).</para>
      </summary>
      <value>A list of ranges (cells) which are dependent of the current range or cell.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.DirectDependents">
      <summary>
        <para>Gets a list of ranges (cells) whose formulas use the current range or cell.</para>
      </summary>
      <value>A list of ranges (cells) with formulas which use the current range or cell directly.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.DirectPrecedents">
      <summary>
        <para>Gets a list of ranges (cells) that are directly referred to in the formulas in the current cell or range.</para>
      </summary>
      <value>A list of ranges (cells) on which the current range or cell directly depends.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.EndUpdateFormatting(DevExpress.Spreadsheet.Formatting)">
      <summary>
        <para>Finalizes the modification of the cell range formatting after calling the <see cref="M:DevExpress.Spreadsheet.CellRange.BeginUpdateFormatting"/> method.</para>
      </summary>
      <param name="newFormatting">A <see cref="T:DevExpress.Spreadsheet.Formatting"/> object representing the cell range formatting.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.Exclude(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Excludes the specified cell or cell range from the current range.</para>
      </summary>
      <param name="other">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the cell or cell range to be excluded from the source range.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the resulting contiguous or noncontiguous (union) range of cells.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.ExistingCells">
      <summary>
        <para>Gets the existing cells in the current cell range.</para>
      </summary>
      <value>An object implementing the <see cref="T:System.Collections.IEnumerable"/> interface that supports iteration over the cell collection.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.FillColor">
      <summary>
        <para>Gets or sets the cell background color.</para>
      </summary>
      <value>The cell background color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Formula">
      <summary>
        <para>Gets or sets the formula contained in the cell or cell range.</para>
      </summary>
      <value>A string expression that represents a formula contained in the cell or cell range. It starts with an equal sign (=).</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.FormulaInvariant">
      <summary>
        <para>Gets or sets the range formula in the invariant culture.</para>
      </summary>
      <value>A string that is the worksheet formula in the invariant culture (English).</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetDataSource">
      <summary>
        <para>Creates the data source from the current cell range.</para>
      </summary>
      <returns>An object that specifies the created data source.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetDataSource(DevExpress.Spreadsheet.RangeDataSourceOptions)">
      <summary>
        <para>Creates the data source from the current cell range using the specified options.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Spreadsheet.RangeDataSourceOptions"/> object containing the data source options.</param>
      <returns>An object that is the created data source.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetDefinedName">
      <summary>
        <para>Returns a defined name associated with the current range.</para>
      </summary>
      <returns>Specifies the name assigned to the current range. Null (Nothing in VB), if no name is found.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetDefinedName(DevExpress.Spreadsheet.DefinedNameScope)">
      <summary>
        <para>Returns a defined name declared in the specified scope and associated with the current cell range.</para>
      </summary>
      <param name="scope">Specifies the defined name’s scope.</param>
      <returns>Specifies the name assigned to the current range. Null (Nothing in VB), if no name is found.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetMergedRanges">
      <summary>
        <para>Returns merged ranges intersecting the current cell range.</para>
      </summary>
      <returns>A list of <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetMinimumCover">
      <summary>
        <para>Returns the cell range that covers the current range and does not contain the intersecting ranges.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is a contiguous or noncontiguous (union) range that covers the same cells as the current range excluding the intersecting areas.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetRangeWithAbsoluteReference">
      <summary>
        <para>Returns the copy of the source range with its reference replaced by the absolute reference.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object with the absolute reference.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetRangeWithRelativeReference">
      <summary>
        <para>Returns the copy of the source range with its reference replaced by the relative reference.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object with the relative reference.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetReferenceA1">
      <summary>
        <para>Gets the relative cell or cell range reference in the A1 reference style.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value that specifies the A1-style relative reference to a cell or range of cells.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetReferenceA1(DevExpress.Spreadsheet.ReferenceElement)">
      <summary>
        <para>Gets the cell or cell range reference in the A1 reference style.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Spreadsheet.ReferenceElement"/> enumeration values that specify whether to return the relative, absolute or mixed cell reference, and whether to precede it with the worksheet name.</param>
      <returns>A <see cref="T:System.String"/> value that specifies the A1-style reference to a cell or range of cells.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetReferenceR1C1(DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Gets the relative cell or cell range reference in the R1C1 reference style.</para>
      </summary>
      <param name="baseCell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that specifies the base cell relative to which the relative cell reference should be obtained.</param>
      <returns>A <see cref="T:System.String"/> value that specifies the R1C1-style relative reference to a cell or range of cells.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetReferenceR1C1(DevExpress.Spreadsheet.ReferenceElement,DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Gets the cell or cell range reference in the R1C1 reference style.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Spreadsheet.ReferenceElement"/> enumeration values that specify whether to return the relative, absolute or mixed cell reference, and whether to precede it with the worksheet name.</param>
      <param name="baseCell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that specifies the base cell relative to which the relative elements of the cell reference (row or column, or both) should be obtained, if the cell reference is relative or mixed. If the cell reference is absolute, pass null (Nothing in Visual Basic).</param>
      <returns>A <see cref="T:System.String"/> value that specifies the R1C1-style reference to a cell or range of cells.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.GetRichText">
      <summary>
        <para>Gets the rich text string contained in a cell.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.RichTextString"/> object that is a cell’s rich text.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.HasArrayFormula">
      <summary>
        <para>Determines whether the current cell or cell range intersects a range filled with an array formula.</para>
      </summary>
      <value>true, if the current range intersects an array formula range; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.HasData">
      <summary>
        <para>Checks whether the current cell range contains data.</para>
      </summary>
      <value>true, if any cell in the current range contains a value or formula; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.HasFormula">
      <summary>
        <para>Determines whether all cells in the range contain a formula.</para>
      </summary>
      <value>true, if all cells in the range contain a formula; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.HasRichText">
      <summary>
        <para>Gets a value indicating whether a cell contains rich formatted text.</para>
      </summary>
      <value>true, if a cell contains rich formatted text; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.Intersect(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Returns the cell range that is the intersection of the current and specified ranges.</para>
      </summary>
      <param name="other">A cell range to be checked for intersection with current range.</param>
      <returns>A cell range that is the intersection of the specified ranges. If ranges do not intersect, null (Nothing in Visual Basic) is returned.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.IsIntersecting(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Determines whether the current range intersects with the specified range.</para>
      </summary>
      <param name="other">A cell range to be checked.</param>
      <returns>true if ranges intersect; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.IsMerged">
      <summary>
        <para>Determines whether the range is created by merging cells.</para>
      </summary>
      <value>true, if the range is a single merged cell; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Item(System.Int32,System.Int32)">
      <summary>
        <para>Gets an individual cell by row and column offsets from the top left cell of the current range.</para>
      </summary>
      <param name="rowOffset">A zero-based integer specifying the row offset relative to the top row of the range.</param>
      <param name="columnOffset">A zero-based integer specifying the column offset relative to the left column of the range.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that specifies the cell located at the specified position relative to the range of cells.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Item(System.Int32)">
      <summary>
        <para>Gets an individual cell by its index in the range of cells.</para>
      </summary>
      <param name="position">A zero-based integer specifying the cell position in the range. If it’s negative or exceeds the last available index, an exception is raised.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that specifies the cell located at the specified position in the range of cells.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.LeftColumnIndex">
      <summary>
        <para>Gets the index of the column that includes the left edge of the cell range.</para>
      </summary>
      <value>An integer value specifying the zero-based index of the column.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.MoveTo(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Moves a range to a specified location.</para>
      </summary>
      <param name="target">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the destination where the current range shall be moved.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Name">
      <summary>
        <para>Gets or sets the name of the cell range.</para>
      </summary>
      <value>A string that specifies the name associated with the cell range.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.Offset(System.Int32,System.Int32)">
      <summary>
        <para>Returns a cell range that is a given number of rows and columns from the current range.</para>
      </summary>
      <param name="rowCount">The number of rows by which the cell range should be offset (positive value—range is offset down, negative value—range is offset up, zero—range is not offset vertically).</param>
      <param name="columnCount">The number of columns by which the cell range should be offset (positive value—range is offset to the right, negative value—range is offset to the left, zero—range is not offset horizontally).</param>
      <returns>The cell range that is offset from the current range.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Precedents">
      <summary>
        <para>Gets a list of ranges (cells) that are used by a formula in the current cell or range.</para>
      </summary>
      <value>A list of ranges (cells) on which the current range or cell depends.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.Resize(System.Int32,System.Int32)">
      <summary>
        <para>Resizes the current cell range.</para>
      </summary>
      <param name="rowCount">The number of rows in the new range.</param>
      <param name="columnCount">The number of columns in the new range.</param>
      <returns>The resized cell range.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.RightColumnIndex">
      <summary>
        <para>Gets the index of the column that includes the right edge of the cell range.</para>
      </summary>
      <value>An integer value specifying the zero-based index of the column.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.RowCount">
      <summary>
        <para>Gets the number of rows in the cell range.</para>
      </summary>
      <value>An integer that specifies the number of rows.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.RowHeight">
      <summary>
        <para>Gets or sets the height of rows that contain this cell range.</para>
      </summary>
      <value>The row height in measurement units defined by the Workbook.Unit property.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.Search(System.String,DevExpress.Spreadsheet.SearchOptions)">
      <summary>
        <para>Performs a search in the cell range using specified options.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> representing the search text.</param>
      <param name="options">A <see cref="T:DevExpress.Spreadsheet.SearchOptions"/> instance containing required search options.</param>
      <returns>An object implementing the <see cref="T:System.Collections.IEnumerable"/> interface which is the collection of cells that match the search term.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.Search(System.String)">
      <summary>
        <para>Performs a search in the cell range using the default parameters.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> representing the search text.</param>
      <returns>An object implementing the <see cref="T:System.Collections.IEnumerable"/> interface which is the collection of cells that match the search term.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.SetInsideBorders(System.Drawing.Color,DevExpress.Spreadsheet.BorderLineStyle)">
      <summary>
        <para>Sets all inside borders of the cell range.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> value specifying the line color of borders.</param>
      <param name="style">A <see cref="T:DevExpress.Spreadsheet.BorderLineStyle"/> enumeration member specifying the line style of borders.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.SetRichText(DevExpress.Spreadsheet.RichTextString)">
      <summary>
        <para>Assigns the rich formatted text to a cell.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.RichTextString"/> object that is a combination of specifically formatted text regions.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.SetValue(System.Object)">
      <summary>
        <para>Converts the specified object to the cell value.</para>
      </summary>
      <param name="value">An object specifying the data to be assigned to the cell value.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.SetValueFromText(System.String,System.Boolean)">
      <summary>
        <para>Parses the supplied string and creates a cell value to assign it to the cells in the current range.</para>
      </summary>
      <param name="value">A string to parse.</param>
      <param name="preserveNumberFormat">True, to apply the number format which the cell contains; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.SetValueFromText(System.String)">
      <summary>
        <para>Parses the supplied string and creates a cell value to assign it to the cells in the current range.</para>
      </summary>
      <param name="value">A string to parse.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Style">
      <summary>
        <para>Gets or sets the style applied to the current range of cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Style"/> object that specifies the cell style. If the range includes cells formatted in different styles, the Style property of this range object returns null (Nothing in VB).</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.TopRowIndex">
      <summary>
        <para>Gets the index of the row that includes the top edge of the cell range.</para>
      </summary>
      <value>An integer value specifying the zero-based index of the row.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellRange.Union(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a complex range that is the union of multiple ranges.</para>
      </summary>
      <param name="other">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> composed of multiple ranges.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Value">
      <summary>
        <para>Gets or sets a cell value.</para>
      </summary>
      <value>A cell value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellRange.Worksheet">
      <summary>
        <para>Gets the worksheet that contains the cell range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that specifies the worksheet that contains the range of cells.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>A data value contained in a cell.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.BooleanValue">
      <summary>
        <para>Returns a Boolean value contained in a cell.</para>
      </summary>
      <value>A <see cref="T:System.Boolean"/> value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.DateTimeValue">
      <summary>
        <para>Returns the date and time value that corresponds to the number contained in a cell.</para>
      </summary>
      <value>A <see cref="T:System.DateTime"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.DefaultConverter">
      <summary>
        <para>Provides access to the default converter which is used to convert objects of basic data types to cell values, and vise versa.</para>
      </summary>
      <value>An object implementing the ICellValueConverter interface.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.Empty">
      <summary>
        <para>Returns an empty cell value.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object specifying an empty value of a cell.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.Equals(System.Object)">
      <summary>
        <para>Determines whether two objects are equal.</para>
      </summary>
      <param name="obj">The <see cref="T:DevExpress.Spreadsheet.CellValue"/> object to compare with the current object.</param>
      <returns>true, if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.CellValue"/> instance; otherwise, false.</returns>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValue.ErrorDivisionByZero">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.CellValue"/> object specifying the #DIV/0! error value of a cell.</para>
      </summary>
      <value>A cell error value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValue.ErrorInvalidValueInFunction">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.CellValue"/> object specifying the #VALUE! error value of a cell.</para>
      </summary>
      <value>A cell error value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValue.ErrorName">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.CellValue"/> object specifying the #NAME? error value of a cell.</para>
      </summary>
      <value>A cell error value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValue.ErrorNullIntersection">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.CellValue"/> object specifying the #NULL! error value of a cell.</para>
      </summary>
      <value>A cell error value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValue.ErrorNumber">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.CellValue"/> object specifying the #NUM! error value of a cell.</para>
      </summary>
      <value>A cell error value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValue.ErrorReference">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.CellValue"/> object specifying the #REF! error value of a cell.</para>
      </summary>
      <value>A cell error value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.ErrorValue">
      <summary>
        <para>Returns an object that provides information on an error contained in a cell.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.ErrorValueInfo"/> object that contains information on a cell error.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValue.ErrorValueNotAvailable">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.CellValue"/> object specifying the #N/A error value of a cell.</para>
      </summary>
      <value>A cell error value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.FromDateTime(System.DateTime,System.Boolean)">
      <summary>
        <para>Converts the <see cref="T:System.DateTime"/> object to a cell value using the specified date system.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> object that specifies a date and time value to be converted to a cell value.</param>
      <param name="use1904DateSystem">true, if the 1904 date system is used; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.FromObject(System.Object,DevExpress.Spreadsheet.ICellValueConverter)">
      <summary>
        <para>Converts the specified object to a cell value using the custom converter.</para>
      </summary>
      <param name="value">An object to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <param name="converter">A custom converter object that implements the ICellValueConverter interface.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object. If the conversion cannot be performed, an InvalidCastException is thrown.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.FromObject(System.Object)">
      <summary>
        <para>Converts the specified object to a cell value using the default converter.</para>
      </summary>
      <param name="value">An object to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object. If the conversion cannot be performed, an InvalidCastException is thrown.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Spreadsheet.CellValue"/> object.</para>
      </summary>
      <returns>The hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.IsBoolean">
      <summary>
        <para>Gets whether the cell contains a Boolean value.</para>
      </summary>
      <value>true, if the cell value is of the Boolean type; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.IsDateTime">
      <summary>
        <para>Gets whether the cell’s numeric value is displayed as date and time.</para>
      </summary>
      <value>true, if the number contained in a cell is displayed as data and time; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.IsEmpty">
      <summary>
        <para>Gets whether the cell is empty.</para>
      </summary>
      <value>true, if the cell is empty; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.IsError">
      <summary>
        <para>Gets whether the cell contains an error.</para>
      </summary>
      <value>true, if the cell value is of the error type; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.IsNumeric">
      <summary>
        <para>Gets whether the cell contains a number.</para>
      </summary>
      <value>true, if the cell value is of the numeric type; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.IsText">
      <summary>
        <para>Gets whether the cell contains text.</para>
      </summary>
      <value>true, if the cell value is of the text type; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.NumericValue">
      <summary>
        <para>Returns a number contained in a cell.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value specifying a cell value of the numeric type.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Equality(DevExpress.Spreadsheet.CellValue,DevExpress.Spreadsheet.CellValue)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects for equality.</para>
      </summary>
      <param name="value">The first <see cref="T:DevExpress.Spreadsheet.CellValue"/> object to compare.</param>
      <param name="other">The second <see cref="T:DevExpress.Spreadsheet.CellValue"/> object to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects are equal; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(DevExpress.Spreadsheet.ErrorType)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts a value of error type to a cell value.</para>
      </summary>
      <param name="value">An <see cref="T:DevExpress.Spreadsheet.ErrorType"/> enumeration member that specifies an error to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.Boolean)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Boolean"/> value to a cell value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Boolean"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.Char)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Char"/> value to a cell value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Char"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.DateTime)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.DateTime"/> value to a cell value.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.Decimal)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Decimal"/> value to a cell value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Decimal"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.Double)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Double"/> value to a cell value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Double"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.Int32)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts an <see cref="T:System.Int32"/> value to a cell value.</para>
      </summary>
      <param name="value">An <see cref="T:System.Int32"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.Int64)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts an <see cref="T:System.Int64"/> value to a cell value.</para>
      </summary>
      <param name="value">An <see cref="T:System.Int64"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.Single)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Single"/> value to a cell value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Single"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.String)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.String"/> value to a cell value.</para>
      </summary>
      <param name="value">A <see cref="T:System.String"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Implicit(System.TimeSpan)~DevExpress.Spreadsheet.CellValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.TimeSpan"/> value to a cell value.</para>
      </summary>
      <param name="value">A <see cref="T:System.TimeSpan"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.op_Inequality(DevExpress.Spreadsheet.CellValue,DevExpress.Spreadsheet.CellValue)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects to determine whether they are not equal.</para>
      </summary>
      <param name="value">The first <see cref="T:DevExpress.Spreadsheet.CellValue"/> object to compare.</param>
      <param name="other">The second <see cref="T:DevExpress.Spreadsheet.CellValue"/> object to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects are not equal; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.TextValue">
      <summary>
        <para>Returns a string contained in a cell.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value specifying the text value of a cell.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.ToObject">
      <summary>
        <para>Converts the cell value to an object using the default converter.</para>
      </summary>
      <returns>A <see cref="T:System.Object"/> converted from the cell value.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.ToObject(DevExpress.Spreadsheet.ICellValueConverter)">
      <summary>
        <para>Converts the cell value to an object using the specified converter.</para>
      </summary>
      <param name="converter">A custom converter object that implements the ICellValueConverter interface.</param>
      <returns>A <see cref="T:System.Object"/> converted from the cell value.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.ToString">
      <summary>
        <para>Returns a string representation of the cell value.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Spreadsheet.CellValue"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.ToString(System.IFormatProvider)">
      <summary>
        <para>Returns a string representation of the cell value.</para>
      </summary>
      <param name="formatProvider">An object implementing the <see cref="T:System.IFormatProvider"/> interface.</param>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Spreadsheet.CellValue"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.TryCreateFromObject(System.Object,DevExpress.Spreadsheet.ICellValueConverter)">
      <summary>
        <para>Tries to convert the specified object to a cell value using the custom converter.</para>
      </summary>
      <param name="value">An object to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <param name="converter">A custom converter object that implements the ICellValueConverter interface.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object. If the conversion cannot be performed, the TryCreateFromObject method returns null (Nothing in VB).</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CellValue.TryCreateFromObject(System.Object)">
      <summary>
        <para>Tries to convert the specified object to a cell value using the default converter.</para>
      </summary>
      <param name="value">An object to be converted to a <see cref="T:DevExpress.Spreadsheet.CellValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object. If the conversion cannot be performed, the TryCreateFromObject method returns null (Nothing in VB).</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.CellValue.Type">
      <summary>
        <para>Gets the type of data contained in a cell.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValueType"/> enumerator member that specifies the cell value type.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CellValueType">
      <summary>
        <para>Lists the data types of cell values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValueType.Boolean">
      <summary>
        <para>The cell contains data of the boolean type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValueType.DateTime">
      <summary>
        <para>The cell contains a number that is displayed as date and time.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValueType.Error">
      <summary>
        <para>The cell contains data of the error type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValueType.None">
      <summary>
        <para>The cell contains an empty value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValueType.Numeric">
      <summary>
        <para>The cell contains data of the numeric type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValueType.Text">
      <summary>
        <para>The cell contains data of the text type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CellValueType.Unknown">
      <summary>
        <para>The type of data contained in the cell is unknown.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Spreadsheet.Charts">
      <summary>
        <para>Contains interfaces and enumerations which implement the spreadsheet charting functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.Axis">
      <summary>
        <para>Represents an axis on a chart.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.Auto">
      <summary>
        <para>Gets or sets a value indicating whether the category axis type should be selected automatically based on data.</para>
      </summary>
      <value>true, to automatically select the type of the category axis; otherwise, false. The default is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.AutoMajorUnit">
      <summary>
        <para>Gets whether the major unit for the value or date axis is evaluated automatically.</para>
      </summary>
      <value>true, if the major unit is calculated automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.AutoMinorUnit">
      <summary>
        <para>Gets whether the minor unit for the value or date axis is evaluated automatically.</para>
      </summary>
      <value>true, if the minor unit is calculated automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.AxisType">
      <summary>
        <para>Returns the type of the chart axis.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisType"/> enumeration value specifying the type of the axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.BaseTimeUnit">
      <summary>
        <para>Gets or sets the base unit for the date axis.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisTimeUnits"/> enumeration value specifying the base time unit.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.CrossesAt">
      <summary>
        <para>Specifies a point on the perpendicular axis at which the current and perpendicular axes should cross.</para>
      </summary>
      <value>The intersection point on the perpendicular axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.CrossPosition">
      <summary>
        <para>Gets or sets a value that specifies where the value axis crosses the category axis on a 2-D chart.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisCrossPosition"/> enumeration value specifying the crossing point location.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.CrossType">
      <summary>
        <para>Specifies where the current axis crosses the perpendicular axis.</para>
      </summary>
      <value>An enumeration member that specifies the axis intersection point.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.DisplayUnits">
      <summary>
        <para>Provides access to options used to specify the display units for the value axis.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.DisplayUnitOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.LabelAlignment">
      <summary>
        <para>Gets or sets the text alignment for the tick-mark labels on the category axis.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisLabelAlignment"/> enumeration value that specifies how the label text should be aligned.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.LabelOffset">
      <summary>
        <para>Gets or sets a value that specifies the space between labels and the category axis.</para>
      </summary>
      <value>An integer value that is the label distance from the axis. This value must be between 0 and 1000.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.MajorGridlines">
      <summary>
        <para>Provides access to settings used to draw the major gridlines on the chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartLineOptions"/> object containing chart line display options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.MajorTickMarks">
      <summary>
        <para>Gets or sets the position of major tick marks on the axis.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisTickMarks"/> enumeration value that specifies how major tick marks are displayed on the axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.MajorTimeUnit">
      <summary>
        <para>Gets or sets the time unit for major tick marks on the date axis.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisTimeUnits"/> enumeration value specifying the time unit.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.MajorUnit">
      <summary>
        <para>Gets or sets the distance between the major tick marks and major gridlines on the chart.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the major unit for the value or date axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.MinorGridlines">
      <summary>
        <para>Provides access to settings used to draw the minor gridlines on the chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartLineOptions"/> object containing chart line display options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.MinorTickMarks">
      <summary>
        <para>Gets or sets the position of minor tick marks on the axis.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisTickMarks"/> enumeration value that specifies how minor tick marks are displayed on the axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.MinorTimeUnit">
      <summary>
        <para>Gets or sets the time unit for minor tick marks on the date axis.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisTimeUnits"/> enumeration value specifying the time unit.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.MinorUnit">
      <summary>
        <para>Gets or sets the distance between the minor tick marks and minor gridlines on the chart.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the minor unit for the value or date axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.NoMultilevelLabels">
      <summary>
        <para>Gets or sets a value indicating whether the multi-level category labels should not be used.</para>
      </summary>
      <value>true, to display axis labels as plain text without hierarchy; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.NumberFormat">
      <summary>
        <para>Provides access to number format options for numerical values displayed in axis labels.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.NumberFormatOptions"/> object that contains formatting options for displaying numbers.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.Position">
      <summary>
        <para>Gets or sets the axis position on the chart.</para>
      </summary>
      <value>An enumeration value that specifies the axis position.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.Scaling">
      <summary>
        <para>Provides access to the axis scaling settings.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisScaling"/> object that contains settings used to change the scale of the axis on the chart.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.Axis.SetAutoMajorUnit">
      <summary>
        <para>Automatically evaluates the distance between the major tick marks and major gridlines for the value or date axis.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.Axis.SetAutoMinorUnit">
      <summary>
        <para>Automatically evaluates the distance between the minor tick marks and minor gridlines for the value or date axis.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.TickLabelPosition">
      <summary>
        <para>Gets or sets the position of the tick-mark labels on the axis.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisTickLabelPosition"/> enumeration value specifying the label position.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.TickLabelSkip">
      <summary>
        <para>Gets or sets the number of categories or series between the tick-mark labels on the category or series axis.</para>
      </summary>
      <value>An integer value that specifies the number of tick-mark labels to be skipped between the drawn labels.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.TickMarkSkip">
      <summary>
        <para>Gets or sets the number of categories or series between the tick-marks on the category or series axis.</para>
      </summary>
      <value>An integer value that specifies the number of tick-marks to be skipped between the adjacent drawn tick-marks.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.Title">
      <summary>
        <para>Provides access to options used to display and format the axis title.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartTitleOptions"/> object containing display settings for titles on a chart.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Axis.Visible">
      <summary>
        <para>Gets or sets a value indicating whether the axis should be displayed.</para>
      </summary>
      <value>true, if the axis is visible; otherwise, false. The default is true.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisCollection">
      <summary>
        <para>A collection that stores axes in the chart.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.AxisCollection.Contains(DevExpress.Spreadsheet.Charts.Axis)">
      <summary>
        <para>Determines whether the collection contains the specified axis.</para>
      </summary>
      <param name="axis">An <see cref="T:DevExpress.Spreadsheet.Charts.Axis"/> to locate in the collection.</param>
      <returns>true, if the collection contains the specified axis; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.AxisCollection.IndexOf(DevExpress.Spreadsheet.Charts.Axis)">
      <summary>
        <para>Returns the index of the specified axis in the collection.</para>
      </summary>
      <param name="axis">An <see cref="T:DevExpress.Spreadsheet.Charts.Axis"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the axis position within the collection. &#0045;1 if the axis doesn’t belong to the collection.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisCrossPosition">
      <summary>
        <para>Lists values used to specify the position of the crossing point where the value and category axes intersect.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisCrossPosition.BetweenTickMarks">
      <summary>
        <para>Specifies that the value axis should cross the category axis between data markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisCrossPosition.OnTickMarks">
      <summary>
        <para>Specifies that the value axis should cross the category axis at the midpoint of a category.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisCrossType">
      <summary>
        <para>Lists values that specify the intersection point for chart axes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisCrossType.Auto">
      <summary>
        <para>The axis intersection point is zero, the minimum value (if minimum is greater than zero), or the maximum value (if maximum is less than zero).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisCrossType.Custom">
      <summary>
        <para>The <see cref="P:DevExpress.Spreadsheet.Charts.Axis.CrossesAt"/> property defines the axis intersection point.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisCrossType.Max">
      <summary>
        <para>The intersection point is the maximum value on the perpendicular axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisCrossType.Min">
      <summary>
        <para>The intersection point is the minimum value on the perpendicular axis.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisGroup">
      <summary>
        <para>Lists values used to specify the type of axis group for a series in a chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisGroup.Primary">
      <summary>
        <para>Specifies the group of primary axes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisGroup.Secondary">
      <summary>
        <para>Specifies the group of secondary axes.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisLabelAlignment">
      <summary>
        <para>Lists values used to specify the text alignment for the category axis labels.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisLabelAlignment.Center">
      <summary>
        <para>Specifies that the axis label text should be centered.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisLabelAlignment.Left">
      <summary>
        <para>Specifies that the axis label text should be aligned to the left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisLabelAlignment.Right">
      <summary>
        <para>Specifies that the axis label text should be aligned to the right.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisOrientation">
      <summary>
        <para>Lists values used to specify the orientation of the axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisOrientation.MaxMin">
      <summary>
        <para>Specifies that the axis must be reversed, so the axis starts at the maximum value and ends at the minimum value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisOrientation.MinMax">
      <summary>
        <para>Specifies that the axis must be displayed in the usual order, so the axis starts at the minimum value and ends at the maximum value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisPosition">
      <summary>
        <para>Lists values that specify the axis position on a chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisPosition.Bottom">
      <summary>
        <para>Specifies that the axis must be displayed at the bottom of the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisPosition.Left">
      <summary>
        <para>Specifies that the axis must be displayed to the left of the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisPosition.Right">
      <summary>
        <para>Specifies that the axis must be displayed to the right of the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisPosition.Top">
      <summary>
        <para>Specifies that the axis must be displayed at the top of the plot area.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisScaling">
      <summary>
        <para>Contains axis scaling options.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.AxisScaling.AutoMax">
      <summary>
        <para>Gets or sets a value indicating whether the maximum value of the numerical or date axis should be set automatically based on the worksheet data.</para>
      </summary>
      <value>true, to calculate the maximum axis value automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.AxisScaling.AutoMin">
      <summary>
        <para>Gets or sets a value indicating whether the minimum value of the numerical or date axis should be set automatically based on the worksheet data.</para>
      </summary>
      <value>true, to calculate the minimum axis value automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.AxisScaling.LogBase">
      <summary>
        <para>Gets or sets a value specifying a logarithmic base for the logarithmic axis.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the logarithmic base. This value must be greater than or equal to two.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.AxisScaling.LogScale">
      <summary>
        <para>Gets or sets a value indicating whether the value axis should display its numerical values using a logarithmic scale.</para>
      </summary>
      <value>true, to use the logarithmic axis; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.AxisScaling.Max">
      <summary>
        <para>Gets or sets the maximum value of the numerical or date axis. This may not be the same as the maximum value of the series associated with the axis.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the maximum value to display on the axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.AxisScaling.Min">
      <summary>
        <para>Gets or sets the minimum value of the numerical or date axis. This may not be the same as the minimum value of the series associated with the axis.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the minimum value to display on the axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.AxisScaling.Orientation">
      <summary>
        <para>Gets or sets the orientation of the axis on the chart.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisOrientation"/> enumeration value specifying the axis orientation.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisTickLabelPosition">
      <summary>
        <para>Lists values used to specify the position of axis labels.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTickLabelPosition.High">
      <summary>
        <para>Specifies that axis labels should be displayed at the top of the chart (for the category and series axes) or on the right side of the chart (for the value axis).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTickLabelPosition.Low">
      <summary>
        <para>Specifies that axis labels should be displayed at the bottom of the chart (for the category and series axes) or on the left side of the chart (for the value axis).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTickLabelPosition.NextTo">
      <summary>
        <para>Specifies that axis labels should be displayed next to the axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTickLabelPosition.None">
      <summary>
        <para>Specifies that axis labels should not be displayed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisTickMarks">
      <summary>
        <para>Lists values used to specify the position of the tick marks on the axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTickMarks.Cross">
      <summary>
        <para>Specifies that the tick marks should cross the axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTickMarks.Inside">
      <summary>
        <para>Specifies that the tick marks should be displayed inside the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTickMarks.None">
      <summary>
        <para>Specifies that the tick marks should not be displayed on the axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTickMarks.Outside">
      <summary>
        <para>Specifies that the tick marks should be displayed outside the plot area.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisTimeUnits">
      <summary>
        <para>Lists values used to specify the time units for the date axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTimeUnits.Auto">
      <summary>
        <para>Specifies that the time unit for the date axis should be set automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTimeUnits.Days">
      <summary>
        <para>Specifies that days should be used as the time unit for the date axis, so the chart data will be plotted along the axis in days.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTimeUnits.Months">
      <summary>
        <para>Specifies that months should be used as the time unit for the date axis, so the chart data will be plotted along the axis in months.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisTimeUnits.Years">
      <summary>
        <para>Specifies that years should be used as the time unit for the date axis, so the chart data will be plotted along the axis in years.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.AxisType">
      <summary>
        <para>Lists values used to specify the type of the axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisType.Category">
      <summary>
        <para>Specifies the category axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisType.Date">
      <summary>
        <para>Specifies the date axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisType.Series">
      <summary>
        <para>Specifies the depth (series) axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.AxisType.Value">
      <summary>
        <para>Specifies the value axis.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.BarShape">
      <summary>
        <para>Lists shapes used to visualize a data point in 3D bar or column charts.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.BarShape.Auto">
      <summary>
        <para>Default shape for the series type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.BarShape.Box">
      <summary>
        <para />
        <para>Box.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.BarShape.Cone">
      <summary>
        <para />
        <para>Cone narrowing to value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.BarShape.ConeToMax">
      <summary>
        <para />
        <para>Cone truncated at value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.BarShape.Cylinder">
      <summary>
        <para />
        <para>Cylinder.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.BarShape.Pyramid">
      <summary>
        <para />
        <para>Pyramid narrowing to value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.BarShape.PyramidToMax">
      <summary>
        <para />
        <para>Pyramid truncated at value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.BoxAndWhiskerSeriesOptions">
      <summary>
        <para>Contains options for box and whisker data series.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.BoxAndWhiskerSeriesOptions.QuartileCalculationMethod">
      <summary>
        <para>Specifies whether the quartile calculation includes or excludes the median.</para>
      </summary>
      <value>An enumeration member that specifies the quartile calculation method.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.BoxAndWhiskerSeriesOptions.ShowInnerPoints">
      <summary>
        <para>Specifies whether to show inner data points that lie between the lower and upper whisker lines.</para>
      </summary>
      <value>true to display the inner points; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.BoxAndWhiskerSeriesOptions.ShowMeanLine">
      <summary>
        <para>Specifies whether to display a line that connects the means of boxes in the series.</para>
      </summary>
      <value>true to display the mean line; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.BoxAndWhiskerSeriesOptions.ShowMeanMarkers">
      <summary>
        <para>Specifies whether to show the mean markers.</para>
      </summary>
      <value>true to display the mean markers; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.BoxAndWhiskerSeriesOptions.ShowOutlierPoints">
      <summary>
        <para>Specifies whether to show outlier data points that lie either below the lower whisker line or above the upper whisker line.</para>
      </summary>
      <value>true to display the outlier points; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.BubbleSizeRepresents">
      <summary>
        <para>Lists values used to specify what the bubble size represents on a bubble chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.BubbleSizeRepresents.Area">
      <summary>
        <para>Specifies that the bubble area should be proportional to the bubble size value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.BubbleSizeRepresents.Width">
      <summary>
        <para>Specifies that the bubble radius should be proportional to the bubble size value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.Chart">
      <summary>
        <para>An embedded chart on a worksheet.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> objects in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartCollection.Add(DevExpress.Spreadsheet.Charts.ChartType,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a chart of the specified type with data from the specified range and adds the chart to the collection.</para>
      </summary>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> containing chart data.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> object that is the chart embedded in a worksheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartCollection.Add(DevExpress.Spreadsheet.Charts.ChartType)">
      <summary>
        <para>Creates a chart of the specified type and adds it to the collection.</para>
      </summary>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> object that is the chart embedded in a worksheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartCollection.Clear">
      <summary>
        <para>Removes all objects from the <see cref="T:DevExpress.Spreadsheet.Charts.ChartCollection"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartCollection.Contains(DevExpress.Spreadsheet.Charts.Chart)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="chart">A <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> object to search for.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartCollection.GetChartById(System.Int32)">
      <summary>
        <para>Gets a chart by its ID value.</para>
      </summary>
      <param name="id">An integer value specifying the chart’s unique identifier.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> object representing the chart with the specified identifier.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartCollection.GetCharts(System.String)">
      <summary>
        <para>Get chart(s) by name.</para>
      </summary>
      <param name="chartName">A string that is the name of a chart.</param>
      <returns>A collection of charts with the same name.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartCollection.IndexOf(DevExpress.Spreadsheet.Charts.Chart)">
      <summary>
        <para>Returns the index of the specified chart in the collection.</para>
      </summary>
      <param name="chart">A <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the chart position within the collection. &#0045;1 if the chart does not belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartCollection.Remove(DevExpress.Spreadsheet.Charts.Chart)">
      <summary>
        <para>Removes the specified chart from a collection.</para>
      </summary>
      <param name="chart">A string that is the name of the <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> to remove.</param>
      <returns>true if the specified chart is contained in the collection and successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the element at the specified index of the <see cref="T:DevExpress.Spreadsheet.Charts.ChartCollection"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the object to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartColorPalette">
      <summary>
        <para>Lists color palettes for Microsoft&#174; Excel&#174; 2016 charts.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Colorful1">
      <summary>
        <para>Tints and shades of the Accent 1 through Accent 6 theme colors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Colorful2">
      <summary>
        <para>Tints and shades of the Accent 1, Accent 3, and Accent 5 theme colors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Colorful3">
      <summary>
        <para>Tints and shades of the Accent 2, Accent 4, and Accent 6 theme colors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Colorful4">
      <summary>
        <para>Tints and shades of the Accent 6, Accent 5, and Accent 4 theme colors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic1">
      <summary>
        <para>A gradient of the Accent 1 theme color (dark to light).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic10">
      <summary>
        <para>A gradient of the Accent 3 theme color (light to dark).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic11">
      <summary>
        <para>A gradient of the Accent 4 theme color (light to dark).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic12">
      <summary>
        <para>A gradient of the Accent 5 theme color (light to dark).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic13">
      <summary>
        <para>A gradient of the Accent 6 theme color (light to dark).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic2">
      <summary>
        <para>A gradient of the Accent 2 theme color (dark to light).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic3">
      <summary>
        <para>A gradient of the Accent 3 theme color (dark to light).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic4">
      <summary>
        <para>A gradient of the Accent 4 theme color (dark to light).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic5">
      <summary>
        <para>A gradient of the Accent 5 theme color (dark to light).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic6">
      <summary>
        <para>A gradient of the Accent 6 theme color (dark to light).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic7">
      <summary>
        <para>Tints of the Dark 1 theme color.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic8">
      <summary>
        <para>A gradient of the Accent 1 theme color (light to dark).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartColorPalette.Monochromatic9">
      <summary>
        <para>A gradient of the Accent 2 theme color (light to dark).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartData">
      <summary>
        <para>Data plotted on a chart.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.ArrayValue">
      <summary>
        <para>Gets the array of values from the chart data.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.BooleanValue">
      <summary>
        <para>Gets or sets the boolean value of the chart data.</para>
      </summary>
      <value>A boolean value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.Empty">
      <summary>
        <para>Returns empty chart data.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying an empty cell value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.Equals(System.Object)">
      <summary>
        <para>Determines whether two objects are equal.</para>
      </summary>
      <param name="obj">The <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object to compare with the current object.</param>
      <returns>true, if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> instance; otherwise, false.</returns>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartData.ErrorDivisionByZero">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying the #DIV/0! error value of a cell.</para>
      </summary>
      <value>The chart data.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartData.ErrorInvalidValueInFunction">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying the #VALUE! error value of a cell.</para>
      </summary>
      <value>The chart data.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartData.ErrorName">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying the #NAME? error value of a cell.</para>
      </summary>
      <value>The chart data.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartData.ErrorNullIntersection">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying the #NULL! error value of a cell.</para>
      </summary>
      <value>The chart data.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartData.ErrorNumber">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying the #NUM! error value of a cell.</para>
      </summary>
      <value>The chart data.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartData.ErrorReference">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying the #REF! error value of a cell.</para>
      </summary>
      <value>The chart data.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.ErrorValue">
      <summary>
        <para>Returns an object that provides information on an error contained in a cell.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.ErrorValueInfo"/> object that contains information on a cell error.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartData.ErrorValueNotAvailable">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying the #N/A error value of a cell.</para>
      </summary>
      <value>The chart data.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.FromArray(DevExpress.Spreadsheet.CellValue[])">
      <summary>
        <para>Converts an array of values to chart data.</para>
      </summary>
      <param name="values">An array of values.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.FromDateTime(System.DateTime,System.Boolean)">
      <summary>
        <para>Converts the <see cref="T:System.DateTime"/> object to chart data using the specified date system.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> object that specifies a date and time value to be converted.</param>
      <param name="use1904DateSystem">true, if the 1904 date system is used; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.FromRange(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Converts cell values to chart data for cells in the specified range.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the cell range of the worksheet.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</para>
      </summary>
      <returns>The hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.IsArray">
      <summary>
        <para>Gets whether the chart data is an array of values.</para>
      </summary>
      <value>true, if the chart data is an array of values; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.IsBoolean">
      <summary>
        <para>Gets whether the chart data contains a Boolean value.</para>
      </summary>
      <value>true, if the chart data is of the Boolean type; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.IsEmpty">
      <summary>
        <para>Gets whether the chart data is empty.</para>
      </summary>
      <value>true, if the chart data is empty; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.IsError">
      <summary>
        <para>Gets whether the cell contains an error.</para>
      </summary>
      <value>true, if the cell value is of the error type; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.IsNumeric">
      <summary>
        <para>Gets whether the chart data is of the numeric type.</para>
      </summary>
      <value>true, if the chart data is of the numeric type; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.IsRange">
      <summary>
        <para>Gets whether the chart data are obtained from a worksheet cell range.</para>
      </summary>
      <value>true, if the chart data are obtained from a worksheet <see cref="T:DevExpress.Spreadsheet.CellRange"/>; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.IsText">
      <summary>
        <para>Gets whether the chart data is text.</para>
      </summary>
      <value>true, if the chart data is of the text type; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.NumericValue">
      <summary>
        <para>Gets or sets numeric chart data.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Equality(DevExpress.Spreadsheet.Charts.ChartData,DevExpress.Spreadsheet.Charts.ChartData)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> objects for equality.</para>
      </summary>
      <param name="value">The first <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object to compare.</param>
      <param name="other">The second <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> objects are equal; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Implicit(DevExpress.Spreadsheet.CellValue)~DevExpress.Spreadsheet.Charts.ChartData">
      <summary>
        <para>Implicitly converts a cell value to chart data.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> to be converted to a <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Implicit(DevExpress.Spreadsheet.CellValue[])~DevExpress.Spreadsheet.Charts.ChartData">
      <summary>
        <para>Implicitly converts an array of cell values to chart data.</para>
      </summary>
      <param name="values">An array of <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects to be converted to <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Implicit(System.Boolean)~DevExpress.Spreadsheet.Charts.ChartData">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Boolean"/> value to chart data.</para>
      </summary>
      <param name="value">A <see cref="T:System.Boolean"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Implicit(System.Char)~DevExpress.Spreadsheet.Charts.ChartData">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Char"/> value to chart data.</para>
      </summary>
      <param name="value">A <see cref="T:System.Char"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Implicit(System.DateTime)~DevExpress.Spreadsheet.Charts.ChartData">
      <summary>
        <para>Implicitly converts a <see cref="T:System.DateTime"/> object to chart data.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Implicit(System.Double)~DevExpress.Spreadsheet.Charts.ChartData">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Double"/> value to chart data.</para>
      </summary>
      <param name="value">A <see cref="T:System.Double"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Implicit(System.Int32)~DevExpress.Spreadsheet.Charts.ChartData">
      <summary>
        <para>Implicitly converts an <see cref="T:System.Int32"/> value to chart data.</para>
      </summary>
      <param name="value">An <see cref="T:System.Int32"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Implicit(System.String)~DevExpress.Spreadsheet.Charts.ChartData">
      <summary>
        <para>Implicitly converts a <see cref="T:System.String"/> value to chart data.</para>
      </summary>
      <param name="value">A <see cref="T:System.String"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.op_Inequality(DevExpress.Spreadsheet.Charts.ChartData,DevExpress.Spreadsheet.Charts.ChartData)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> objects to determine whether they are not equal.</para>
      </summary>
      <param name="value">The first <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object to compare.</param>
      <param name="other">The second <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> objects are not equal; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.RangeValue">
      <summary>
        <para>Gets or sets the worksheet cell range from which the chart data is obtained.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> that is the worksheet cell range containing data.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartData.TextValue">
      <summary>
        <para>Gets or sets the text chart data.</para>
      </summary>
      <value>A string that is the chart data.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.ToString">
      <summary>
        <para>Returns a string representation of the chart data.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartData.ToString(System.IFormatProvider)">
      <summary>
        <para>Returns a string representation of the chart data.</para>
      </summary>
      <param name="formatProvider">An object implementing the <see cref="T:System.IFormatProvider"/> interface.</param>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartDataDirection">
      <summary>
        <para>Lists values used to specify the direction in which data series are retrieved.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartDataDirection.Column">
      <summary>
        <para>Specifies that series values are arranged in columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartDataDirection.Row">
      <summary>
        <para>Specifies that series values are arranged in rows.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartLineOptions">
      <summary>
        <para>Contains display settings for specific lines shown on a chart.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartLineOptions.Visible">
      <summary>
        <para>Gets or sets a value indicating whether the specific lines are visible on a chart.</para>
      </summary>
      <value>true, to display the lines; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartObject">
      <summary>
        <para>Contains basic properties and methods for embedded charts and chart sheets.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.ChangeType(DevExpress.Spreadsheet.Charts.ChartType)">
      <summary>
        <para>Changes the type of the chart.</para>
      </summary>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member that specifies the chart type.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.ChartType">
      <summary>
        <para>Returns the chart type.</para>
      </summary>
      <value>An enumeration member that specifies the chart type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.ColorPalette">
      <summary>
        <para>Returns or specifies a color palette for the chart. Applies only to Excel 2016 charts.</para>
      </summary>
      <value>An enumeration member that specifies the chart’s color palette.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.CopyTo(DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Creates a copy of the chart in another worksheet.</para>
      </summary>
      <param name="worksheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the destination worksheet for copying a chart.</param>
      <returns>A newly created <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> or null (Nothing in Visual Basic), if the chart cannot be copied.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.DataTable">
      <summary>
        <para>Provides access to display settings for the chart data table.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.DataTableOptions"/> object containing data table display settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.Font">
      <summary>
        <para>Allows you to change the text font for all chart elements.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeTextFont"/> object containing font settings.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.GetDataRange">
      <summary>
        <para>Returns a cell range containing chart data.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is a contiguous or noncontiguous (union) range of cells containing chart data.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.GetImage">
      <summary>
        <para>Converts the chart to an image.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Office.Utils.OfficeImage"/> object that is the image in the document.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.GetImage(System.Drawing.Size)">
      <summary>
        <para>Converts the chart to an image of the specified size.</para>
      </summary>
      <param name="size">A <see cref="T:System.Drawing.Size"/> object that specifies image dimensions.</param>
      <returns>An <see cref="T:DevExpress.Office.Utils.OfficeImage"/> object that is the image in the document.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.Legend">
      <summary>
        <para>Provides access to a chart legend.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.Legend"/> object that is the chart’s legend.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.LoadStyle(System.IO.Stream)">
      <summary>
        <para>Loads a custom style from the specified stream and applies it to the chart. Available only for Excel 2016 charts.</para>
      </summary>
      <param name="stream">A stream that contains XML data with a chart style definition.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.LoadStyle(System.String)">
      <summary>
        <para>Loads a custom style from the specified XML file and applies it to the chart. Available only for Excel 2016 charts.</para>
      </summary>
      <param name="fileName">A path to the XML file that contains a chart style definition.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.MoveToNewChartSheet(System.String)">
      <summary>
        <para>Moves the current chart to a separate chart sheet.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name of the new chart sheet.</param>
      <returns>A newly created <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> or null (Nothing in Visual Basic), if a chart sheet cannot be created.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.MoveToWorksheet(DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Moves a chart to the specified worksheet.</para>
      </summary>
      <param name="worksheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that specifies a worksheet in the current workbook where the chart will be placed.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> object that specifies the embedded chart.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.Options">
      <summary>
        <para>Provides access to various options available for the chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartOptions"/> object containing chart options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.PlotArea">
      <summary>
        <para>Provides access to the chart’s plot area.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.PlotArea"/> object that is the chart’s plot area.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.PrimaryAxes">
      <summary>
        <para>Provides access to a collection of primary axes.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisCollection"/> object containing primary axes on the chart or null (Nothing in Visual Basic) if there are no primary axes.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.SecondaryAxes">
      <summary>
        <para>Provides access to a collection of secondary axes.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisCollection"/> object that contains secondary axes.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.SelectData(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.Charts.ChartDataDirection)">
      <summary>
        <para>Specifies the source data for the chart.</para>
      </summary>
      <param name="range">A continuous cell range that contains chart data.</param>
      <param name="direction">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartDataDirection"/> enumeration member that specifies how to retrieve series values: from rows or columns.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.SelectData(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Specifies the source data for the chart.</para>
      </summary>
      <param name="range">A continuous cell range that contains chart data.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.Series">
      <summary>
        <para>Provides access to the collection of <see cref="T:DevExpress.Spreadsheet.Charts.Series"/> objects.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.SeriesCollection"/> object that is the collection of all data series.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.Style">
      <summary>
        <para>Returns or specifies the chart style.</para>
      </summary>
      <value>An enumeration value that defines a style to apply to the chart.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartObject.SwitchRowColumn">
      <summary>
        <para>Switches rows to columns in the chart data, plotting them on different axes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.Title">
      <summary>
        <para>Gets the title of the chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartTitle"/> object that is the chart title.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.View3D">
      <summary>
        <para>Provides access to the display settings of three-dimensional charts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.View3DOptions"/> object containing the 3-D chart display options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartObject.Views">
      <summary>
        <para>Returns a collection of chart views.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Spreadsheet.Charts.ChartView"/> objects. Null (Nothing in Visual Basic) for Excel 2016 charts.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartOptions">
      <summary>
        <para>Contains various options available for a chart.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartOptions.Culture">
      <summary>
        <para>Gets or sets the culture whose settings are used by the chart.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object that specifies the culture settings currently being used.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartOptions.DisplayBlanksAs">
      <summary>
        <para>Gets or sets a value that specifies how empty cells should be plotted on a chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.DisplayBlanksAs"/> enumeration value that determines how blank values should be displayed on a chart.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartOptions.PlotVisibleOnly">
      <summary>
        <para>Gets or sets a value indicating whether the hidden values should be displayed on a chart.</para>
      </summary>
      <value>true, if only visible cells are plotted; otherwise, false. The default is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartOptions.Protection">
      <summary>
        <para>Gets or sets the chart protection.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartProtection"/> enumeration value containing protection options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartOptions.RoundedCorners">
      <summary>
        <para>Gets or sets a value indicating whether the chart area should have rounded corners.</para>
      </summary>
      <value>true, to add rounded corners to the chart; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartOptions.ShowDataLabelsOverMax">
      <summary>
        <para>Gets or sets a value indicating whether to display data labels for data points whose values are greater than the maximum value of the value axis.</para>
      </summary>
      <value>true, to show data labels for values greater than the maximum value on the axis; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartOptions.Use1904DateSystem">
      <summary>
        <para>Gets or sets a value indicating whether the chart should use the 1904 date system.</para>
      </summary>
      <value>true, if the 1904 date system is used; otherwise, false. The default is false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartProtection">
      <summary>
        <para>Lists values used to specify the capability of an end-user to interact with the protected chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartProtection.All">
      <summary>
        <para>Specifies that an end-user is not allowed to select a chart, modify its elements and change chart data references.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartProtection.ChartObject">
      <summary>
        <para>Specifies that an end-user is not allowed to edit a chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartProtection.Data">
      <summary>
        <para>Specifies that an end-user is not allowed to change chart data links.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartProtection.Formatting">
      <summary>
        <para>Specifies that an end-user is not allowed to format chart elements.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartProtection.None">
      <summary>
        <para>Specifies that a chart is not protected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartProtection.Selection">
      <summary>
        <para>Specifies that an end-user is not allowed to select chart elements.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartProtection.UserInterface">
      <summary>
        <para>Specifies that a chart cannot be modified from the user interface.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartStyle">
      <summary>
        <para>Lists chart styles.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent1">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent1 theme color to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent1Area">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent1 theme color to each data series and uses this color to fill the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent1Bevel">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent1 theme color to each data series and specifies shape effects (such as beveled edges and shadows).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent1Dark">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent1 theme color and shape effects to each data series. This style uses the Dark1 theme color to fill the chart area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent1Gradient">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent1 theme color with a gradient effect to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent1Outline">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent1 theme color to each data series and specifies shape outlines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent2">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent2 theme color to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent2Area">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent2 theme color to each data series and uses this color to fill the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent2Bevel">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent2 theme color to each data series and specifies shape effects (such as beveled edges and shadows).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent2Dark">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent2 theme color and shape effects to each data series. This style uses the Dark1 theme color to fill the chart area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent2Gradient">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent2 theme color with a gradient effect to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent2Outline">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent2 theme color to each data series and specifies shape outlines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent3">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent3 theme color to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent3Area">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent3 theme color to each data series and uses this color to fill the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent3Bevel">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent3 theme color to each data series and specifies shape effects (such as beveled edges and shadows).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent3Dark">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent3 theme color and shape effects to each data series. This chart style uses the Dark1 theme color to fill the chart area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent3Gradient">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent3 theme color with a gradient effect to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent3Outline">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent3 theme color to each data series and specifies shape outlines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent4">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent4 theme color to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent4Area">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent4 theme color to each data series and uses this color to fill the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent4Bevel">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent4 theme color to each data series and specifies shape effects (such as beveled edges and shadows).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent4Dark">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent4 theme color and shape effects to each data series. This chart style uses the Dark1 theme color to fill the chart area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent4Gradient">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent4 theme color with a gradient effect to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent4Outline">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent4 theme color to each data series and specifies shape outlines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent5">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent5 theme color to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent5Area">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent5 theme color to each data series and uses this color to fill the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent5Bevel">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent5 theme color to each data series and specifies shape effects (such as beveled edges and shadows).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent5Dark">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent5 theme color and shape effects to each data series. This chart style uses the Dark1 theme color to fill the chart area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent5Gradient">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent5 theme color with a gradient effect to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent5Outline">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent5 theme color to each data series and specifies shape outlines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent6">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent6 theme color to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent6Area">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent6 theme color to each data series and uses this color to fill the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent6Bevel">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent6 theme color to each data series and specifies shape effects (such as beveled edges and shadows).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent6Dark">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent6 theme color and shape effects to each data series. This chart style uses the Dark1 theme color to fill the chart area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent6Gradient">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent6 theme color with a gradient effect to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Accent6Outline">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Accent6 theme color to each data series and specifies shape outlines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Color">
      <summary>
        <para>A colorful chart style that applies one of six accent colors defined by the document’s theme to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.ColorArea">
      <summary>
        <para>A colorful chart style that applies one of six accent colors to each data series and uses 20% tint of the Dark1 theme color to fill the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.ColorBevel">
      <summary>
        <para>A colorful chart style that applies one of six accent colors to each data series and specifies shape effects (such as beveled edges and shadows).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.ColorDark">
      <summary>
        <para>A colorful chart style that applies one of six accent colors and shape effects to each data series, and uses the Dark1 theme color to fill the chart area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.ColorGradient">
      <summary>
        <para>A colorful chart style that applies one of six accent colors with a gradient effect to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.ColorOutline">
      <summary>
        <para>A colorful chart style that applies one of six accent colors to each data series and specifies shape outlines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Custom">
      <summary>
        <para>A custom chart style. Use the Chart.LoadStyle method to load a custom style from a file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Gray">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Dark1 theme color to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.GrayArea">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Dark1 theme color to each data series and uses 20% tint of this color to fill the plot area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.GrayBevel">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Dark1 theme color to each data series and specifies shape effects (such as beveled edges and shadows).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.GrayDark">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Dark1 theme color to each data series and uses this color to fill the chart area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.GrayGradient">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Dark1 theme color with a gradient effect to each data series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.GrayOutline">
      <summary>
        <para>A monochromatic chart style that applies different shades of the Dark1 theme color to each data series and specifies shape outlines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Style1">
      <summary>
        <para>Corresponds to Style 1 from the Chart Styles gallery in Microsoft&#174; Excel&#174; 2016 and higher. Applies to the following chart types: waterfall, box and whisker, histogram, sunburst, funnel, Pareto, and treemap.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Style2">
      <summary>
        <para>Corresponds to Style 2 from the Chart Styles gallery in Microsoft&#174; Excel&#174; 2016 and higher. Applies to the following chart types: waterfall, box and whisker, histogram, sunburst, funnel, Pareto, and treemap.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Style3">
      <summary>
        <para>Corresponds to Style 3 from the Chart Styles gallery in Microsoft&#174; Excel&#174; 2016 and higher. Applies to the following chart types: waterfall, box and whisker, histogram, sunburst, funnel, Pareto, and treemap.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Style4">
      <summary>
        <para>Corresponds to Style 4 from the Chart Styles gallery in Microsoft&#174; Excel&#174; 2016 and higher. Applies to the following chart types: waterfall, box and whisker, histogram, sunburst, funnel, Pareto, and treemap.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Style5">
      <summary>
        <para>Corresponds to Style 5 from the Chart Styles gallery in Microsoft&#174; Excel&#174; 2016 and higher. Applies to the following chart types: waterfall, box and whisker, histogram, sunburst, funnel, Pareto, and treemap.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Style6">
      <summary>
        <para>Corresponds to Style 6 from the Chart Styles gallery in Microsoft&#174; Excel&#174; 2016 and higher. Applies to the following chart types: waterfall, box and whisker, histogram, sunburst, funnel, Pareto, and treemap.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Style7">
      <summary>
        <para>Corresponds to Style 7 from the Chart Styles gallery in Microsoft&#174; Excel&#174; 2016 and higher. Applies to the following chart types: waterfall, sunburst, funnel, and treemap.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Style8">
      <summary>
        <para>Corresponds to Style 8 from the Chart Styles gallery in Microsoft&#174; Excel&#174; 2016 and higher. Applies to the following chart types: waterfall, sunburst, funnel, and treemap.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartStyle.Style9">
      <summary>
        <para>Corresponds to Style 9 from the Chart Styles gallery in Microsoft&#174; Excel&#174; 2016 and higher. Applies to the following chart types: funnel and treemap.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartText">
      <summary>
        <para>The text displayed in the chart element.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartText.Lines">
      <summary>
        <para>Gets the lines of text displayed in a chart element.</para>
      </summary>
      <value>An array of strings that contains the text.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartText.PlainText">
      <summary>
        <para>Gets the text displayed in a chart element.</para>
      </summary>
      <value>A string that is the displayed text.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartText.Range">
      <summary>
        <para>Returns a cell range from which a chart element’s text is obtained.</para>
      </summary>
      <value>Specifies the referenced cell range.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartText.RefersTo">
      <summary>
        <para>Returns the string representation of the referenced cell range or formula.</para>
      </summary>
      <value>Specifies the source for the text used in a chart element.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartText.SetAuto">
      <summary>
        <para>Specifies that the text is obtained automatically.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartText.SetReference(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Specifies the cell that is the source for the text used in a chart element.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the cell(s) containing text.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartText.SetReference(System.String)">
      <summary>
        <para>Specifies the cell that is the source for the text used in a chart element.</para>
      </summary>
      <param name="expression">A string that is the cell reference.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartText.SetValue(System.String)">
      <summary>
        <para>Specifies the text used in a chart element.</para>
      </summary>
      <param name="value">A string that is the text for display.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartText.TextType">
      <summary>
        <para>Indicates the source of the text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartTextType"/> enumeration member that specifies the text source.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartTextType">
      <summary>
        <para>Lists sources of the text displayed in a chart element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartTextType.Auto">
      <summary>
        <para>A text is obtained automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartTextType.Reference">
      <summary>
        <para>A text is obtained from a referenced cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartTextType.Value">
      <summary>
        <para>A text is specified as a string.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartTitle">
      <summary>
        <para>A chart title.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartTitle.Overlay">
      <summary>
        <para>Gets or sets whether the chart title overlaps the chart.</para>
      </summary>
      <value>true, to superimpose the chart title across the top of the chart; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartTitleOptions">
      <summary>
        <para>Contains common options for the chart and axis titles.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartTitleOptions.Layout">
      <summary>
        <para>Enables you to specify the exact position of a chart title.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartTitleOptions.Visible">
      <summary>
        <para>Gets or sets a value indicating whether the specific title is displayed on a chart.</para>
      </summary>
      <value>true, to add the title to the chart; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartTrendlineType">
      <summary>
        <para>Specifies how the trendline for a series data is calculated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartTrendlineType.Exponential">
      <summary>
        <para>Calculates the least squares fit for the exponential curve y = a * b^x.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartTrendlineType.Linear">
      <summary>
        <para>Calculates the least squares fit for the line y =  m * x + b.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartTrendlineType.Logarithmic">
      <summary>
        <para>Calculates a least squares fit for the logarithmic curve y = a * ln(x) + b, where ln is the natural logarithm.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartTrendlineType.MovingAverage">
      <summary>
        <para>Uses a sequence of averages calculated across each set of N consecutive values, where N is the number specified for the <see cref="P:DevExpress.Spreadsheet.Charts.Trendline.Period"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartTrendlineType.Polynomial">
      <summary>
        <para>Calculates a least square fit using a polynomial curve of order equal to the number specified by the <see cref="P:DevExpress.Spreadsheet.Charts.Trendline.Order"/> property. The equation is in the form y =  b + (c1 * x) + (c2 * x^2) + … + (cN * x^N) where N is the trendline order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartTrendlineType.Power">
      <summary>
        <para>Calculates a least square fit for a power curve in the form y = a * x^b.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartType">
      <summary>
        <para>Lists chart types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Area">
      <summary>
        <para>An area chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Area3D">
      <summary>
        <para>A 3-D area chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Area3DFullStacked">
      <summary>
        <para>A 3-D 100% stacked area chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Area3DStacked">
      <summary>
        <para>A 3-D stacked area chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.AreaFullStacked">
      <summary>
        <para>A 100% stacked area chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.AreaStacked">
      <summary>
        <para>A stacked area chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DClustered">
      <summary>
        <para>A 3-D clustered bar chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DClusteredCone">
      <summary>
        <para>A clustered horizontal cone chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DClusteredCylinder">
      <summary>
        <para>A clustered horizontal cylinder chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DClusteredPyramid">
      <summary>
        <para>A clustered horizontal pyramid chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DFullStacked">
      <summary>
        <para>A 3-D 100% stacked bar chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DFullStackedCone">
      <summary>
        <para>A 100% stacked horizontal cone chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DFullStackedCylinder">
      <summary>
        <para>A 100% stacked horizontal cylinder chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DFullStackedPyramid">
      <summary>
        <para>A 100% stacked horizontal pyramid chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DStacked">
      <summary>
        <para>A 3-D stacked bar chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DStackedCone">
      <summary>
        <para>A stacked horizontal cone chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DStackedCylinder">
      <summary>
        <para>A stacked horizontal cylinder chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bar3DStackedPyramid">
      <summary>
        <para>A stacked horizontal pyramid chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.BarClustered">
      <summary>
        <para>A clustered bar chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.BarFullStacked">
      <summary>
        <para>A 100% stacked bar chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.BarOfPie">
      <summary>
        <para>A bar-of-pie chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.BarStacked">
      <summary>
        <para>A stacked bar chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.BoxAndWhisker">
      <summary>
        <para>A box and whisker chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bubble">
      <summary>
        <para>A bubble chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Bubble3D">
      <summary>
        <para>A 3-D bubble chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DClustered">
      <summary>
        <para>A 3-D clustered column chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DClusteredCone">
      <summary>
        <para>A clustered cone chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DClusteredCylinder">
      <summary>
        <para>A clustered cylinder chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DClusteredPyramid">
      <summary>
        <para>A clustered pyramid chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DFullStacked">
      <summary>
        <para>A 3-D 100% stacked column chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DFullStackedCone">
      <summary>
        <para>A 100% stacked cone chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DFullStackedCylinder">
      <summary>
        <para>A 100% stacked cylinder chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DFullStackedPyramid">
      <summary>
        <para>A 100% stacked pyramid chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DStacked">
      <summary>
        <para>A 3-D stacked column chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DStackedCone">
      <summary>
        <para>A stacked cone chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DStackedCylinder">
      <summary>
        <para>A stacked cylinder chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DStackedPyramid">
      <summary>
        <para>A stacked pyramid chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DStandard">
      <summary>
        <para>A 3-D column chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DStandardCone">
      <summary>
        <para>A 3-D cone chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DStandardCylinder">
      <summary>
        <para>A 3-D cylinder chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Column3DStandardPyramid">
      <summary>
        <para>A 3-D pyramid chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.ColumnClustered">
      <summary>
        <para>A clustered column chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.ColumnFullStacked">
      <summary>
        <para>A 100% stacked column chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.ColumnStacked">
      <summary>
        <para>A stacked column chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Combo">
      <summary>
        <para>A combination chart. Use the <see cref="M:DevExpress.Spreadsheet.Charts.Series.ChangeType(DevExpress.Spreadsheet.Charts.ChartType)"/> method to change the type of an existing data series and create a combination chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Doughnut">
      <summary>
        <para>A doughnut chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.DoughnutExploded">
      <summary>
        <para>An exploded doughnut chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Funnel">
      <summary>
        <para>A funnel chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Histogram">
      <summary>
        <para>A histogram chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Line">
      <summary>
        <para>A line chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Line3D">
      <summary>
        <para>A 3-D line chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.LineFullStacked">
      <summary>
        <para>A 100% stacked line chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.LineFullStackedMarker">
      <summary>
        <para>A 100% stacked line chart with markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.LineMarker">
      <summary>
        <para>A line chart with markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.LineStacked">
      <summary>
        <para>A stacked line chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.LineStackedMarker">
      <summary>
        <para>A stacked line chart with markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Pareto">
      <summary>
        <para>A Pareto chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Pie">
      <summary>
        <para>A pie chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Pie3D">
      <summary>
        <para>A 3-D pie chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Pie3DExploded">
      <summary>
        <para>A 3-D exploded pie chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.PieExploded">
      <summary>
        <para>An exploded pie chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.PieOfPie">
      <summary>
        <para>A pie-of-pie chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Radar">
      <summary>
        <para>A radar chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.RadarFilled">
      <summary>
        <para>A filled radar chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.RadarMarkers">
      <summary>
        <para>A radar chart with markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.ScatterLine">
      <summary>
        <para>A scatter chart with straight lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.ScatterLineMarkers">
      <summary>
        <para>A scatter chart with straight lines and markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.ScatterMarkers">
      <summary>
        <para>A scatter chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.ScatterSmooth">
      <summary>
        <para>A scatter chart with smooth lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.ScatterSmoothMarkers">
      <summary>
        <para>A scatter chart with smooth lines and markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.StockHighLowClose">
      <summary>
        <para>A high-low-close stock chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.StockOpenHighLowClose">
      <summary>
        <para>An open-high-low-close stock chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.StockVolumeHighLowClose">
      <summary>
        <para>A volume-high-low-close stock chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.StockVolumeOpenHighLowClose">
      <summary>
        <para>A volume-open-high-low-close stock chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Sunburst">
      <summary>
        <para>A sunburst chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Surface">
      <summary>
        <para>A contour chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Surface3D">
      <summary>
        <para>A 3-D surface chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Surface3DWireframe">
      <summary>
        <para>A wireframe 3-D surface chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.SurfaceWireframe">
      <summary>
        <para>A wireframe contour chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Treemap">
      <summary>
        <para>A treemap chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ChartType.Waterfall">
      <summary>
        <para>A waterfall chart.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartView">
      <summary>
        <para>Consolidates data series of the same type and contains series customization options.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.BubbleScale">
      <summary>
        <para>Gets or sets the scale factor for bubbles on a bubble chart.</para>
      </summary>
      <value>An integer value specifying how to scale the bubble size. The value must be a whole number between 0 and 300.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.DataLabels">
      <summary>
        <para>Provides access to options used to modify all data labels within a chart view.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.DataLabelOptions"/> object containing options for displaying and formatting data labels.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.DropLines">
      <summary>
        <para>Provides access to settings used to draw the drop lines in line, area or stock charts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartLineOptions"/> object containing chart line display options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.FirstSliceAngle">
      <summary>
        <para>Gets or sets the angle of the first slice in a pie or doughnut chart.</para>
      </summary>
      <value>An integer value that specifies the angle, in degrees, by which the slice is rotated.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.GapDepth">
      <summary>
        <para>Gets or sets the space along the Z-axis between adjacent data series in a 3-D line, area, column or bar chart.</para>
      </summary>
      <value>An integer value that is the gap depth, as a percentage of the marker width. This value must be between 0 and 500.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.GapWidth">
      <summary>
        <para>Gets or sets the space between bar or column clusters in the Bar or Column charts, or the space between the primary and secondary charts in the Pie of Pie or Bar of Pie charts.</para>
      </summary>
      <value>An integer value that is the percentage of the gap width. This value must be between 0 and 500.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.HighLowLines">
      <summary>
        <para>Provides access to settings used to draw the high-low lines in the two-dimensional line and stock charts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartLineOptions"/> object containing chart line display options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.HoleSize">
      <summary>
        <para>Gets or sets the size of the hole in a doughnut chart.</para>
      </summary>
      <value>An integer value that specifies the diameter of the hole. The value must be a whole number between 10 and 90, that is measured as a percentage of the size of the plot area.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.Overlap">
      <summary>
        <para>Gets or sets the overlap value between bars or columns in a 2-D Bar or Column chart.</para>
      </summary>
      <value>An integer value that is the percentage of series overlap. This value must be between -100 and 100.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.SecondPiePoints">
      <summary>
        <para>Gets or sets the data points that should be displayed in the secondary chart of a Pie of Pie or Bar of Pie chart type.</para>
      </summary>
      <value>An array of <see cref="T:System.Int32"/>[] values that are the indexes of data points shown in the secondary chart.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.SecondPieSize">
      <summary>
        <para>Gets or sets the size of a secondary pie or stacked bar chart in a Pie of Pie or Bar of Pie chart type, as a percentage of the main chart size.</para>
      </summary>
      <value>An integer value that specifies the size of the secondary chart. The value must be a whole number between 5 and 200.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.Series">
      <summary>
        <para>Provides access to a collection of series for a particular view.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraCharts.SeriesCollection"/> object containing chart series.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.SeriesLines">
      <summary>
        <para>Provides access to settings used to draw the series lines in the two-dimensional stacked bar and column charts, Pie of Pie and Bar of Pie charts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartLineOptions"/> object containing chart line display options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.ShowNegativeBubbles">
      <summary>
        <para>Gets or sets a value indicating whether negative sized bubbles should be displayed on a bubble chart.</para>
      </summary>
      <value>true, if negative bubbles are shown; otherwise, false. The default is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.SizeRepresents">
      <summary>
        <para>Gets or sets a value that specifies what the bubble size represents on a bubble chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.BubbleSizeRepresents"/> enumeration value specifying possible ways to represent data on a bubble chart.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.SplitPosition">
      <summary>
        <para>Gets or sets a value that specifies which data points should appear in the secondary chart of a Pie of Pie or Bar of Pie chart type.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that determines which data points should be displayed in the secondary chart.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.SplitType">
      <summary>
        <para>Gets or sets a value that specifies the way to split the data points between the main chart and secondary chart in a Pie of Pie or Bar of Pie chart type.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.OfPieSplitType"/> enumeration value specifying the way to split a Pie of Pie or Bar of Pie chart.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.UpDownBars">
      <summary>
        <para>Provides access to settings used to display up-down bars on a 2-D line or stock chart.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.UpDownBarsOptions"/> object containing bar display settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.VaryColors">
      <summary>
        <para>Gets or sets a value indicating whether each data marker in the series should have a different color.</para>
      </summary>
      <value>true, if the same-series data markers are displayed in varied colors; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ChartView.ViewType">
      <summary>
        <para>Gets the type of the chart view.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ChartViewCollection">
      <summary>
        <para>A collection of chart views in a chart.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartViewCollection.Contains(DevExpress.Spreadsheet.Charts.ChartView)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="view">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartView"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ChartViewCollection.IndexOf(DevExpress.Spreadsheet.Charts.ChartView)">
      <summary>
        <para>Returns the index of the specified item in the collection.</para>
      </summary>
      <param name="view">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartView"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the item position within the collection. &#0045;1 if the item doesn’t belong to the collection.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DataLabel">
      <summary>
        <para>A data label on a point of the chart series.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabel.Index">
      <summary>
        <para>Gets the index of a data label.</para>
      </summary>
      <value>An integer that is the index of the data label.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabel.Layout">
      <summary>
        <para>Enables you to specify the exact position of a data label.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabel.Text">
      <summary>
        <para>Gets the text displayed in the data label.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartText"/> object containing text characteristics.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DataLabelBase">
      <summary>
        <para>Contains basic data label options and serves as the base for the <see cref="T:DevExpress.Spreadsheet.Charts.DataLabelOptions"/> interface.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.Hidden">
      <summary>
        <para>Gets or sets a value indicating whether the data label is hidden.</para>
      </summary>
      <value>true, to hide the data label; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.LabelPosition">
      <summary>
        <para>Gets or sets the position of data labels on the chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.DataLabelPosition"/> enumeration value specifying the data label placement.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.NumberFormat">
      <summary>
        <para>Provides access to number format options for numerical values displayed in data labels.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.NumberFormatOptions"/> object that contains formatting options for displaying numbers.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.Separator">
      <summary>
        <para>Gets or sets the string value that represents a separator for different items displayed in a data label.</para>
      </summary>
      <value>A string used as a separator.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.ShowBubbleSize">
      <summary>
        <para>Gets or sets a value indicating whether the bubble size should be displayed in a data label on the bubble chart.</para>
      </summary>
      <value>true, to show bubble size labels; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.ShowCategoryName">
      <summary>
        <para>Gets or sets a value indicating whether the category name should be displayed in a data label.</para>
      </summary>
      <value>true, to show category labels; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.ShowLegendKey">
      <summary>
        <para>Gets or sets a value indicating whether the legend key should be displayed in a data label.</para>
      </summary>
      <value>true, to show the legend key; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.ShowPercent">
      <summary>
        <para>Gets or sets a value indicating whether the percentage value should be displayed in a data label on the pie or doughnut chart.</para>
      </summary>
      <value>true, to show percentage labels; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.ShowSeriesName">
      <summary>
        <para>Gets or sets a value indicating whether the series name should be displayed in a data label.</para>
      </summary>
      <value>true, to show series name; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelBase.ShowValue">
      <summary>
        <para>Gets or sets a value indicating whether the data point value should be displayed in a data label.</para>
      </summary>
      <value>true, to show value labels; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DataLabelCollection">
      <summary>
        <para>A collection that stores customized data labels and data label options for a series in the chart.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataLabelCollection.Add(System.Int32)">
      <summary>
        <para>Creates a new item and adds it to the collection.</para>
      </summary>
      <param name="itemIndex">An integer that is the index of the data label item.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.DataLabel"/> object that is the newly added element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataLabelCollection.Clear">
      <summary>
        <para>Removes all items from a collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataLabelCollection.Contains(DevExpress.Spreadsheet.Charts.DataLabel)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="dataLabel">A <see cref="T:DevExpress.Spreadsheet.Charts.DataLabel"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataLabelCollection.FindByIndex(System.Int32)">
      <summary>
        <para>Gets an item by its index in the collection.</para>
      </summary>
      <param name="itemIndex">The index of an item in a collection.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.DataLabel"/> object.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelCollection.HiddenLabels">
      <summary>
        <para>Returns the collection of hidden labels.</para>
      </summary>
      <value>An enumerator that supports iteration over the collection.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataLabelCollection.IndexOf(DevExpress.Spreadsheet.Charts.DataLabel)">
      <summary>
        <para>Returns the index of the specified item in the collection.</para>
      </summary>
      <param name="dataLabel">A <see cref="T:DevExpress.Spreadsheet.Charts.DataLabel"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the item position within the collection. &#0045;1 if the item does not belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataLabelCollection.IsVisible(System.Int32)">
      <summary>
        <para>Determines whether a data label is visible for the specified data point.</para>
      </summary>
      <param name="itemIndex">The zero-based position of the target data point within the series.</param>
      <returns>true if the data label is visible; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataLabelCollection.Remove(DevExpress.Spreadsheet.Charts.DataLabel)">
      <summary>
        <para>Removes the specified data label from the collection.</para>
      </summary>
      <param name="dataLabel">A <see cref="T:DevExpress.Spreadsheet.Charts.DataLabel"/> object to remove.</param>
      <returns>true, if the collection contained the specified item and the item is successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataLabelCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the item at the specified index of the <see cref="T:DevExpress.Spreadsheet.Charts.DataLabelCollection"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the item to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataLabelCollection.SetVisibility(System.Int32,System.Boolean)">
      <summary>
        <para>Shows or hides a data label for the specified data point.</para>
      </summary>
      <param name="itemIndex">The zero-based position of the target data point within the series.</param>
      <param name="visible">true to display the label for the data point; otherwise, false.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DataLabelOptions">
      <summary>
        <para>Contains data label options.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataLabelOptions.LeaderLines">
      <summary>
        <para>Provides access to settings used to draw the leader lines for data labels in a pie or doughnut chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartLineOptions"/> object containing chart line display options.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DataLabelPosition">
      <summary>
        <para>Lists values used to specify the position of data labels on the chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.BestFit">
      <summary>
        <para>Specifies that data labels should be displayed in the best location.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.Bottom">
      <summary>
        <para>Specifies that data labels should be displayed below the data markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.Center">
      <summary>
        <para>Specifies that data labels should be displayed in the center of the data markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.Default">
      <summary>
        <para>Specifies that data labels should be displayed at the default location.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.InsideBase">
      <summary>
        <para>Specifies that data labels should be displayed inside the base of the data markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.InsideEnd">
      <summary>
        <para>Specifies that data labels should be displayed inside the end of the data markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.Left">
      <summary>
        <para>Specifies that data labels should be displayed to the left of the data markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.OutsideEnd">
      <summary>
        <para>Specifies that data labels should be displayed outside the end of the data markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.Right">
      <summary>
        <para>Specifies that data labels should be displayed to the right of the data markers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DataLabelPosition.Top">
      <summary>
        <para>Specifies that data labels should be displayed above the data markers.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DataPoint">
      <summary>
        <para>Specifies the appearance of the data point in a chart series.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataPoint.Bubble3D">
      <summary>
        <para>Gets or sets whether a bubble has the 3D effect applied.</para>
      </summary>
      <value>true to apply the 3D effect to a bubble; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataPoint.Explosion">
      <summary>
        <para>Gets or sets the explosion value for a pie or doughnut chart slice.</para>
      </summary>
      <value>An integer that specifies how far the slice is moved from the center of the pie. A zero (0) value means that the tip of the slice is in the center of the pie.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataPoint.Index">
      <summary>
        <para>Gets the index of the data point in the collection.</para>
      </summary>
      <value>An integer that is the data point index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataPoint.InvertIfNegative">
      <summary>
        <para>Gets or sets whether a visual element representing the data point inverts its color if the value is negative.</para>
      </summary>
      <value>true, to invert the color if the value is negative; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataPoint.Marker">
      <summary>
        <para>Provides access to the visual characteristics of a marker.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.Marker"/> interface that allows changing the characteristics of a marker identifying the data point.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DataPointCollection">
      <summary>
        <para>A collection that stores custom settings for data points and data point options for the series in the chart.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataPointCollection.Add(System.Int32)">
      <summary>
        <para>Creates a new item and adds it to the collection.</para>
      </summary>
      <param name="itemIndex">An integer that is the index of the data label item.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.DataPoint"/> object that is the newly added element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataPointCollection.Clear">
      <summary>
        <para>Removes all items from a collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataPointCollection.Contains(DevExpress.Spreadsheet.Charts.DataPoint)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="dataPoint">A <see cref="T:DevExpress.Spreadsheet.Charts.DataPoint"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataPointCollection.FindByIndex(System.Int32)">
      <summary>
        <para>Gets an item by its index in the collection.</para>
      </summary>
      <param name="itemIndex">The index of an item in a collection.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.DataPoint"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataPointCollection.IndexOf(DevExpress.Spreadsheet.Charts.DataPoint)">
      <summary>
        <para>Returns the index of the specified item in the collection.</para>
      </summary>
      <param name="dataPoint">A <see cref="T:DevExpress.Spreadsheet.Charts.DataPoint"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the item position within the collection. &#0045;1 if the item does not belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataPointCollection.Remove(DevExpress.Spreadsheet.Charts.DataPoint)">
      <summary>
        <para>Removes the specified data label from the collection.</para>
      </summary>
      <param name="dataPoint">A <see cref="T:DevExpress.Spreadsheet.Charts.DataLabel"/> object to remove.</param>
      <returns>true, if the collection contained the specified item and the item is successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.DataPointCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the item at the specified index of the <see cref="T:DevExpress.Spreadsheet.Charts.DataPointCollection"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the item to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DataTableOptions">
      <summary>
        <para>Contains display options for the chart data table.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataTableOptions.Font">
      <summary>
        <para>Provides access to font settings used to display the text in a data table.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeTextFont"/> object containing font settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataTableOptions.ShowHorizontalBorder">
      <summary>
        <para>Gets or sets whether horizontal borders are displayed.</para>
      </summary>
      <value>true, to display horizontal borders; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataTableOptions.ShowLegendKeys">
      <summary>
        <para>Gets or sets whether to display legend keys.</para>
      </summary>
      <value>true, to display legend keys; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataTableOptions.ShowOutline">
      <summary>
        <para>Gets or sets whether to display the table outline.</para>
      </summary>
      <value>true, to display table outline; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataTableOptions.ShowVerticalBorder">
      <summary>
        <para>Gets or sets whether vertical borders are displayed.</para>
      </summary>
      <value>true, to display vertical borders; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DataTableOptions.Visible">
      <summary>
        <para>Gets or sets whether the data table is displayed on a chart.</para>
      </summary>
      <value>true, to display a data table; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DisplayBlanksAs">
      <summary>
        <para>Lists values used to specify how empty cells are displayed on a chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayBlanksAs.Gap">
      <summary>
        <para>Specifies that empty cells should be displayed as gaps on a chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayBlanksAs.Span">
      <summary>
        <para>Specifies that empty cells should be spanned with a line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayBlanksAs.Zero">
      <summary>
        <para>Specifies that empty cells should be treated as zeros.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DisplayUnitOptions">
      <summary>
        <para>Contains options used to specify the display units for the value axis.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DisplayUnitOptions.CustomUnit">
      <summary>
        <para>Gets or sets the custom scaling value of the display units for the value axis.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies a custom value for the display units.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DisplayUnitOptions.Label">
      <summary>
        <para>Gets the text of the display unit label.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartText"/> object representing the text displayed in the unit label of the value axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DisplayUnitOptions.Layout">
      <summary>
        <para>Enables you to specify the exact position of the display unit label.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutOptions"/> object containing options used to specify the arrangement of elements on the chart.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DisplayUnitOptions.ShowLabel">
      <summary>
        <para>Gets or sets a value indicating whether to show the display unit label along the value axis.</para>
      </summary>
      <value>true, to display the unit label; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.DisplayUnitOptions.UnitType">
      <summary>
        <para>Get or sets the display units for the value axis.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.DisplayUnitType"/> enumeration value specifying the type of display unit scaling applied to the value axis.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.DisplayUnitType">
      <summary>
        <para>Lists values that specify display units for the value axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.Billions">
      <summary>
        <para>Axis values are divided by 1,000,000,000.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.Custom">
      <summary>
        <para>The <see cref="P:DevExpress.Spreadsheet.Charts.DisplayUnitOptions.CustomUnit"/> property defines custom display units. You cannot specify custom units for Microsoft&#174; Excel&#174; 2016 charts.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.HundredMillions">
      <summary>
        <para>Axis values are divided by 100,000,000.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.Hundreds">
      <summary>
        <para>Axis values are divided by 100.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.HundredThousands">
      <summary>
        <para>Axis values are divided by 100,000.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.Millions">
      <summary>
        <para>Axis values are divided by 1,000,000.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.None">
      <summary>
        <para>Raw values are displayed on the axis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.Percentage">
      <summary>
        <para>This value is returned for the secondary value axis of a Pareto chart and cannot be used for other chart types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.TenMillions">
      <summary>
        <para>Axis values are divided by 10,000,000.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.TenThousands">
      <summary>
        <para>Axis values are divided by 10,000.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.Thousands">
      <summary>
        <para>Axis values are divided by 1,000.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.DisplayUnitType.Trillions">
      <summary>
        <para>Axis values are divided by 1,000,000,000,000.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ErrorBarDirection">
      <summary>
        <para>Lists values that indicate the error bar direction.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarDirection.Auto">
      <summary>
        <para>Error bar direction is defined automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarDirection.X">
      <summary>
        <para>Bars run parallel to the Y axis for X-axis values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarDirection.Y">
      <summary>
        <para>Bars run parallel to the X axis for Y-axis values.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ErrorBarsCollection">
      <summary>
        <para>A collection of error bars for the series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ErrorBarsCollection.Add(DevExpress.Spreadsheet.Charts.ErrorBarType,DevExpress.Spreadsheet.Charts.ErrorBarDirection)">
      <summary>
        <para>Adds a new error bar to the series.</para>
      </summary>
      <param name="barType">An enumeration value that indicates the error bar type.</param>
      <param name="barDirection">An enumeration value that indicates the error bar direction.</param>
      <returns>An object that contains options for the error bar.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ErrorBarsCollection.Add(DevExpress.Spreadsheet.Charts.ErrorBarType)">
      <summary>
        <para>Adds a new error bar to the series.</para>
      </summary>
      <param name="barType">An enumeration value that indicates the error bar type.</param>
      <returns>An object that contains options for the error bar.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ErrorBarsCollection.Clear">
      <summary>
        <para>Clears the ErrorBarsCollection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ErrorBarsCollection.Contains(DevExpress.Spreadsheet.Charts.ErrorBarsOptions)">
      <summary>
        <para>Determines whether the collection contains the specified error bar.</para>
      </summary>
      <param name="errorBars">An error bar to be checked.</param>
      <returns>true if the collection contains the error bar; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ErrorBarsCollection.IndexOf(DevExpress.Spreadsheet.Charts.ErrorBarsOptions)">
      <summary>
        <para>Returns the position of the specified error bar in the collection.</para>
      </summary>
      <param name="errorBars">The zero-based position of the target error bar in the collection.</param>
      <returns>A zero-based index of the error bar in the collection. -1 if the bar does not belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ErrorBarsCollection.Remove(DevExpress.Spreadsheet.Charts.ErrorBarsOptions)">
      <summary>
        <para>Removes the specified item from the collection.</para>
      </summary>
      <param name="errorBars">An item to be removed.</param>
      <returns>true if the item is removed successfully; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ErrorBarsCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes an item at the specified index from the collection.</para>
      </summary>
      <param name="index">The item index.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ErrorBarsOptions">
      <summary>
        <para>Contains options for a chart series error bar.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ErrorBarsOptions.BarDirection">
      <summary>
        <para>Gets or sets the error bar direction.</para>
      </summary>
      <value>An enumeration value that indicates the error bar direction.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ErrorBarsOptions.BarType">
      <summary>
        <para>Gets or sets the error bar type.</para>
      </summary>
      <value>An enumeration value that indicates the error bar type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ErrorBarsOptions.Minus">
      <summary>
        <para>Gets or sets the negative error value.</para>
      </summary>
      <value>The negative error value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ErrorBarsOptions.NoEndCap">
      <summary>
        <para>Gets or sets whether the error bar has an end cap.</para>
      </summary>
      <value>true if the error bar does not have a cap at the end; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ErrorBarsOptions.Plus">
      <summary>
        <para>Gets or sets the positive error value.</para>
      </summary>
      <value>The positive error value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ErrorBarsOptions.Value">
      <summary>
        <para>Gets or sets the error value.</para>
      </summary>
      <value>The error value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ErrorBarsOptions.ValueType">
      <summary>
        <para>Gets or sets the value type of the error bar.</para>
      </summary>
      <value>An enumeration value that indicates the value type.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ErrorBarType">
      <summary>
        <para>Lists values that indicate the error bar type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarType.Both">
      <summary>
        <para>An error bar with both positive and negative error ranges.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarType.Minus">
      <summary>
        <para>An error bar with a negative error range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarType.Plus">
      <summary>
        <para>An error bar with a positive error range.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ErrorBarValueType">
      <summary>
        <para>Lists values that indicate the error value type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarValueType.Custom">
      <summary>
        <para>Error value is set by fixed values or cell values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarValueType.FixedValue">
      <summary>
        <para>Fixed-length error bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarValueType.Percentage">
      <summary>
        <para>Percentage to be covered by an error bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarValueType.StandardDeviation">
      <summary>
        <para>Value for specified number of standard deviations.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ErrorBarValueType.StandardError">
      <summary>
        <para>Standard error value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.HistogramBinType">
      <summary>
        <para>Lists values that specify how to calculate bin intervals for a histogram series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.HistogramBinType.Automatic">
      <summary>
        <para>The bin width is calculated automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.HistogramBinType.BinCount">
      <summary>
        <para>Uses the <see cref="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.BinCount"/> property to define the number of histogram bins.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.HistogramBinType.BinWidth">
      <summary>
        <para>Uses the <see cref="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.BinWidth"/> property to define the width of histogram bins.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.HistogramBinType.ByCategory">
      <summary>
        <para>Groups the same categories and sums values in the value axis. Applies only to the text-based category axis.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.HistogramIntervalClosedSide">
      <summary>
        <para>Lists values that specify the closed side of histogram bins.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.HistogramIntervalClosedSide.Left">
      <summary>
        <para>Intervals are left-closed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.HistogramIntervalClosedSide.Right">
      <summary>
        <para>Intervals are right-closed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.HistogramOverflowType">
      <summary>
        <para>Lists values that specify how to create the overflow and underflow bins on a histogram chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.HistogramOverflowType.Automatic">
      <summary>
        <para>A threshold value for the overflow (or underflow) bin is calculated automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.HistogramOverflowType.Fixed">
      <summary>
        <para>The <see cref="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.OverflowValue"/> (or <see cref="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.UnderflowValue"/>) property specifies a threshold value for the overflow (or underflow) bin.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.HistogramOverflowType.None">
      <summary>
        <para>The chart does not include the overflow (or underflow) bin.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions">
      <summary>
        <para>Contains options for histogram and Pareto series.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.BinCount">
      <summary>
        <para>Returns or specifies the number of bins in a histogram chart.</para>
      </summary>
      <value>The number of histogram bins.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.BinType">
      <summary>
        <para>Specifies how to calculate bin intervals for a histogram.</para>
      </summary>
      <value>An enumeration member that specifies how to calculate histogram bins.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.BinWidth">
      <summary>
        <para>Returns or specifies the bin width.</para>
      </summary>
      <value>The bin width.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.IntervalClosedSide">
      <summary>
        <para>Returns or specifies the closed side of bin intervals.</para>
      </summary>
      <value>An enumeration member that specifies the bin closed side.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.OverflowType">
      <summary>
        <para>Returns or specifies how to create the overflow bin for a histogram chart.</para>
      </summary>
      <value>An enumeration member that specifies whether to display the overflow bin and how to calculate a threshold for this bin.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.OverflowValue">
      <summary>
        <para>Returns or specifies a custom threshold value for the overflow bin.</para>
      </summary>
      <value>The threshold value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.UnderflowType">
      <summary>
        <para>Returns or specifies how to create the underflow bin for a histogram chart.</para>
      </summary>
      <value>An enumeration member that specifies whether to display the underflow bin and how to calculate a threshold for this bin.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.HistogramSeriesOptions.UnderflowValue">
      <summary>
        <para>Returns or specifies a custom threshold value for the underflow bin.</para>
      </summary>
      <value>The threshold value.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.LayoutMode">
      <summary>
        <para>Lists the possible interpretations of the Width and Height properties which specify the position of a chart element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LayoutMode.Auto">
      <summary>
        <para>Specifies that the width or height is set automatically, so the corresponding value is null when obtained or ignored when being set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LayoutMode.Edge">
      <summary>
        <para>Specifies that the Width or Height property values are interpreted as the position of the right or bottom edge of the chart element as a fraction of the height or width of the chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LayoutMode.Factor">
      <summary>
        <para>Specifies that the Width or Height property values are interpreted as a fraction of the width (height) of the chart and the position is relative to the default position for the chart element.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.LayoutOptions">
      <summary>
        <para>Specifies the exact position of the chart element.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LayoutOptions.Auto">
      <summary>
        <para>Gets whether the layout options are set automatically.</para>
      </summary>
      <value>true, if layout options are set automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LayoutOptions.Height">
      <summary>
        <para>Specifies the height or bottom of the chart element, depending on the specified mode.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutPosition"/> interface that provides the value and determines how it should be interpreted.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LayoutOptions.Left">
      <summary>
        <para>Specifies the left indent of the chart element as a fraction of the width of the chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutPosition"/> interface.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.LayoutOptions.ResetToAuto">
      <summary>
        <para>Sets the modes for all layout options to <see cref="F:DevExpress.Spreadsheet.Charts.LayoutMode.Auto"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LayoutOptions.Target">
      <summary>
        <para>Specifies whether to layout the plot area by its inside or outside.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutTarget"/> enumeration.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LayoutOptions.Top">
      <summary>
        <para>Specifies the top indent of the chart element as a fraction of the height of the chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutPosition"/> interface.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LayoutOptions.Width">
      <summary>
        <para>Specifies the width or right of the chart element, depending on the specified mode.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutPosition"/> interface that provides the value and determines how it should be interpreted.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.LayoutPosition">
      <summary>
        <para>A container to hold a value and specify how it should be interpreted.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LayoutPosition.Mode">
      <summary>
        <para>Gets or sets the mode that specifies how the value should be interpreted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutMode"/> enumeration member.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.LayoutPosition.SetPosition(DevExpress.Spreadsheet.Charts.LayoutMode,System.Double)">
      <summary>
        <para>Specifies the exact position of the chart element.</para>
      </summary>
      <param name="mode">A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutMode"/> enumeration member that specifies how to interpret the value.</param>
      <param name="value">A <see cref="T:System.Double"/> value.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LayoutPosition.Value">
      <summary>
        <para>Gets or sets the value that specifies the position of the chart element.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> that is the value measured as a fraction of the chart size.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.LayoutTarget">
      <summary>
        <para>Specifies whether the plot area used to measure the layout should be inner or outer.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LayoutTarget.Inner">
      <summary>
        <para>Do not include the tick marks and axis labels.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LayoutTarget.Outer">
      <summary>
        <para>Include the tick marks and axis labels.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.Legend">
      <summary>
        <para>A legend in a chart.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Legend.CustomEntries">
      <summary>
        <para>Provides access to a collection of modified legend entries.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LegendEntryCollection"/> object that contains modified legend entries.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Legend.Font">
      <summary>
        <para>Provides access to font settings for the legend entries.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeTextFont"/> object containing font settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Legend.Layout">
      <summary>
        <para>Enables you to specify the exact position of a legend.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Legend.Overlay">
      <summary>
        <para>Gets or sets whether the chart legend overlaps the chart.</para>
      </summary>
      <value>true, to allow the legend to overlap the chart; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Legend.Position">
      <summary>
        <para>Gets or sets the position of the legend on the chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LegendPosition"/> enumeration member that specifies the position.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Legend.Visible">
      <summary>
        <para>Gets or sets whether the legend is displayed on a chart.</para>
      </summary>
      <value>true, to show the legend; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.LegendEntry">
      <summary>
        <para>A single legend entry in a chart legend.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LegendEntry.Font">
      <summary>
        <para>Provides access to font options for a specific legend entry..</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeTextFont"/> object containing font options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LegendEntry.Hidden">
      <summary>
        <para>Gets or sets whether the legend entry is shown.</para>
      </summary>
      <value>true, to hide the legend entry; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.LegendEntry.Index">
      <summary>
        <para>Gets the index of the legend entry.</para>
      </summary>
      <value>A integer that is the index of the entry.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.LegendEntryCollection">
      <summary>
        <para>A collection that stores customized legend entries for a series in the chart.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.LegendEntryCollection.Add(System.Int32)">
      <summary>
        <para>Creates a new entry and adds it to the collection.</para>
      </summary>
      <param name="index">An integer that is the index of the legend entry.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.LegendEntry"/> object that is the newly added element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.LegendEntryCollection.Clear">
      <summary>
        <para>Removes all items from a collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.LegendEntryCollection.Contains(DevExpress.Spreadsheet.Charts.LegendEntry)">
      <summary>
        <para>Determines whether the collection contains the specified entry.</para>
      </summary>
      <param name="entry">A <see cref="T:DevExpress.Spreadsheet.Charts.LegendEntry"/> to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.LegendEntryCollection.GetEntryByIndex(System.Int32)">
      <summary>
        <para>Gets an entry by its index in the collection.</para>
      </summary>
      <param name="index">The index of a legend entry in a collection.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.LegendEntry"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.LegendEntryCollection.IndexOf(DevExpress.Spreadsheet.Charts.LegendEntry)">
      <summary>
        <para>Returns the index of the specified entry in the collection.</para>
      </summary>
      <param name="entry">A <see cref="T:DevExpress.Spreadsheet.Charts.LegendEntry"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the entry position within the collection. &#0045;1 if the entry doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.LegendEntryCollection.Remove(DevExpress.Spreadsheet.Charts.LegendEntry)">
      <summary>
        <para>Removes the specified legend entry from the collection.</para>
      </summary>
      <param name="entry">A <see cref="T:DevExpress.Spreadsheet.Charts.LegendEntry"/> object to remove.</param>
      <returns>true, if the collection contained the specified entry and the entry is successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.LegendEntryCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the entry at the specified index of the <see cref="T:DevExpress.Spreadsheet.Charts.LegendEntryCollection"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the entry to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.LegendPosition">
      <summary>
        <para>Lists positions of the legend on a chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LegendPosition.Bottom">
      <summary>
        <para>Below the chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LegendPosition.Left">
      <summary>
        <para>On the left of the chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LegendPosition.Right">
      <summary>
        <para>On the right of the chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LegendPosition.Top">
      <summary>
        <para>Above the chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.LegendPosition.TopRight">
      <summary>
        <para>In the upper right corner.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.Marker">
      <summary>
        <para>Represents a data marker displayed at each data point in the series on the line, scatter or radar chart.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Marker.Size">
      <summary>
        <para>Gets or sets the size of the marker in points.</para>
      </summary>
      <value>An integer value that specifies the marker’s size. The value must be a whole number between 2 and 72.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Marker.Symbol">
      <summary>
        <para>Gets or sets the shape of the marker.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.MarkerStyle"/> enumeration value specifying the marker style.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.MarkerStyle">
      <summary>
        <para>Lists values that specify the shape of markers which can be painted at each data point in the series on the line, scatter or radar chart and within the chart legend.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Auto">
      <summary>
        <para>Specifies an automatic marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Circle">
      <summary>
        <para>Specifies a circular marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Dash">
      <summary>
        <para>Specifies a long bar marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Diamond">
      <summary>
        <para>Specifies a diamond-shaped marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Dot">
      <summary>
        <para>Specifies a short bar marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.None">
      <summary>
        <para>Specifies that a marker is not painted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Picture">
      <summary>
        <para>Specifies that a picture is used as a marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Plus">
      <summary>
        <para>Specifies a plus-shaped marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Square">
      <summary>
        <para>Specifies a square marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Star">
      <summary>
        <para>Specifies a star-shaped marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.Triangle">
      <summary>
        <para>Specifies a triangular marker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.MarkerStyle.X">
      <summary>
        <para>Specifies an X-shaped marker.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.NumberFormatOptions">
      <summary>
        <para>Allows you to specify a number format used to display numeric values in chart elements (axis labels, data labels, and trendline labels).</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.NumberFormatOptions.FormatCode">
      <summary>
        <para>Specifies a number format (in the invariant culture) used to display numeric values in chart elements.</para>
      </summary>
      <value>The number format to apply to chart elements.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.NumberFormatOptions.FormatCodeLocal">
      <summary>
        <para>Specifies a local number format used to display numeric values in chart elements.</para>
      </summary>
      <value>The local number format to apply to chart elements.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.NumberFormatOptions.IsSourceLinked">
      <summary>
        <para>Specifies whether a number format is obtained from the source cells.</para>
      </summary>
      <value>true to obtain a format string from the source cells; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.OfPieSplitType">
      <summary>
        <para>Lists values used to specify the possible ways to split a Pie of Pie or Bar of Pie chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.OfPieSplitType.Auto">
      <summary>
        <para>Specifies that the data points should be automatically split between the main and secondary chart in a Pie of Pie or Bar of Pie chart type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.OfPieSplitType.Custom">
      <summary>
        <para>Specifies that the data points should be split between the main and secondary chart in a Pie of Pie or Bar of Pie chart type according to the values defined by the <see cref="P:DevExpress.Spreadsheet.Charts.ChartView.SecondPiePoints"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.OfPieSplitType.Percent">
      <summary>
        <para>Specifies that the data points should be split between the main and secondary chart in a Pie of Pie or Bar of Pie chart type by placing the data points with percentage less than percent value defined by the <see cref="P:DevExpress.Spreadsheet.Charts.ChartView.SplitPosition"/> property in the second chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.OfPieSplitType.Position">
      <summary>
        <para>Specifies that the data points should be split between the main and secondary chart in a Pie of Pie or Bar of Pie chart type by placing the last data points, whose number is defined by the <see cref="P:DevExpress.Spreadsheet.Charts.ChartView.SplitPosition"/> property, in the second chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.OfPieSplitType.Value">
      <summary>
        <para>Specifies that the data points should be split between the main and secondary chart in a Pie of Pie or Bar of Pie chart type by placing the data points, whose values are less than the value defined by the <see cref="P:DevExpress.Spreadsheet.Charts.ChartView.SplitPosition"/> property, in the second chart.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.PlotArea">
      <summary>
        <para>The chart’s background in which data series, axes, gridlines and data labels are displayed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.PlotArea.Layout">
      <summary>
        <para>Enables you to specify the exact position of a plot area.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutOptions"/> object.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.QuartileCalculationMethod">
      <summary>
        <para>Lists values that specify the quartile calculation method for a box and whisker series.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.QuartileCalculationMethod.ExclusiveMedian">
      <summary>
        <para>Excludes the median from quartile calculation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.QuartileCalculationMethod.InclusiveMedian">
      <summary>
        <para>Includes the median in quartile calculation.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.Series">
      <summary>
        <para>A data series in a chart.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.Arguments">
      <summary>
        <para>Gets or sets the data used as arguments for series points.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying data for chart data points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.AutoGapWidth">
      <summary>
        <para>Returns or specifies whether to calculate the gap width automatically. Applies to Excel 2016 charts.</para>
      </summary>
      <value>true to calculate the gap width automatically; otherwise, false. The default is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.AxisGroup">
      <summary>
        <para>Gets or sets the group type for the axes which are used to plot the series data.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Charts.AxisGroup"/> enumeration member specifying the axis group.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.Series.BringForward">
      <summary>
        <para>Moves the series up one in the chart view plot order.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.Series.BringToFront">
      <summary>
        <para>Moves the series before other series in the chart view.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.BubbleSize">
      <summary>
        <para>Gets or sets data used to specify the size of bubbles in a bubble chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying data to plot.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.Series.ChangeType(DevExpress.Spreadsheet.Charts.ChartType)">
      <summary>
        <para>Changes the chart type used to plot the series.</para>
      </summary>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration specifying the chart type used to plot the series.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.CustomDataLabels">
      <summary>
        <para>Provides access to a collection of data labels customized for specific data points or for the entire series.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.DataLabelCollection"/> containing data labels with settings different from chart defaults.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.CustomDataPoints">
      <summary>
        <para>Provides access to data points with a customized visual appearance.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.DataPointCollection"/> object that is the collection of customized data points.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.Series.Delete">
      <summary>
        <para>Deletes the series.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.ErrorBars">
      <summary>
        <para>Provides access to a collection of error bars for the series.</para>
      </summary>
      <value>A collection of error bars.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.Explosion">
      <summary>
        <para>Gets or sets the explosion value for all slices in a pie or doughnut chart series.</para>
      </summary>
      <value>An integer from 0 to 100 that equals the percentage of the chart radius by which the tips of the slices are moved away from the chart center.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.GapWidth">
      <summary>
        <para>Returns or specifies the distance between data points on the chart.</para>
      </summary>
      <value>The gap width, as a percentage. This value must be between 0 and 500.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.InvertIfNegative">
      <summary>
        <para>Gets or sets whether the color (or pattern) of a data point is changed to another (“inverted”) color if the value is negative.</para>
      </summary>
      <value>true, to invert the color if a value is negative; otherwise, false.
,</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.LayoutOptions">
      <summary>
        <para>Returns series layout options for Excel 2016 charts.</para>
      </summary>
      <value>An object that contains series options for Excel 2016 charts.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.Marker">
      <summary>
        <para>Provides access to the specific settings of data markers displayed by series on the line, scatter or radar chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.Marker"/> object that contains the specific marker settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.Order">
      <summary>
        <para>Gets the order in which series are plotted.</para>
      </summary>
      <value>An integer that characterizes the series order.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.Series.SendBackward">
      <summary>
        <para>Moves the series down one in the chart view plot order.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.Series.SendToBack">
      <summary>
        <para>Moves the series behind all other series in the chart view.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.SeriesName">
      <summary>
        <para>Gets the name of the series.</para>
      </summary>
      <value>A string that is the series name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.SeriesType">
      <summary>
        <para>Gets the series type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member identifying the series type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.Shape">
      <summary>
        <para>Gets or sets the shape used to display data points in the 3D bar or column chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.BarShape"/> enumeration value that specifies the shape used to represent a series data point.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.Smooth">
      <summary>
        <para>Gets or sets whether the curve smoothing is turned on for the line or scatter chart.</para>
      </summary>
      <value>true, to turn on the curve smoothing; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.Trendlines">
      <summary>
        <para>Provides access to a collection of trendlines for the series.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.TrendlineCollection"/> object that is the collection of all the <see cref="T:DevExpress.Spreadsheet.Charts.Trendline"/> objects for the series.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.UseCustomDataLabels">
      <summary>
        <para>Gets or sets whether to apply custom settings to data labels.</para>
      </summary>
      <value>true, to apply custom settings to specific data labels; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.Values">
      <summary>
        <para>Gets or sets the data used as series point values.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object specifying data for chart data points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Series.View">
      <summary>
        <para>Provides access to a view that displays the series.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartView"/> object.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.SeriesCollection">
      <summary>
        <para>A collection that stores data series in the chart.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SeriesCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Appends a new series with the specified name to the collection and provides data for series arguments and series values.</para>
      </summary>
      <param name="seriesName">A string that is the name of the series.</param>
      <param name="arguments">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> of cells containing data to plot as series arguments.</param>
      <param name="values">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> of cells containing data to plot as series values.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Series"/> object that is the newly created series.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SeriesCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Appends a new series with the specified argument and value data to the collection.</para>
      </summary>
      <param name="arguments">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> of cells containing data to plot as series arguments.</param>
      <param name="values">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> of cells containing data to plot as series values.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Series"/> object that is the newly created series.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SeriesCollection.Add(DevExpress.Spreadsheet.Charts.ChartData,DevExpress.Spreadsheet.Charts.ChartData)">
      <summary>
        <para>Appends a new series with the specified argument and value data to the collection.</para>
      </summary>
      <param name="arguments">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the data to plot as series arguments.</param>
      <param name="values">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the data to plot as series values.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Series"/> object that is the newly created series.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SeriesCollection.Add(System.String,DevExpress.Spreadsheet.Charts.ChartData,DevExpress.Spreadsheet.Charts.ChartData)">
      <summary>
        <para>Appends a new series with the specified name to the collection and provides data for series arguments and series values.</para>
      </summary>
      <param name="seriesName">A string that is the name of the series.</param>
      <param name="arguments">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the data to plot as series arguments.</param>
      <param name="values">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartData"/> object that is the data to plot as series values.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Series"/> object that is the newly created series.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SeriesCollection.Clear">
      <summary>
        <para>Removes all objects from the <see cref="T:DevExpress.Spreadsheet.Charts.SeriesCollection"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SeriesCollection.Contains(DevExpress.Spreadsheet.Charts.Series)">
      <summary>
        <para>Determines whether the collection contains the specified series.</para>
      </summary>
      <param name="series">A <see cref="T:DevExpress.Spreadsheet.Charts.Series"/> to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SeriesCollection.IndexOf(DevExpress.Spreadsheet.Charts.Series)">
      <summary>
        <para>Returns the index of the series in the collection.</para>
      </summary>
      <param name="series">A <see cref="T:DevExpress.Spreadsheet.Charts.Series"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the series position within the collection. &#0045;1 if the series does not belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SeriesCollection.Remove(DevExpress.Spreadsheet.Charts.Series)">
      <summary>
        <para>Removes the specified series from a collection.</para>
      </summary>
      <param name="series">A string that is the name of the series to remove.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SeriesCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the element at the specified index of the <see cref="T:DevExpress.Spreadsheet.Charts.SeriesCollection"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the object to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.SeriesLayoutOptions">
      <summary>
        <para>Contains series options for Excel 2016 charts.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.SeriesLayoutOptions.BoxAndWhisker">
      <summary>
        <para>Returns options for a box and whisker data series.</para>
      </summary>
      <value>An object that stores series options for box and whisker charts.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.SeriesLayoutOptions.Histogram">
      <summary>
        <para>Returns options for a histogram or Pareto data series.</para>
      </summary>
      <value>An object that stores series options for histogram and Pareto charts.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.SeriesLayoutOptions.Treemap">
      <summary>
        <para>Returns options for a treemap data series.</para>
      </summary>
      <value>An object that stores series options for a treemap chart.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.SeriesLayoutOptions.Waterfall">
      <summary>
        <para>Returns options for a waterfall data series.</para>
      </summary>
      <value>An object that stores series options for waterfall charts.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ShapeFormat">
      <summary>
        <para>Contains options used to format chart elements.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.ShapeFormat.ResetToMatchStyle">
      <summary>
        <para>Removes custom formatting of the chart element and applies default formatting based on the chart style.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ShapeTextDirection">
      <summary>
        <para>Lists values used to specify the text direction in a chart element.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ShapeTextDirection.Horizontal">
      <summary>
        <para>Specifies that the horizontal text should be used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ShapeTextDirection.Rotated270">
      <summary>
        <para>Specifies that the text should be rotated by 270 degrees and oriented from bottom to top.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ShapeTextDirection.Rotated90">
      <summary>
        <para>Specifies that the text should be rotated by 90 degrees and oriented from top to bottom.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.ShapeTextDirection.Stacked">
      <summary>
        <para>Specifies that text characters should be positioned one below the other.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.ShapeTextFormat">
      <summary>
        <para>Contains options for a text displayed in a chart element.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ShapeTextFormat.Font">
      <summary>
        <para>Provides access to font attributes for text displayed in a chart element.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeTextFont"/> object containing font characteristics.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ShapeTextFormat.TextDirection">
      <summary>
        <para>Gets or sets the text direction in a chart element.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ShapeTextDirection"/> enumeration value specifying the direction of the text displayed in a chart element.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.ShapeTextFormat.TextRotation">
      <summary>
        <para>Gets or sets the value in degrees that the text in a chart element should be rotated.</para>
      </summary>
      <value>An integer value which specifies the rotation angle in degrees. This value must be between -90 and 90.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.SubtotalDataPointCollection">
      <summary>
        <para>A collection of data points that are displayed as totals in a waterfall chart.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SubtotalDataPointCollection.Add(System.Int32)">
      <summary>
        <para>Adds a data point to the collection of ‘total’ points.</para>
      </summary>
      <param name="item">The zero-based position of the data point within the series.</param>
      <returns>A zero-based index of the ‘total’ point within the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SubtotalDataPointCollection.Clear">
      <summary>
        <para>Removes all items from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SubtotalDataPointCollection.Contains(System.Int32)">
      <summary>
        <para>Determines whether the collection contains the specified data point.</para>
      </summary>
      <param name="item">The zero-based position of the target data point within the series.</param>
      <returns>true if the collection contains the specified data point; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SubtotalDataPointCollection.IndexOf(System.Int32)">
      <summary>
        <para>Returns the position of the specified data point within the collection.</para>
      </summary>
      <param name="item">The zero-based position of the target data point within the series.</param>
      <returns>A zero-based index of the data point within the collection. -1 if the point does not belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SubtotalDataPointCollection.Remove(System.Int32)">
      <summary>
        <para>Removes the specified data point from the collection.</para>
      </summary>
      <param name="item">The zero-based position of the target data point within the series.</param>
      <returns>true if the data point is found and successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.SubtotalDataPointCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes a ‘total’ data point with the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based index of the ‘total’ data point to remove.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.SurfaceOptions">
      <summary>
        <para>Contains formatting options for a particular surface of a 3-D chart.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.SurfaceOptions.Thickness">
      <summary>
        <para>Gets or sets the thickness of the 3-D chart walls and floor.</para>
      </summary>
      <value>An integer value that is the wall or floor thickness. This value must be between 0 and 100.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.TreemapParentLabelLayout">
      <summary>
        <para>Lists display options for parent labels in a treemap chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.TreemapParentLabelLayout.Banner">
      <summary>
        <para>Parent labels are displayed as banners above the categories.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.TreemapParentLabelLayout.None">
      <summary>
        <para>Parent labels are not displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Charts.TreemapParentLabelLayout.Overlapping">
      <summary>
        <para>Parent labels are displayed inside the categories.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.TreemapSeriesOptions">
      <summary>
        <para>Contains options for treemap data series.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.TreemapSeriesOptions.ParentLabelLayout">
      <summary>
        <para>Returns or specifies the layout of parent labels in a treemap chart.</para>
      </summary>
      <value>An enumeration member that specifies how parent labels are displayed in the chart.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.Trendline">
      <summary>
        <para>A trendline in a chart that shows trends in the series data.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.AutoName">
      <summary>
        <para>Gets or sets whether a name of the trendline is generated automatically.</para>
      </summary>
      <value>true, to use automatically generated name; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.Backward">
      <summary>
        <para>Gets or sets the number of categories (or units on a scatter chart) that the trendline extends before the data.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the distance measured in lengths of a category on the category axis..</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.CustomName">
      <summary>
        <para>Gets or sets the name of the trendline.</para>
      </summary>
      <value>A string that is the trendline name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.DisplayEquation">
      <summary>
        <para>Gets or sets whether the trendline equation is displayed on a chart.</para>
      </summary>
      <value>true, to display equation; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.DisplayRSquare">
      <summary>
        <para>Gets or sets whether to display the R-squared value of the trendline on the chart.</para>
      </summary>
      <value>true, to display the R-squared value; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.Forward">
      <summary>
        <para>Gets or sets the number of categories (or units on a scatter chart) that the trendline extends after the data.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the distance measured in lengths of a category on the category axis..</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.HasIntercept">
      <summary>
        <para>Gets or sets whether the trendline crosses the value axis at the point specified by the <see cref="P:DevExpress.Spreadsheet.Charts.Trendline.Intercept"/> property.</para>
      </summary>
      <value>true, if the trendline crosses the value axis; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.Intercept">
      <summary>
        <para>Gets or sets the point where the trendline crosses the value axis.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.Label">
      <summary>
        <para>Provides access to trendline label options.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.TrendlineLabel"/> interface that provides access to label properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.Order">
      <summary>
        <para>Gets or sets a value that specifies the trendline order.</para>
      </summary>
      <value>An integer that is the trendline order.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.Period">
      <summary>
        <para>Gets or sets the period for the moving-average trendline.</para>
      </summary>
      <value>An integer from 2 to 255.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.Trendline.TrendlineType">
      <summary>
        <para>Gets or sets the type of the trendline.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartTrendlineType"/> enumeration member identifying the trendline type.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.TrendlineCollection">
      <summary>
        <para>A collection that stores the <see cref="T:DevExpress.Spreadsheet.Charts.Trendline"/> objects for the specified series.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.TrendlineCollection.Add(DevExpress.Spreadsheet.Charts.ChartTrendlineType,System.String)">
      <summary>
        <para>Creates a new trendline of the specified type with the specified name and adds it to the collection.</para>
      </summary>
      <param name="trendlineType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartTrendlineType"/> enumeration member that specifies the trendline type.</param>
      <param name="customName">A string that is the custom name of the trendline.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Trendline"/> object that is the newly added element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.TrendlineCollection.Add(DevExpress.Spreadsheet.Charts.ChartTrendlineType)">
      <summary>
        <para>Creates a new trendline of the specified type and adds it to the collection.</para>
      </summary>
      <param name="trendlineType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartTrendlineType"/> enumeration member that specifies the trendline type.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Charts.Trendline"/> object that is the newly added element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.TrendlineCollection.Clear">
      <summary>
        <para>Removes all items from a collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.TrendlineCollection.Contains(DevExpress.Spreadsheet.Charts.Trendline)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="trendline">A <see cref="T:DevExpress.Spreadsheet.Charts.Trendline"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.TrendlineCollection.IndexOf(DevExpress.Spreadsheet.Charts.Trendline)">
      <summary>
        <para>Returns the index of the specified item in the collection.</para>
      </summary>
      <param name="trendline">A <see cref="T:DevExpress.Spreadsheet.Charts.Trendline"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the item position within the collection. &#0045;1 if the item doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.TrendlineCollection.Remove(DevExpress.Spreadsheet.Charts.Trendline)">
      <summary>
        <para>Removes the specified legend entry from the collection.</para>
      </summary>
      <param name="trendline">A <see cref="T:DevExpress.Spreadsheet.Charts.Trendline"/> object to remove.</param>
      <returns>true, if the collection contained the specified entry and the entry is successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.TrendlineCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the entry at the specified index of the <see cref="T:DevExpress.Spreadsheet.Charts.TrendlineCollection"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the entry to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.TrendlineLabel">
      <summary>
        <para>A label displayed on a trendline.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.TrendlineLabel.Layout">
      <summary>
        <para>Enables you to specify the exact position of a trendline label.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.LayoutOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.TrendlineLabel.NumberFormat">
      <summary>
        <para>Provides access to formatting options for numerical values displayed in trendline labels.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.NumberFormatOptions"/> object that contains formatting options for displaying numbers.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.TrendlineLabel.Text">
      <summary>
        <para>Provides access to the text displayed in the trendline labels.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartText"/> object representing a text displayed in trendline labels.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.UpDownBarsOptions">
      <summary>
        <para>Contains settings used to display up-down bars on a 2-D line or stock chart.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.UpDownBarsOptions.DownBars">
      <summary>
        <para>Provides access to formatting options for the down bars displayed on the 2-D line and stock charts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ShapeFormat"/> object containing options to format chart elements.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.UpDownBarsOptions.GapWidth">
      <summary>
        <para>Gets or sets the space between the up-down bars on a 2-D line or stock chart as a percentage of the bar width.</para>
      </summary>
      <value>An integer value that specifies the gap width. This value must be between 0 and 500.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Charts.UpDownBarsOptions.ResetToMatchStyle">
      <summary>
        <para>Removes custom formatting applied to up-down bars and restores default formatting based on the chart style.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.UpDownBarsOptions.UpBars">
      <summary>
        <para>Provides access to formatting options for the up bars displayed on the 2-D line and stock charts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ShapeFormat"/> object containing options to format chart elements.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.UpDownBarsOptions.Visible">
      <summary>
        <para>Gets or sets a value indicating whether up-down bars should be displayed on a 2-D line or stock chart.</para>
      </summary>
      <value>true, to display up-down bars; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.View3DOptions">
      <summary>
        <para>Contains display options for three-dimensional charts.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.AutoHeight">
      <summary>
        <para>Gets or sets a value indicating whether the height of a 3-D chart should be set automatically.</para>
      </summary>
      <value>true, to adjust the chart height automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.BackWall">
      <summary>
        <para>Provides access to options used to format the back wall of a 3-D chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.SurfaceOptions"/> object containing formatting options for the 3-D chart walls and floor.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.DepthPercent">
      <summary>
        <para>Gets or sets the depth of a 3-D chart.</para>
      </summary>
      <value>An integer value that specifies the depth percentage. This value must be between 20 and 2000.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.Floor">
      <summary>
        <para>Provides access to options used to format the floor of a 3-D chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.SurfaceOptions"/> object containing formatting options for the 3-D chart walls and floor.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.HeightPercent">
      <summary>
        <para>Gets or sets the height of a 3-D chart.</para>
      </summary>
      <value>An integer value that specifies the height percentage. This value must be between 5 and 500.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.Perspective">
      <summary>
        <para>Gets or sets the field of view angle for the 3-D chart.</para>
      </summary>
      <value>An integer value that specifies the degree of perspective. This value must be between 0 and 100.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.RightAngleAxes">
      <summary>
        <para>Gets or sets a value indicating whether the right-angle axes view should be used for the 3-D chart.</para>
      </summary>
      <value>true, to set the chart axes at right angles; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.SideWall">
      <summary>
        <para>Provides access to options used to format the side wall of a 3-D chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.SurfaceOptions"/> object containing formatting options for the 3-D chart walls and floor.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.XRotation">
      <summary>
        <para>Gets or sets the value in degrees at which a 3-D chart should be rotated around the X-axis.</para>
      </summary>
      <value>An integer value which specifies the rotation angle in degrees. This value must be between -90 and 90.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.View3DOptions.YRotation">
      <summary>
        <para>Gets or sets the value in degrees at which a 3-D chart should be rotated around the Y-axis.</para>
      </summary>
      <value>An integer value which specifies the rotation angle in degrees. This value must be between 0 and 360.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Charts.WaterfallSeriesOptions">
      <summary>
        <para>Contains options for waterfall data series.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.WaterfallSeriesOptions.ShowConnectorLines">
      <summary>
        <para>Specifies whether to display connector lines between data points.</para>
      </summary>
      <value>true to display connector lines; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Charts.WaterfallSeriesOptions.SubtotalDataPoints">
      <summary>
        <para>Returns the collection of data points that are displayed as totals in a waterfall chart.</para>
      </summary>
      <value>A collection of ‘total’ data points in a waterfall chart.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ChartSheet">
      <summary>
        <para>A separate sheet in a workbook that contains only a chart.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.ActiveView">
      <summary>
        <para>Provides access to an object that contains options to display and print a chart sheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ChartSheetView"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.Chart">
      <summary>
        <para>Provides access to the chart on the current chart sheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartObject"/> object specifying a chart on the chart sheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.CodeName">
      <summary>
        <para>Gets or sets the chart sheet’s code name.</para>
      </summary>
      <value>The code name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheet.CopyFrom(DevExpress.Spreadsheet.ChartSheet)">
      <summary>
        <para>Copies the specified chart sheet into the current instance.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the source chart sheet for copying.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheet.GetProtectionOptions">
      <summary>
        <para>Returns the chart sheet elements to which protection is applied.</para>
      </summary>
      <returns>A  <see cref="T:DevExpress.Spreadsheet.ChartSheetProtection"/> enumeration value specifying what objects on a chart sheet are protected.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.HeaderFooterOptions">
      <summary>
        <para>Provides access to options which determine the chart sheet header and footer characteristics.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions"/> object containing options specific to headers and footers.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.Index">
      <summary>
        <para>Gets the chart sheet index within the workbook’s <see cref="T:DevExpress.Spreadsheet.ChartSheetCollection"/> collection.</para>
      </summary>
      <value>An integer value specifying a zero-based index of the chart sheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.IsProtected">
      <summary>
        <para>Gets a value indicating whether the chart sheet is protected.</para>
      </summary>
      <value>true, if the chart sheet is protected; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheet.Move(System.Int32)">
      <summary>
        <para>Moves the chart sheet to another location within the workbook’s collection of chart sheets.</para>
      </summary>
      <param name="position">An integer value specifying the zero-based destination index of the moved chart sheet. If this value is negative or exceeds the number of items within the collection, an exception occurs.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.Name">
      <summary>
        <para>Gets or sets the name of the chart sheet.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the chart sheet name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.PrintOptions">
      <summary>
        <para>Provides access to options that control how the chart sheet is printed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ChartSheetPrintOptions"/> object that contains chart sheet print options.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheet.Protect(System.String,DevExpress.Spreadsheet.ChartSheetProtection)">
      <summary>
        <para>Protects chart sheet elements to prevent them from being changed by the user.</para>
      </summary>
      <param name="password">A string that specifies a password for the chart sheet. If the password is an empty string, the chart sheet can be unprotected without using a password.</param>
      <param name="options">A <see cref="T:DevExpress.Spreadsheet.ChartSheetProtection"/> enumeration member that allows you to specify chart sheet elements to protect.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.Tag">
      <summary>
        <para>Gets or sets the data associated with a <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> that contains arbitrary data for a chart sheet. The default is null.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheet.Unprotect(System.String)">
      <summary>
        <para>Removes protection from a chart sheet.</para>
      </summary>
      <param name="password">A string that specifies the password used to protect the chart sheet.</param>
      <returns>true, if protection is successfully removed; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.VisibilityType">
      <summary>
        <para>Gets or sets whether the current chart sheet is visible, hidden or “very hidden”.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetVisibilityType"/> enumeration member that specifies the chart sheet visibility type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.Visible">
      <summary>
        <para>Gets or sets a value indicating whether the current chart sheet is visible.</para>
      </summary>
      <value>true, if the chart sheet is visible; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheet.Workbook">
      <summary>
        <para>Gets a workbook that contains the current chart sheet.</para>
      </summary>
      <value>An object exposing the <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> interface.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ChartSheetCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> objects contained in a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheetCollection.ActiveChartSheet">
      <summary>
        <para>Gets or sets the currently active chart sheet within a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the active chart sheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Add">
      <summary>
        <para>Creates a new chart sheet and appends it to the end of the collection.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the new chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Add(DevExpress.Spreadsheet.Charts.ChartType,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a new chart sheet with the specified chart and appends it to the end of the collection.</para>
      </summary>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> containing chart data.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the new chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Add(DevExpress.Spreadsheet.Charts.ChartType)">
      <summary>
        <para>Creates a new chart sheet of the specified type and appends it to the end of the collection.</para>
      </summary>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the new chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Add(System.String,DevExpress.Spreadsheet.Charts.ChartType,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a new chart sheet under the specified name with the specified chart and appends it to the end of the collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the chart sheet name.</param>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> containing chart data.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the new chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Add(System.String,DevExpress.Spreadsheet.Charts.ChartType)">
      <summary>
        <para>Creates a new chart sheet of the specified type and under the specified name and appends it to the end of the collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the chart sheet name.</param>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the new chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Add(System.String)">
      <summary>
        <para>Creates a new chart sheet under the specified name and appends it to the end of the collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the chart sheet name.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the new chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Contains(DevExpress.Spreadsheet.ChartSheet)">
      <summary>
        <para>Determines whether the collection contains the specified chart sheet.</para>
      </summary>
      <param name="chartSheet">A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified chart sheet; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Contains(System.String)">
      <summary>
        <para>Determines whether the collection contains a chart sheet under the specified name.</para>
      </summary>
      <param name="name">A string specifying the name of the chart sheet to locate in the collection.</param>
      <returns>true, if the collection contains the chart sheet under the specified name; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.IndexOf(DevExpress.Spreadsheet.ChartSheet)">
      <summary>
        <para>Returns the zero-based index of the specified chart sheet in the collection.</para>
      </summary>
      <param name="chartSheet">A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the chart sheet position within the collection. &#0045;1 if the chart sheet doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Insert(System.Int32,DevExpress.Spreadsheet.Charts.ChartType,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a new chart sheet with the specified chart and appends it to the collection at the specified position.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which a new chart sheet should be inserted.</param>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> containing chart data.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the created chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Insert(System.Int32,DevExpress.Spreadsheet.Charts.ChartType)">
      <summary>
        <para>Creates a new chart sheet of the specified type and appends it to the collection at the specified position.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which a new chart sheet should be inserted.</param>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the created chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Insert(System.Int32,System.String,DevExpress.Spreadsheet.Charts.ChartType,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a new chart sheet under the specified name with the specified chart and appends it to the collection at the specified position.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which a new chart sheet should be inserted.</param>
      <param name="name">A <see cref="T:System.String"/> value that specifies the chart sheet name.</param>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> containing chart data.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the created chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Insert(System.Int32,System.String,DevExpress.Spreadsheet.Charts.ChartType)">
      <summary>
        <para>Creates a new chart sheet of the specified type and under the specified name and appends it to the collection at the specified position.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which a new chart sheet should be inserted.</param>
      <param name="name">A <see cref="T:System.String"/> value that specifies the chart sheet name.</param>
      <param name="chartType">A <see cref="T:DevExpress.Spreadsheet.Charts.ChartType"/> enumeration member specifying the chart type.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the created chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Insert(System.Int32,System.String)">
      <summary>
        <para>Creates a new chart sheet under the specified name and appends it to the collection at the specified position.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which a new chart sheet should be inserted.</param>
      <param name="name">A <see cref="T:System.String"/> value that specifies the chart sheet name.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the new chart sheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Insert(System.Int32)">
      <summary>
        <para>Creates a new chart sheet and appends it to the collection at the specified position.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which a new chart sheet should be inserted.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that specifies the created chart sheet.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheetCollection.Item(System.String)">
      <summary>
        <para>Gets a chart sheet by its name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name of the chart sheet to obtain.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object that is the chart sheet with the specified name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.Remove(DevExpress.Spreadsheet.ChartSheet)">
      <summary>
        <para>Removes the specified chart sheet from the collection.</para>
      </summary>
      <param name="chartSheet">A <see cref="T:DevExpress.Spreadsheet.ChartSheet"/> object specifying a chart sheet to be removed from a workbook.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ChartSheetCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the chart sheet at the specified position from the collection.</para>
      </summary>
      <param name="index">An integer that is the zero-based index of a chart sheet to be deleted from a workbook.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ChartSheetPrintOptions">
      <summary>
        <para>Contains options used for printing a chart sheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheetPrintOptions.BlackAndWhite">
      <summary>
        <para>Gets or sets whether to print the chart sheet in black and white or in color.</para>
      </summary>
      <value>true, to print the chart sheet in black and white; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheetPrintOptions.Draft">
      <summary>
        <para>Gets or sets whether to print the chart sheet using the draft quality setting.</para>
      </summary>
      <value>true, to use draft quality printing; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheetPrintOptions.NumberOfCopies">
      <summary>
        <para>Gets or sets the number of chart sheet copies to print.</para>
      </summary>
      <value>A positive integer that is a number of copies to print.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ChartSheetProtection">
      <summary>
        <para>Lists values used to specify chart sheet elements to which protection is applied.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ChartSheetProtection.Content">
      <summary>
        <para>Specifies that protection is applied to the chart elements. However, the chart reflects changes made to its data source.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ChartSheetProtection.Default">
      <summary>
        <para>Specifies that protection is applied to both the chart elements and drawing objects on the chart sheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ChartSheetProtection.Objects">
      <summary>
        <para>Specifies that protection is applied to graphic objects located on the chart sheet.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ChartSheetView">
      <summary>
        <para>Contains display and print settings for a chart sheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ChartSheetView.ZoomToFit">
      <summary>
        <para>Gets or sets a value indicating whether the chart on the chart sheet should be automatically adjusted to fit the window’s display area.</para>
      </summary>
      <value>true, to zoom the chart sheet to fit the window; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ClipboardDataObtainedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ClipboardDataObtained"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ClipboardDataObtainedEventArgs.Flags">
      <summary>
        <para>Gets or sets the part of the copied data to be pasted into the target range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PasteSpecial"/> enumeration member.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ClipboardDataObtainedEventArgs.GetWorksheet">
      <summary>
        <para>Gets a worksheet from the temporary document model containing data to be pasted.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ClipboardDataObtainedEventArgs.Range">
      <summary>
        <para>Gets or sets a cell range in a worksheet from the temporary document model (returned by the <see cref="M:DevExpress.Spreadsheet.ClipboardDataObtainedEventArgs.GetWorksheet"/> method) containing data to be pasted.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a cell reference to the range from which data are going to be pasted.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ClipboardDataObtainedEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ClipboardDataObtained"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.ClipboardDataObtainedEventArgs"/> object that contains the event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ClipboardDataPastedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ClipboardDataPasted"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ClipboardDataPastedEventArgs.PictureId">
      <summary>
        <para>Gets the ID value of the inserted picture.</para>
      </summary>
      <value>An integer value that specifies the picture’s unique identifier. -1, if no picture is inserted.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ClipboardDataPastedEventArgs.PictureName">
      <summary>
        <para>Gets the name of the inserted picture.</para>
      </summary>
      <value>A string that specifies the picture’s name. An empty string, if no picture is inserted.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ClipboardDataPastedEventArgs.TargetRange">
      <summary>
        <para>Gets the cell range into which the data has been pasted.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a cell reference to the destination cell range.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ClipboardDataPastedEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ClipboardDataPasted"/> event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.ClipboardDataPastedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ClipboardDataPastingEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ClipboardDataPasting"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> that raised the event.</param>
      <param name="e">An EventArgs object that contains the event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColorScale2ConditionalFormatting">
      <summary>
        <para>Represents a two-color scale conditional formatting rule.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColorScale2ConditionalFormatting.MaxPoint">
      <summary>
        <para>Gets the maximum threshold of the color scale conditional formatting rule.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the threshold value and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColorScale2ConditionalFormatting.MaxPointColor">
      <summary>
        <para>Gets the color corresponding to the maximum threshold of the two-color scale conditional formatting rule.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that defines the color for the maximum value in the range of cells.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColorScale2ConditionalFormatting.MinPoint">
      <summary>
        <para>Gets the minimum threshold of the color scale conditional formatting rule.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the threshold value and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColorScale2ConditionalFormatting.MinPointColor">
      <summary>
        <para>Gets the color corresponding to the minimum threshold specified in the two-color scale conditional formatting rule.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that defines the color for the minimum value in the range of cells.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColorScale3ConditionalFormatting">
      <summary>
        <para>Represents a three-color scale conditional formatting rule.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColorScale3ConditionalFormatting.MidPoint">
      <summary>
        <para>Gets the midpoint threshold of the three-color scale conditional formatting rule.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the midpoint threshold value and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColorScale3ConditionalFormatting.MidPointColor">
      <summary>
        <para>Gets the color corresponding to the midpoint threshold specified in the three-color scale conditional formatting rule.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that defines the color for the midpoint value in the range of cells.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Column">
      <summary>
        <para>A single column in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Column.AutoFit">
      <summary>
        <para>Adjusts the column width to accommodate cell content.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Column.Delete">
      <summary>
        <para>Deletes a column from a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Column.GroupLevel">
      <summary>
        <para>Gets the grouping level of the affected column.</para>
      </summary>
      <value>An integer that specifies the grouping level of the column. This value is between 0 and 7.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Column.Heading">
      <summary>
        <para>Gets the column heading.</para>
      </summary>
      <value>A string that specifies the column heading.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Column.Index">
      <summary>
        <para>Gets the zero-based index of the column within the worksheet’s <see cref="T:DevExpress.Spreadsheet.ColumnCollection"/>.</para>
      </summary>
      <value>An integer specifying the position of the column in the worksheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Column.Insert">
      <summary>
        <para>Inserts a new column into the worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Column.Item(System.Int32)">
      <summary>
        <para>Provides access to an individual cell located at the intersection of the current column and the specified row.</para>
      </summary>
      <param name="rowIndex">An integer that is the zero-based index of the row.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the cell at the specified row.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Column.Item(System.String)">
      <summary>
        <para>Provides access to an individual cell located at the intersection of the current column and the specified row.</para>
      </summary>
      <param name="rowHeading">An string that is the row heading displayed at the left of a worksheet.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the cell at the specified row.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Column.Visible">
      <summary>
        <para>Gets or sets whether the column is visible or hidden.</para>
      </summary>
      <value>true if the column is visible; otherwise false</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Column.Width">
      <summary>
        <para>Gets or sets the column width.</para>
      </summary>
      <value>The column width in measurement units defined by the Workbook.Unit property.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Column.WidthInCharacters">
      <summary>
        <para>Gets or sets the column width in characters of the default font specified by the built-in Normal style.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the number of characters that can be accommodated into the column width when the column is formatted with the  built-in Normal style.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Column.WidthInPixels">
      <summary>
        <para>Gets or sets the column width in pixels.</para>
      </summary>
      <value>An integer value that is the column width in pixels.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColumnCollection">
      <summary>
        <para>A collection of all columns in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.AutoFit(System.Int32,System.Int32)">
      <summary>
        <para>Adjusts the width of columns to accommodate cell content.</para>
      </summary>
      <param name="first">An integer value specifying the zero-based index of the first column to be automatically resized.</param>
      <param name="last">An integer value specifying the zero-based index of the last column to be automatically resized.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.AutoFit(System.String,System.String)">
      <summary>
        <para>Adjusts column widths to fit the cell content.</para>
      </summary>
      <param name="firstColumnHeading">The heading of the first column to resize.</param>
      <param name="lastColumnHeading">The heading of the last column to resize.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.AutoOutline">
      <summary>
        <para>Automatically creates an outline for the specified columns.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.ClearOutline">
      <summary>
        <para>Removes an outline of columns.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.ClearOutline(System.Int32,System.Int32)">
      <summary>
        <para>Clears an outline for the specified columns.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first column to be ungrouped.</param>
      <param name="last">A zero-based integer representing the index of the last column to be ungrouped.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.ClearOutline(System.String,System.String)">
      <summary>
        <para>Clears an outline for the specified columns.</para>
      </summary>
      <param name="firstColumnHeading">The heading of the first column to ungroup.</param>
      <param name="lastColumnHeading">The heading of the last column to ungroup.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.CollapseAllGroups">
      <summary>
        <para>Collapses all the column groups in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.CollapseGroups(System.Int32)">
      <summary>
        <para>Collapses all column groups starting from the specified level.</para>
      </summary>
      <param name="level">A <see cref="T:System.Int32"/> value that specifies the grouping level starting from which column groups should be collapsed.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.ExpandAllGroups">
      <summary>
        <para>Expands all the column groups in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Group(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Groups the specified columns on a worksheet.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first column to be grouped.</param>
      <param name="last">A zero-based integer representing the index of the last column to be grouped.</param>
      <param name="collapse">true, if the created group is collapsed; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Group(System.String,System.String,System.Boolean)">
      <summary>
        <para>Groups the specified columns on a worksheet.</para>
      </summary>
      <param name="firstColumnHeading">The heading of the first column to group.</param>
      <param name="lastColumnHeading">The heading of the last column to group.</param>
      <param name="collapse">true, if the created group is collapsed; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Hide(System.Int32,System.Int32)">
      <summary>
        <para>Hides the specified columns in a worksheet.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first column to be hidden.</param>
      <param name="last">A zero-based integer representing the index of the last column to be hidden.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Hide(System.String,System.String)">
      <summary>
        <para>Hides the specified columns in a worksheet.</para>
      </summary>
      <param name="firstColumnHeading">The heading of the first column to hide.</param>
      <param name="lastColumnHeading">The heading of the last column to hide.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Insert(System.Int32,System.Int32,DevExpress.Spreadsheet.ColumnFormatMode)">
      <summary>
        <para>Inserts multiple columns and specifies how to format these columns.</para>
      </summary>
      <param name="index">A zero-based index of the first column to insert. If the index is negative or exceeds the last available index (16383), an exception occurs.</param>
      <param name="count">The number of columns to insert.</param>
      <param name="formatMode">An enumeration member that specifies how to format inserted columns.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Insert(System.Int32,System.Int32)">
      <summary>
        <para>Inserts multiple columns into the worksheet.</para>
      </summary>
      <param name="index">A zero-based index of the first column to insert. If the index is negative or exceeds the last available index (16383), an exception occurs.</param>
      <param name="count">The number of columns to insert.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Insert(System.Int32)">
      <summary>
        <para>Inserts a new column into the worksheet at the specified position.</para>
      </summary>
      <param name="index">A zero-based index of the column to insert. If the index is negative or exceeds the last available index (16383), an exception occurs.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Insert(System.String,System.Int32,DevExpress.Spreadsheet.ColumnFormatMode)">
      <summary>
        <para>Inserts multiple columns and specifies how to format these columns.</para>
      </summary>
      <param name="columnHeading">The heading of the first column to insert. Specify headings in the A1 reference style.</param>
      <param name="count">The number of columns to insert.</param>
      <param name="formatMode">An enumeration member that specifies how to format inserted columns.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Insert(System.String,System.Int32)">
      <summary>
        <para>Inserts multiple columns into the worksheet.</para>
      </summary>
      <param name="columnHeading">The heading of the first column to insert. Specify headings in the A1 reference style.</param>
      <param name="count">The number of columns to insert.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Insert(System.String)">
      <summary>
        <para>Inserts a column with the specified heading into the worksheet.</para>
      </summary>
      <param name="columnHeading">The heading of the column to insert. Specify headings in the A1 reference style.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColumnCollection.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to individual columns in the collection.</para>
      </summary>
      <param name="columnIndex">A zero-based integer specifying the desired column’s position within the collection. If it’s negative or exceeds the last available index (a worksheet limits the number of columns to 16384), an exception is raised.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Column"/> object which specifies the column at the specified position.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColumnCollection.Item(System.String)">
      <summary>
        <para>Provides access to an individual column in the collection by its heading.</para>
      </summary>
      <param name="columnHeading">A string that specifies the heading of the column to be obtained in the A1 reference style (the letter or combination of letters, for example, “A”, “B”, “C”,…,”XFD”).</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Column"/> object that is a column with the specified heading.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColumnCollection.LastUsedIndex">
      <summary>
        <para>Gets the index of the last edited column on a worksheet.</para>
      </summary>
      <value>A zero-based integer representing the index of the last modified column.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Remove(System.Func{System.Int32,System.Boolean})">
      <summary>
        <para>Removes columns that match the specified condition from the worksheet.</para>
      </summary>
      <param name="predicate">A delegate that is the function to check for a condition in each column.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Remove(System.Int32,System.Func{System.Int32,System.Boolean})">
      <summary>
        <para>Removes columns that match the specified condition from the worksheet.</para>
      </summary>
      <param name="first">An integer that is the index of the column from which the check should start.</param>
      <param name="predicate">A function to test for a condition in each column.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Remove(System.Int32,System.Int32,System.Func{System.Int32,System.Boolean})">
      <summary>
        <para>Removes columns that match the specified condition from the worksheet.</para>
      </summary>
      <param name="first">An integer that specifies the index of a column from which the check should start.</param>
      <param name="last">An integer that specifies the index of a column on which the check should end.</param>
      <param name="predicate">A delegate that is the function to check for a condition in each column.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Remove(System.Int32,System.Int32)">
      <summary>
        <para>Removes multiple columns from a worksheet.</para>
      </summary>
      <param name="index">A zero-based index of the first column to remove. If it is negative or exceeds the last available index (16383), an exception occurs.</param>
      <param name="count">Specifies the number of columns to remove.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Remove(System.Int32)">
      <summary>
        <para>Removes the column at the specified position from the worksheet.</para>
      </summary>
      <param name="index">A zero-based index of the column to remove. If it is negative or exceeds the last available index (16383), an exception occurs.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Remove(System.String,System.String)">
      <summary>
        <para>Removes multiple columns from a worksheet.</para>
      </summary>
      <param name="firstColumnHeading">The heading of the first column to remove.</param>
      <param name="lastColumnHeading">The heading of the last column to remove.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Remove(System.String)">
      <summary>
        <para>Removes a column with the specified heading from the worksheet.</para>
      </summary>
      <param name="columnHeading">The heading of the column to remove.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.UnGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Ungroups the grouped columns on a worksheet.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first column to be ungrouped.</param>
      <param name="last">A zero-based integer representing the index of the last column to be ungrouped.</param>
      <param name="unhideCollapsed">true, if the collapsed columns are displayed after ungrouping; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.UnGroup(System.String,System.String,System.Boolean)">
      <summary>
        <para>Ungroups the grouped columns on a worksheet.</para>
      </summary>
      <param name="firstColumnHeading">The heading of the first column to ungroup.</param>
      <param name="lastColumnHeading">The heading of the last column to ungroup.</param>
      <param name="unhideCollapsed">true, to show the collapsed columns after the ungroup operation; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Unhide(System.Int32,System.Int32)">
      <summary>
        <para>Displays the hidden columns on a worksheet.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first column to be unhidden.</param>
      <param name="last">A zero-based integer representing the index of the last column to be unhidden.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnCollection.Unhide(System.String,System.String)">
      <summary>
        <para>Displays the hidden columns on a worksheet.</para>
      </summary>
      <param name="firstColumnHeading">The index of the first column to unhide.</param>
      <param name="lastColumnHeading">The index of the last column to unhide.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColumnFormatMode">
      <summary>
        <para>Lists values that specify how to format inserted columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ColumnFormatMode.FormatAsNext">
      <summary>
        <para>Specifies that new columns should have the same formatting as the column to the right of inserted columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ColumnFormatMode.FormatAsPrevious">
      <summary>
        <para>Specifies that new columns should have the same formatting as the column to the left of inserted columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ColumnFormatMode.None">
      <summary>
        <para>Specifies that inserted columns should have no formatting applied.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColumnsChangedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.ColumnsInserted and the SpreadsheetControl.ColumnsRemoved events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnsChangedEventArgs.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ColumnsChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the name of the sheet being modified.</param>
      <param name="startIndex">An integer specifying the index of the column with which the operation starts.</param>
      <param name="count">An integer specifying the number of columns affected.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColumnsChangedEventArgs.Count">
      <summary>
        <para>Gets the number of columns inserted or removed.</para>
      </summary>
      <value>An integer that is the number of affected columns.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColumnsChangedEventArgs.StartIndex">
      <summary>
        <para>Gets the index of the first column after which the columns are inserted or removed.</para>
      </summary>
      <value>An integer that is the index of a column from which insertion or removal starts.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColumnsChangingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ColumnsInserting"/> and <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ColumnsRemoving"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnsChangingEventArgs.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ColumnsChangingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the name of the worksheet being modified.</param>
      <param name="startIndex">An integer specifying the index of the column from which the operation starts.</param>
      <param name="count">An integer specifying the number of columns affected.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColumnsInsertedEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ColumnsInserted"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.ColumnsChangedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColumnsRemovedEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ColumnsRemoved"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.ColumnsChangedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColumnWidthChangedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.ColumnWidthChanged event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ColumnWidthChangedEventArgs.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ColumnWidthChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A name of the worksheet that contains the modified column.</param>
      <param name="index">A zero-based index of the column whose width was changed.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ColumnWidthChangedEventArgs.Index">
      <summary>
        <para>Returns the index of the column whose width was changed.</para>
      </summary>
      <value>A zero-based column index.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ColumnWidthChangedEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl.ColumnWidthChanged event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Comment">
      <summary>
        <para>A comment added to a cell.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Comment.Author">
      <summary>
        <para>Gets or sets a name of the comment author.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the comment author.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Comment.Reference">
      <summary>
        <para>Gets the reference to the cell containing the comment.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a reference to the commented cell.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Comment.Runs">
      <summary>
        <para>Provides access to the collection of comment text regions, each formatted with its own font.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CommentRunCollection"/> object specifying a collection of comment runs.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Comment.Text">
      <summary>
        <para>Specifies the text of a comment.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text to be displayed in the comment box.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Comment.Visible">
      <summary>
        <para>Gets or sets a value indicating whether the comment should be displayed in a cell.</para>
      </summary>
      <value>True, to show a comment; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentChangedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.CommentInserted and SpreadsheetControl.CommentRemoved events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentChangedEventArgs.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.CommentChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the worksheet name.</param>
      <param name="index">An integer that is the index in the comment collection.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.CommentChangedEventArgs.Index">
      <summary>
        <para>Gets an index of a comment in the collection.</para>
      </summary>
      <value>An integer that is the zero-based index in the <see cref="T:DevExpress.Spreadsheet.CommentCollection"/>.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentChangedEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CommentInserted"/>, <see cref="E:DevExpress.Xpf.Spreadsheet.SpreadsheetControl.CommentInserted"/>, <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CommentRemoved"/> and <see cref="E:DevExpress.Xpf.Spreadsheet.SpreadsheetControl.CommentRemoved"/> events.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.CommentChangedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentCollection">
      <summary>
        <para>A collection of comments contained in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentCollection.Add(DevExpress.Spreadsheet.CellRange,System.String,System.String)">
      <summary>
        <para>Adds a comment to the specified cell and returns the newly created object.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell to which a comment is added. If you pass a range of cells, the comment will be added to the top-left cell in a range.</param>
      <param name="author">A <see cref="T:System.String"/> value that specifies a name of the comment author. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.Comment.Author"/> property.</param>
      <param name="text">A <see cref="T:System.String"/> value that specifies the text to be displayed in the comment box. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.Comment.Text"/> property.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Comment"/> object that specifies the created comment.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentCollection.Add(DevExpress.Spreadsheet.CellRange,System.String)">
      <summary>
        <para>Adds an empty comment to the specified cell and returns the newly created object.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell to which a comment is added. If you pass a range of cells, the comment will be added to the top-left cell in a range.</param>
      <param name="author">A <see cref="T:System.String"/> value that specifies a name of the comment author. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.Comment.Author"/> property.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Comment"/> object that specifies the created comment.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentCollection.Clear">
      <summary>
        <para>Removes all comments from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentCollection.Contains(DevExpress.Spreadsheet.Comment)">
      <summary>
        <para>Indicates whether the collection contains the specified comment.</para>
      </summary>
      <param name="comment">A <see cref="T:DevExpress.Spreadsheet.Comment"/> object to locate in the collection.</param>
      <returns>True, if the collection contains the comment; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentCollection.GetComments(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Gets the comment(s) contained in the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range that contains comments to be returned.</param>
      <returns>A collection of comments within the specified range of cells.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentCollection.IndexOf(DevExpress.Spreadsheet.Comment)">
      <summary>
        <para>Returns the index of the specified comment in the collection.</para>
      </summary>
      <param name="comment">A <see cref="T:DevExpress.Spreadsheet.Comment"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the comment’s position within the collection. &#0045;1 if the comment doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentCollection.Remove(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes comments from the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells containing comments to be deleted.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentCollection.Remove(DevExpress.Spreadsheet.Comment)">
      <summary>
        <para>Removes the specified comment from the collection.</para>
      </summary>
      <param name="comment">A <see cref="T:DevExpress.Spreadsheet.Comment"/> object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the comment at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the comment to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentInsertingEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.CommentInserting event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentInsertingEventArgs.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.CommentInsertingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the worksheet name.</param>
      <param name="reference">A string that is the reference to the commented cell.</param>
      <param name="author">A string that specifies the comment author.</param>
      <param name="text">A string that is the text to be displayed in the comment box.</param>
      <param name="visible">True, if the comment is displayed; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.CommentInsertingEventArgs.Author">
      <summary>
        <para>Gets or sets a name of the comment author.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the comment author.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CommentInsertingEventArgs.Reference">
      <summary>
        <para>Gets the reference to the cell containing the comment.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a reference to the commented cell.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CommentInsertingEventArgs.Text">
      <summary>
        <para>Specifies the text of a comment.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text to be displayed in the comment box.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CommentInsertingEventArgs.Visible">
      <summary>
        <para>Gets or sets a value indicating whether the comment should be displayed in a cell.</para>
      </summary>
      <value>True, to show a comment; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentInsertingEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CommentInserting"/> and <see cref="E:DevExpress.Xpf.Spreadsheet.SpreadsheetControl.CommentInserting"/> events.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.CommentInsertingEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentRemovingEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.CommentRemoving event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentRemovingEventArgs.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.CommentRemovingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the worksheet name.</param>
      <param name="index">An integer that is the index in the comment collection.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.CommentRemovingEventArgs.Index">
      <summary>
        <para>Gets an index of a comment in the collection.</para>
      </summary>
      <value>An integer that is the zero-based index in the <see cref="T:DevExpress.Spreadsheet.CommentCollection"/>.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentRemovingEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CommentRemoving"/> and <see cref="E:DevExpress.Xpf.Spreadsheet.SpreadsheetControl.CommentRemoving"/> events.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.CommentRemovingEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentRun">
      <summary>
        <para>A comment text region with its own set of font characteristics.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CommentRun.Font">
      <summary>
        <para>Specifies the font of the current comment run.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFont"/> object providing properties to change font attributes.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CommentRun.Text">
      <summary>
        <para>Gets or sets the text of the current comment run.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the region of the comment text.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentRunCollection">
      <summary>
        <para>A collection of comment text regions, each formatted with its own font.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentRunCollection.Add(System.String)">
      <summary>
        <para>Adds the specified string to the end of the comment text and returns the created CommentRun object.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies a text region within a comment. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.CommentRun.Text"/> property.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CommentRun"/> object that specifies the created comment run.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentRunCollection.Clear">
      <summary>
        <para>Removes all text from the comment.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentRunCollection.Contains(DevExpress.Spreadsheet.CommentRun)">
      <summary>
        <para>Indicates whether the collection contains the specified comment run.</para>
      </summary>
      <param name="run">A <see cref="T:DevExpress.Spreadsheet.CommentRun"/> object to locate in the collection.</param>
      <returns>True, if the collection contains the comment run; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentRunCollection.IndexOf(DevExpress.Spreadsheet.CommentRun)">
      <summary>
        <para>Returns the index of the specified CommentRun object in the collection.</para>
      </summary>
      <param name="run">A <see cref="T:DevExpress.Spreadsheet.CommentRun"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the comment run’s position within the collection. &#0045;1 if the comment run doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentRunCollection.Insert(System.Int32,System.String)">
      <summary>
        <para>Inserts the specified text string at a specified index position within the comment.</para>
      </summary>
      <param name="index">The zero-based index position of the insertion. It should be non-negative and less than the number of elements in the collection.</param>
      <param name="text">A <see cref="T:System.String"/> value, that specifies the text string to be inserted.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentRunCollection.Remove(DevExpress.Spreadsheet.CommentRun)">
      <summary>
        <para>Removes the specified CommentRun object from the collection.</para>
      </summary>
      <param name="run">A <see cref="T:DevExpress.Spreadsheet.CommentRun"/> object that defines a text region to be deleted from the comment.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CommentRunCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the CommentRun object at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the comment run to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.CommentsPrintMode">
      <summary>
        <para>Lists the values to specify how cell comments are printed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CommentsPrintMode.AsDisplayed">
      <summary>
        <para>Cell comments are printed as they are displayed on a worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CommentsPrintMode.AtEnd">
      <summary>
        <para>Cell comments are printed in a separate page.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CommentsPrintMode.None">
      <summary>
        <para>Cell comments are not printed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormatting">
      <summary>
        <para>A conditional format applied to a range of cells.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormatting.Priority">
      <summary>
        <para>Specifies the priority of the conditional formatting rule.</para>
      </summary>
      <value>A positive integer that is the precedence of the conditional formatting rule.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormatting.Range">
      <summary>
        <para>Gets or sets the range of cells to which the conditional formatting rule is applied.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range to which the conditional formatting rule is applied.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormatting.Ranges">
      <summary>
        <para>Gets or sets a collection of ranges, to which the conditional format is applied.</para>
      </summary>
      <value>A collection of cell ranges with a conditional format.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormatting.StopIfTrue">
      <summary>
        <para>Specifies whether the rules with lower priority can be applied.</para>
      </summary>
      <value>true, if no conditional formatting rules with lower priority can be applied over the specified rule; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingAverageCondition">
      <summary>
        <para>Lists values that specify the type of the conditional format operator in an &quot;above or below average&quot; conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingAverageCondition.Above">
      <summary>
        <para>Formats cells whose values are above the average value in a range of cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingAverageCondition.AboveOrEqual">
      <summary>
        <para>Formats cells whose values are above or equal to the average value in a range of cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingAverageCondition.Below">
      <summary>
        <para>Formats cells whose values are below the average value in a range of cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingAverageCondition.BelowOrEqual">
      <summary>
        <para>Formats cells whose values are below or equal to the average value in a range of cells.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingCollection">
      <summary>
        <para>A collection of all conditional formatting rules on a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddAverageConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingAverageCondition,System.Int32)">
      <summary>
        <para>Applies the &quot;above or below average…&quot; conditional formatting rule.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="condition">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingAverageCondition"/> enumeration values.</param>
      <param name="stdDev">A positive integer that represents the number of standard deviations to be included above or below the average.</param>
      <returns>An <see cref="T:DevExpress.Spreadsheet.AverageConditionalFormatting"/> object that represents the specified conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddAverageConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingAverageCondition)">
      <summary>
        <para>Applies the &quot;above or below average…&quot; conditional formatting rule.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="condition">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingAverageCondition"/> enumeration values.</param>
      <returns>An <see cref="T:DevExpress.Spreadsheet.AverageConditionalFormatting"/> object that represents the specified conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddColorScale2ConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingValue,System.Drawing.Color,DevExpress.Spreadsheet.ConditionalFormattingValue,System.Drawing.Color)">
      <summary>
        <para>Applies the two-color scale conditional formatting rule.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="minPoint">The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the minimum threshold and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</param>
      <param name="minPointColor">A <see cref="T:System.Drawing.Color"/> object that defines a color representing the minimum value in the range of cells.</param>
      <param name="maxPoint">The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the maximum threshold and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</param>
      <param name="maxPointColor">A <see cref="T:System.Drawing.Color"/> object that defines a color representing the maximum value in the range of cells.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ColorScale2ConditionalFormatting"/> object that represents the two-color scale conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddColorScale3ConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingValue,System.Drawing.Color,DevExpress.Spreadsheet.ConditionalFormattingValue,System.Drawing.Color,DevExpress.Spreadsheet.ConditionalFormattingValue,System.Drawing.Color)">
      <summary>
        <para>Applies the three-color scale conditional formatting rule.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="minPoint">The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the minimum threshold and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</param>
      <param name="minPointColor">A <see cref="T:System.Drawing.Color"/> object that defines a color representing the minimum value in the range of cells.</param>
      <param name="midPoint">The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the midpoint threshold and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</param>
      <param name="midPointColor">A <see cref="T:System.Drawing.Color"/> object that defines a color representing the midpoint value in the range of cells.</param>
      <param name="maxPoint">The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the maximum threshold and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</param>
      <param name="maxPointColor">A <see cref="T:System.Drawing.Color"/> object that defines a color representing the maximum value in the range of cells.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ColorScale3ConditionalFormatting"/> object that represents the three-color scale conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddDataBarConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingValue,DevExpress.Spreadsheet.ConditionalFormattingValue,System.Drawing.Color)">
      <summary>
        <para>Applies the data bar conditional formatting rule.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="lowBound">The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines a threshold value corresponding to the shortest bar.</param>
      <param name="highBound">The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines a threshold value corresponding to the longest bar.</param>
      <param name="color">A <see cref="T:System.Drawing.Color"/> object that specifies the color of the data bar.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.DataBarConditionalFormatting"/> object that represents the data bar conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddExpressionConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingExpressionCondition,System.String)">
      <summary>
        <para>Applies a conditional formatting rule that uses a relational operator to determine which cells to format.</para>
      </summary>
      <param name="range">A cell range to which the conditional formatting rule is applied.</param>
      <param name="condition">An enumeration value that specifies the relational operator.</param>
      <param name="value">A threshold. You can specify a formula in the invariant culture to evaluate the threshold. If you use a formula, start it with an equal sign (&#61;). The formula can include the Spreadsheet’s built-in functions. You can combine relative and absolute references to adjust the formula in each cell.</param>
      <returns>The conditional formatting rule that this method creates.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddFormulaExpressionConditionalFormatting(DevExpress.Spreadsheet.CellRange,System.String)">
      <summary>
        <para>Applies a conditional formatting rule that uses a formula to determine which cells to format.</para>
      </summary>
      <param name="range">A cell range to which the conditional formatting rule is applied.</param>
      <param name="expression">A formula in the invariant culture. Start the formula with an equal sign (&#61;). The formula can include the Spreadsheet’s built-in functions. You can combine relative and absolute references to adjust the formula in each cell if necessary.</param>
      <returns>The conditional formatting rule that this method creates.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddIconSetConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.IconSetType,DevExpress.Spreadsheet.ConditionalFormattingIconSetValue[])">
      <summary>
        <para>Applies an icon set conditional formatting rule.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="iconSet">One of the <see cref="T:DevExpress.Spreadsheet.IconSetType"/> enumeration values which determines an icon set to be displayed.</param>
      <param name="points">An array of <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingIconSetValue"/> values that specifies threshold values.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.IconSetConditionalFormatting"/> object that represents the icon set conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddRangeConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingRangeCondition,System.String,System.String)">
      <summary>
        <para>Applies the conditional formatting rule that formats cells which are between or not between two specified values.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="condition">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingRangeCondition"/> enumeration values.</param>
      <param name="lowBound">A <see cref="T:System.String"/> value that is the low bound of the subset inside or outside of which, formatted cells are located. The string can specify a formula to evaluate the low bound. If you use a formula, start it with an equal sign (&#61;). The formula can include the spreadsheet’s built-in functions. You can combine relative and absolute references to adjust the formula in each cell if necessary.</param>
      <param name="highBound">A <see cref="T:System.String"/> value that is the maximum value in the subset inside or outside of which, formatted cells are located. The string can specify a formula to evaluate the high bound. If you use a formula, start it with an equal sign (&#61;). The formula can include the spreadsheet’s built-in functions. You can combine relative and absolute references to adjust the formula in each cell.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.RangeConditionalFormatting"/> object that represents the specified conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddRankConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingRankCondition,System.Int32)">
      <summary>
        <para>Applies the &quot;top/bottom N&quot; conditional formatting rule.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="condition">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingRankCondition"/> enumeration values that represent top/bottom rules.</param>
      <param name="rank">A positive integer that is a number or percentage of the rank value to be set in the conditional formatting rule.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.RankConditionalFormatting"/> object that represents the specified conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddSpecialConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition)">
      <summary>
        <para>Applies the conditional formatting rule that formats cells which contain the specified values (unique or duplicate values, formula errors, etc.).</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="condition">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition"/> enumeration values.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.SpecialConditionalFormatting"/> object that represents the specified conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddTextConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingTextCondition,System.String)">
      <summary>
        <para>Applies the conditional formatting rule that formats cells based on the text they contain.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="condition">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingTextCondition"/> enumeration values.</param>
      <param name="text">A <see cref="T:System.String"/> value that represents text to be used as a formatting criterion. This value can also specify a formula that returns text. If you use a formula, start it with an equal sign (&#61;).</param>
      <returns>An <see cref="T:DevExpress.Spreadsheet.IconSetConditionalFormatting"/> object that represents the specified conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.AddTimePeriodConditionalFormatting(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ConditionalFormattingTimePeriod)">
      <summary>
        <para>Applies a &quot;date occurring…&quot; conditional formatting rule.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to which the conditional formatting rule is applied.</param>
      <param name="timePeriod">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod"/> enumeration values specifying time periods to be highlighted in a range of cells.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.TimePeriodConditionalFormatting"/> object that represents the specified conditional format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.Clear">
      <summary>
        <para>Removes all conditional formatting rules from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.Contains(DevExpress.Spreadsheet.ConditionalFormatting)">
      <summary>
        <para>Indicates whether the collection contains the specified conditional formatting rule.</para>
      </summary>
      <param name="formatting">A <see cref="T:DevExpress.Spreadsheet.ConditionalFormatting"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the rule; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormattingCollection.Count">
      <summary>
        <para>Returns the number of conditional formatting rules in the collection.</para>
      </summary>
      <value>An integer value representing the number of items in the collection.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.CreateIconSetValue(DevExpress.Spreadsheet.ConditionalFormattingValueType,System.String,DevExpress.Spreadsheet.ConditionalFormattingValueOperator)">
      <summary>
        <para>Specifies the threshold value for the icon set conditional formatting rule.</para>
      </summary>
      <param name="valueType">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> enumeration values.</param>
      <param name="value">A string that is the threshold value.</param>
      <param name="comparisonOperator">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueOperator"/> enumeration values.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingIconSetValue"/> object that defines the threshold value and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.CreateValue(DevExpress.Spreadsheet.ConditionalFormattingValueType,System.String)">
      <summary>
        <para>Specifies the minimum or maximum threshold value for the conditional formatting rule.</para>
      </summary>
      <param name="valueType">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> enumeration values.</param>
      <param name="value">A string that is the threshold value.</param>
      <returns>The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the threshold value and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.CreateValue(DevExpress.Spreadsheet.ConditionalFormattingValueType)">
      <summary>
        <para>Specifies the minimum or maximum threshold value for the conditional formatting rule.</para>
      </summary>
      <param name="valueType">One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> enumeration values.</param>
      <returns>The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that defines the threshold value and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.GetConditionalFormattings(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Obtains conditional formatting rules applied to the specified cell range.</para>
      </summary>
      <param name="range">A cell range for which conditional formatting rules are obtained.</param>
      <returns>A collection of conditional formats applied to the cell range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.IndexOf(DevExpress.Spreadsheet.ConditionalFormatting)">
      <summary>
        <para>Returns the index of the specified conditional formatting rule in the collection.</para>
      </summary>
      <param name="formatting">A <see cref="T:DevExpress.Spreadsheet.ConditionalFormatting"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the rule’s position within the collection. &#0045;1 if the rule doesn’t belong to the collection.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormattingCollection.Item(System.Int32)">
      <summary>
        <para>Gets the conditional formatting rule by its index in the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the desired rule’s position within the collection. If it’s negative or exceeds the last available index, an exception is raised.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.ConditionalFormatting"/> object which represents the conditional formatting rule at the specified position.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.Remove(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes all conditional formatting rules applied to the specified range of cells.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells over which the conditional formatting rules are applied.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.Remove(DevExpress.Spreadsheet.ConditionalFormatting)">
      <summary>
        <para>Removes the specified conditional formatting rule from the collection.</para>
      </summary>
      <param name="formatting">A <see cref="T:DevExpress.Spreadsheet.ConditionalFormatting"/> object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConditionalFormattingCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the conditional formatting rule at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the rule to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingCustomIcon">
      <summary>
        <para>Provides access to the particular icon in the icon set.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormattingCustomIcon.IconIndex">
      <summary>
        <para>Gets or sets the index of the particular icon in the icon set.</para>
      </summary>
      <value>A zero-based integer specifying the desired icon’s position within the icon set. If it’s negative or exceeds the last available index, an exception is raised.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormattingCustomIcon.IconSet">
      <summary>
        <para>Gets or sets the icon set to which the specified icon belongs.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.IconSetType"/> object that defines the built-in icon sets.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingDataBarAxisPosition">
      <summary>
        <para>Lists values that specify the axis position between negative and positive bars when the data bar conditional format is applied.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingDataBarAxisPosition.Automatic">
      <summary>
        <para>Displays the axis at a variable position based on negative and positive values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingDataBarAxisPosition.Middle">
      <summary>
        <para>Displays the axis at the midpoint of the cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingDataBarAxisPosition.None">
      <summary>
        <para>No axis is displayed. Negative and positive bars are displayed in the same direction.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingDataBarDirection">
      <summary>
        <para>Lists values that specify the direction of data bars when the data bar conditional format is applied.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingDataBarDirection.Context">
      <summary>
        <para>Specifies the direction based on the current locale.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingDataBarDirection.LeftToRight">
      <summary>
        <para>Specifies the left-to-right direction.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingDataBarDirection.RightToLeft">
      <summary>
        <para>Specifies the right-to-left direction.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingExpressionCondition">
      <summary>
        <para>Lists values that specify the type of the relational operator in a conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingExpressionCondition.EqualTo">
      <summary>
        <para>Formats cells whose values are equal to a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingExpressionCondition.GreaterThan">
      <summary>
        <para>Formats cells whose values are greater than a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingExpressionCondition.GreaterThanOrEqual">
      <summary>
        <para>Formats cells whose values are greater than or equal to a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingExpressionCondition.LessThan">
      <summary>
        <para>Formats cells whose values are less than a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingExpressionCondition.LessThanOrEqual">
      <summary>
        <para>Formats cells whose values are less than or equal to a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingExpressionCondition.UnequalTo">
      <summary>
        <para>Formats cells whose values are not equal to a specified value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingExtremumValue">
      <summary>
        <para>Represents a minimum or maximum threshold for a conditional formatting rule.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormattingExtremumValue.IsExtremum">
      <summary>
        <para>Indicates whether the threshold value for the conditional formatting rule is evaluated automatically.</para>
      </summary>
      <value>true, if the threshold is evaluated automatically, otherwise false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingIconSetInsideValue">
      <summary>
        <para>Represents a threshold value for an icon set conditional formatting rule.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingIconSetValue">
      <summary>
        <para>Represents a threshold value for an icon set conditional formatting rule.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormattingIconSetValue.ComparisonOperator">
      <summary>
        <para>Returns the relational operator used by the threshold value of the icon set conditional formatting rule to determine to which cells the icon should be applied.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueOperator"/> enumeration values.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingInsideValue">
      <summary>
        <para>Represents a threshold value for a conditional formatting rule.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingRangeCondition">
      <summary>
        <para>Lists values that specify the type of the conditional format operator in a conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingRangeCondition.Inside">
      <summary>
        <para>Formats cells that are between two specified values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingRangeCondition.Outside">
      <summary>
        <para>Formats cells that are not between two specified values.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingRankCondition">
      <summary>
        <para>Lists values that specify the type of the conditional format operator in a &quot;top/bottom N&quot; conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingRankCondition.BottomByPercent">
      <summary>
        <para>Formats cell values that rank in the bottom N percent of the specified range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingRankCondition.BottomByRank">
      <summary>
        <para>Formats cell values that fall in the bottom N bracket.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingRankCondition.TopByPercent">
      <summary>
        <para>Formats cell values that rank in the top N percent of the specified range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingRankCondition.TopByRank">
      <summary>
        <para>Formats cell values that fall in the top N bracket.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition">
      <summary>
        <para>Lists values that specify the type of the conditional format operator in a conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition.ContainBlanks">
      <summary>
        <para>Formats blank cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition.ContainDuplicateValue">
      <summary>
        <para>Formats cells that contain duplicate values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition.ContainError">
      <summary>
        <para>Formats cells that contain formula errors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition.ContainNonBlanks">
      <summary>
        <para>Formats nonempty cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition.ContainUniqueValue">
      <summary>
        <para>Formats cells that contain unique values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition.NotContainError">
      <summary>
        <para>Formats cells that do not contain formula errors.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingTextCondition">
      <summary>
        <para>Lists values that specify the type of the conditional format operator in a conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTextCondition.BeginsWith">
      <summary>
        <para>Formats cells that begin with the specified text string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTextCondition.Contains">
      <summary>
        <para>Formats cells that contain the specified text string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTextCondition.EndsWith">
      <summary>
        <para>Formats cells that end with the specified text string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTextCondition.NotContains">
      <summary>
        <para>Formats cells that do not contain the specified text string.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod">
      <summary>
        <para>Lists applicable time periods in a &quot;date occurring…&quot; conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.Last7Days">
      <summary>
        <para>A date in the last seven days.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.LastMonth">
      <summary>
        <para>A date occurring last month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.LastWeek">
      <summary>
        <para>A date occurring last week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.NextMonth">
      <summary>
        <para>A date occurring next month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.NextWeek">
      <summary>
        <para>A date occurring next week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.ThisMonth">
      <summary>
        <para>A date occurring this month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.ThisWeek">
      <summary>
        <para>A date occurring this week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.Today">
      <summary>
        <para>Today’s date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.Tomorrow">
      <summary>
        <para>Tomorrow’s date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod.Yesterday">
      <summary>
        <para>Yesterday’s date.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingValue">
      <summary>
        <para>Represents a minimum or maximum threshold for a conditional formatting rule.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormattingValue.Value">
      <summary>
        <para>Returns the threshold value specified in the conditional formatting rule.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that represents the threshold value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConditionalFormattingValue.ValueType">
      <summary>
        <para>Returns the type of the threshold value specified in the conditional formatting rule.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> enumeration values.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingValueOperator">
      <summary>
        <para>Lists values that specify the relational operator type for the icon set conditional format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingValueOperator.Greater">
      <summary>
        <para>Specifies the &quot;greater than&quot; relational operator.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingValueOperator.GreaterOrEqual">
      <summary>
        <para>Specifies the &quot;greater than or equal to&quot; relational operator.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConditionalFormattingValueType">
      <summary>
        <para>Lists values that specify the type of the threshold value to be used in conditional formatting rules.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingValueType.Auto">
      <summary>
        <para>For the data bar conditional formatting rule only. Indicates that the minimum (maximum) threshold value is automatically set to zero or the minimum (maximum) value in the range of cells, which ever is smaller (larger).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingValueType.Formula">
      <summary>
        <para>Indicates that a formula is used to specify the threshold value for the conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingValueType.MinMax">
      <summary>
        <para>Indicates that the lowest (highest) value in the range is used to specify the minimum (maximum) threshold value for the conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingValueType.Number">
      <summary>
        <para>Indicates that a number value is used to specify the threshold value for the conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingValueType.Percent">
      <summary>
        <para>Indicates that a percent value is used to specify the threshold value for the conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingValueType.Percentile">
      <summary>
        <para>Indicates that a percentile value is used to specify the threshold value for the conditional formatting rule.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConditionalFormattingValueType.Unknown">
      <summary>
        <para>This value supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConnectorFormat">
      <summary>
        <para>Contains connector settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConnectorFormat.Arrows">
      <summary>
        <para>Provides access to the connector arrowhead properties.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ArrowSettings"/> object containing the arrowhead options.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConnectorFormat.ConnectEndPoint(DevExpress.Spreadsheet.Shape,System.Int32)">
      <summary>
        <para>Attaches the connector’s end point to the drawing object.</para>
      </summary>
      <param name="connectedShape">A <see cref="T:DevExpress.Spreadsheet.Shape"/> object that is a drawing object to connect to.</param>
      <param name="connectionSite">An integer that is the index number of a shapes’ connection site to which the connector should be attached.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConnectorFormat.ConnectorType">
      <summary>
        <para>Gets or sets the connector’s type.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ConnectorType"/> enumeration values indicating the connector’s type.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConnectorFormat.ConnectStartPoint(DevExpress.Spreadsheet.Shape,System.Int32)">
      <summary>
        <para>Attaches the connector’s start point to the drawing object.</para>
      </summary>
      <param name="connectedShape">A <see cref="T:DevExpress.Spreadsheet.Shape"/> object that is a drawing object to connect to.</param>
      <param name="connectionSite">An integer that is the index number of a shapes’ connection site to which the connector should be attached.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConnectorFormat.DisconnectEndPoint">
      <summary>
        <para>Disconnects the connector’s end point from a drawing object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ConnectorFormat.DisconnectStartPoint">
      <summary>
        <para>Disconnects the connector’s start point from a drawing object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConnectorFormat.EndConnectedShapeId">
      <summary>
        <para>Retrieves the unique identifier of a drawing object attached to the connector’s end point.</para>
      </summary>
      <value>An integer that is the drawing object’s unique identifier.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConnectorFormat.EndPointConnected">
      <summary>
        <para>Indicates whether the connector’s end point is attached to a drawing object.</para>
      </summary>
      <value>true, if the connector is attached to a shape by its end point; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConnectorFormat.HandleCount">
      <summary>
        <para>Returns or specifies the number of adjustment handles for an elbow or curved connector.</para>
      </summary>
      <value>The number of adjustment handles (from two to five).</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConnectorFormat.StartConnectedShapeId">
      <summary>
        <para>Retrieves the unique identifier of a drawing object attached to the connector’s start point.</para>
      </summary>
      <value>An integer that is the drawing object’s unique identifier.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ConnectorFormat.StartPointConnected">
      <summary>
        <para>Indicates whether the connector’s start point is attached to a drawing object.</para>
      </summary>
      <value>true, if the connector is attached to a shape by its start point; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ConnectorType">
      <summary>
        <para>Lists connector types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConnectorType.Curved">
      <summary>
        <para>A curved connector.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConnectorType.Elbow">
      <summary>
        <para>An elbow-shaped connector.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ConnectorType.Straight">
      <summary>
        <para>A straight line connector.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.CopiedRangePastedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CopiedRangePasted"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CopiedRangePastedEventArgs.SourceRange">
      <summary>
        <para>Gets a cell range from which the data has been copied.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the copied cell range.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CopiedRangePastedEventArgs.TargetRange">
      <summary>
        <para>Gets a cell range into which the data has been pasted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the destination cell range.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CopiedRangePastedEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.CopiedRangePasted"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.CopiedRangePastedEventArgs"/> object that contains the event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.CopiedRangePastingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CopiedRangePasting"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CopiedRangePastingEventArgs.Cancel">
      <summary>
        <para>Gets or sets a value indicating whether the operation of pasting data should be canceled.</para>
      </summary>
      <value>true, to cancel the paste operation; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CopiedRangePastingEventArgs.IsCut">
      <summary>
        <para>Gets or sets a value indicating whether the copied data is cut from the source range.</para>
      </summary>
      <value>true, if data is cut from the source range; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CopiedRangePastingEventArgs.PasteSpecialFlags">
      <summary>
        <para>Gets or sets the part of copied data to be pasted into target range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PasteSpecial"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CopiedRangePastingEventArgs.TargetRange">
      <summary>
        <para>Gets the cell range into which data are going to be pasted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the destination cell range.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CopiedRangePastingEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.CopiedRangePasting"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.CopiedRangePastedEventArgs"/> object that contains the event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.CustomCellInplaceEditor">
      <summary>
        <para>Represents a custom cell in-place editor assigned to a cell or cell range in a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CustomCellInplaceEditor.EditorType">
      <summary>
        <para>Gets the type of the custom cell in-place editor.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType"/> enumeration value specifying the custom editor’s type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CustomCellInplaceEditor.Range">
      <summary>
        <para>Gets the cell range to which the custom cell in-place editor is assigned.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CustomCellInplaceEditor.UseOnlyVisibleDataRange">
      <summary>
        <para>Gets a value indicating whether values of hidden cells should be included into the item list of the combo box in-place editor whose items are obtained from a cell range.</para>
      </summary>
      <value>true if only values of visible cells should be added to the combo box editor’s item collection; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CustomCellInplaceEditor.Value">
      <summary>
        <para>Gets or sets a value associated with the custom cell in-place editor.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection">
      <summary>
        <para>Represents a collection of the custom cell in-place editors assigned to worksheet cells.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CustomCellInplaceEditorType,DevExpress.Spreadsheet.ValueObject,System.Boolean)">
      <summary>
        <para>Creates a cell in-place editor of the <see cref="F:DevExpress.Spreadsheet.CustomCellInplaceEditorType.ComboBox"/> type and assigns it to the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range to which the custom in-place editor should be assigned.</param>
      <param name="editorType">A <see cref="F:DevExpress.Spreadsheet.CustomCellInplaceEditorType.ComboBox"/> enumeration member indicating that a combo box editor is used for cell editing.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object that specifies a list of items obtained from a worksheet range to be displayed in the combo box editor’s drop-down list.</param>
      <param name="useOnlyVisibleDataRange">A <see cref="T:System.Boolean"/> value that specifies whether the hidden values in the cell range from which combo box items are obtained should be included into the editor’s item list.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/> object that specifies the created cell in-place editor.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CustomCellInplaceEditorType,DevExpress.Spreadsheet.ValueObject)">
      <summary>
        <para>Creates a custom cell in-place editor with the specified settings and assigns it to the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range to which the custom in-place editor should be assigned.</param>
      <param name="editorType">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType"/> enumeration member that specifies the type of the custom editor to be used for in-place editing.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object that specifies a value associated with the custom cell in-place editor. For a combo box editor (<see cref="F:DevExpress.Spreadsheet.CustomCellInplaceEditorType.ComboBox"/>), this value specifies a list of items to be displayed in the editor’s drop-down list.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/> object that specifies the created custom cell in-place editor.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CustomCellInplaceEditorType)">
      <summary>
        <para>Creates a custom cell in-place editor of the specified type and assigns it to the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range to which the custom in-place editor should be assigned.</param>
      <param name="editorType">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType"/> enumeration member that specifies the type of the custom editor to be used for in-place editing.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/> object that specifies the created custom cell in-place editor.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.Clear">
      <summary>
        <para>Removes all custom cell in-place editors from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.Contains(DevExpress.Spreadsheet.CustomCellInplaceEditor)">
      <summary>
        <para>Determines whether the collection contains the specified custom cell in-place editor.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/> object to search for.</param>
      <returns>true, if the collection contains the specified editor; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.GetCustomCellInplaceEditor(DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Returns the custom in-place editor assigned to the specified cell.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object specifying a cell that contains the custom editor to be returned.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/> object that is a custom in-place editor assigned to the specified cell.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.GetCustomCellInplaceEditors(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CustomCellInplaceEditorType,DevExpress.Spreadsheet.ValueObject)">
      <summary>
        <para>Returns a collection of the custom cell in-place editors with the specified properties assigned to cells of the specified range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object containing the custom cell in-place editors to be returned.</param>
      <param name="editorType">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType"/> enumeration value specifying the required type of the custom cell in-place editors.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object associated with the custom cell in-place editors to be returned.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/>,&gt; collection of the custom cell in-place editors.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.GetCustomCellInplaceEditors(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CustomCellInplaceEditorType)">
      <summary>
        <para>Returns a collection of the custom cell in-place editors of the specified type assigned to cells of the specified range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range containing the custom cell in-place editors to be returned.</param>
      <param name="editorType">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType"/> enumeration value specifying the required type of the custom cell in-place editors.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/>,&gt; collection of the custom cell in-place editors of the specified type residing in the specified cell range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.GetCustomCellInplaceEditors(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Returns a collection of the custom cell in-place editors assigned to cells of the specified range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object containing the custom cell in-place editors to be returned.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/>,&gt; collection of the custom cell in-place editors residing in the specified cell range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.GetCustomCellInplaceEditors(DevExpress.Spreadsheet.CustomCellInplaceEditorType,DevExpress.Spreadsheet.ValueObject)">
      <summary>
        <para>Returns a collection of the custom cell in-place editors of the specified type and associated with the specified value.</para>
      </summary>
      <param name="editorType">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType"/> enumeration value specifying the required type of the custom cell in-place editors.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object associated with the custom cell in-place editors to be returned.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/>,&gt; collection of the custom cell in-place editors.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.GetCustomCellInplaceEditors(DevExpress.Spreadsheet.CustomCellInplaceEditorType)">
      <summary>
        <para>Returns a collection of the custom cell in-place editors of the specified type.</para>
      </summary>
      <param name="editorType">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType"/> enumeration value specifying the type of the custom cell in-place editors to be returned.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/>,&gt; collection of the custom cell in-place editors of the specified type.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.IndexOf(DevExpress.Spreadsheet.CustomCellInplaceEditor)">
      <summary>
        <para>Returns the index of the specified custom cell in-place editor in the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/> object that specifies the custom cell in-place editor to locate in the collection.</param>
      <returns>A zero-based integer which specifies the custom editor’s position within the collection. &#0045;1 if the editor doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.Remove(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CustomCellInplaceEditorType)">
      <summary>
        <para>Removes the custom cell in-place editors of the specified type from the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range from which the custom cell in-place editors should be removed.</param>
      <param name="editorType">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType"/> enumeration value specifying the type of the custom cell in-place editors to be removed.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.Remove(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes the custom cell in-place editors assigned to cells of the specified range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range from which the custom cell in-place editors should be removed.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.Remove(DevExpress.Spreadsheet.CustomCellInplaceEditor)">
      <summary>
        <para>Removes the specified custom cell in-place editor from the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditor"/> object to be removed from the collection.</param>
      <returns>true, if the specified custom cell editor is contained in the collection and successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.Remove(DevExpress.Spreadsheet.CustomCellInplaceEditorType)">
      <summary>
        <para>Removes all custom cell in-place editors of the specified type from the collection.</para>
      </summary>
      <param name="editorType">A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType"/> enumeration value specifying the type of the custom cell in-place editors to be removed.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the custom cell in-place editor at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the custom in-place editor to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.CustomCellInplaceEditorType">
      <summary>
        <para>Lists types of the custom in-place editors that can be assigned to cells in a worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CustomCellInplaceEditorType.CheckBox">
      <summary>
        <para>Specifies that a WinForms <see cref="T:DevExpress.XtraEditors.CheckEdit"/> (or WPF <see cref="T:DevExpress.Xpf.Editors.CheckEdit"/>) editor is used to edit cell content.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CustomCellInplaceEditorType.ComboBox">
      <summary>
        <para>Specifies that a WinForms <see cref="T:DevExpress.XtraEditors.ComboBoxEdit"/> (or WPF <see cref="T:DevExpress.Xpf.Editors.ComboBoxEdit"/>) editor is used to edit cell content.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CustomCellInplaceEditorType.Custom">
      <summary>
        <para>Specifies that a custom editor is used to edit cell content.</para>
        <para />
        <para>Handle the WinForms Spreadsheet control’s CustomCellEdit (or WPF Spreadsheet control’s CustomCellEdit) event to assign a custom editor to a cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.CustomCellInplaceEditorType.DateEdit">
      <summary>
        <para>Specifies that a WinForms <see cref="T:DevExpress.XtraEditors.DateEdit"/> (or WPF <see cref="T:DevExpress.Xpf.Editors.DateEdit"/>) editor is used to edit cell content.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.CustomFilter">
      <summary>
        <para>Contains the settings of a custom filter.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.CustomFilter.CriterionAnd">
      <summary>
        <para>Gets whether two criteria are combined using the AND operator.</para>
      </summary>
      <value>true, if two criteria are combined with the AND operator; otherwise, false, if they are combined with the OR operator.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CustomFilter.FirstCriteria">
      <summary>
        <para>Gets the value used in the first criteria of two.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies a value used in a filter.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CustomFilter.FirstCriteriaOperator">
      <summary>
        <para>Gets the comparison operator used for the value in the first criterion.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterComparisonOperator"/> enumeration member that identifies a comparison operator.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CustomFilter.SecondCriteria">
      <summary>
        <para>Gets the value used in the second criteria of two.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies a value used in a filter.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.CustomFilter.SecondCriteriaOperator">
      <summary>
        <para>Gets the comparison operator used for the value in the second criterion.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterComparisonOperator"/> enumeration member that identifies a comparison operator.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.CustomXmlPartCollection">
      <summary>
        <para>A collection of custom XML parts in a workbook.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataBarConditionalFormatting">
      <summary>
        <para>Represents a data bar conditional formatting rule.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.AxisColor">
      <summary>
        <para>Gets or sets the color of the axis between positive and negative bars.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that specifies the axis color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.AxisPosition">
      <summary>
        <para>Gets or sets the axis position in a cell.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingDataBarAxisPosition"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.BorderColor">
      <summary>
        <para>Gets or sets the data bar border color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that specifies the border line color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.Color">
      <summary>
        <para>Gets or sets the color associated with data bars in the data bar conditional format.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that defines the color of the data bar.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.Direction">
      <summary>
        <para>Gets or sets the direction of data bars.</para>
      </summary>
      <value>One of <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingDataBarDirection"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.GradientFill">
      <summary>
        <para>Gets or sets whether the gradient fill is applied to data bars.</para>
      </summary>
      <value>true, if the gradient fill type is used; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.HighBound">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that specifies how the longest bar is evaluated for the data bar conditional format.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that represents the threshold and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.LowBound">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that specifies how the shortest bar is evaluated for the data bar conditional format.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValue"/> object that represents the threshold and its <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingValueType"/> type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.MaxLength">
      <summary>
        <para>Gets or sets the maximum length of the data bar, as a percentage of the cell width.</para>
      </summary>
      <value>An integer value that specifies the length of the longest bar, as a fixed percentage of the column width. The value must be a whole number between 0 and 100. The default value is 90.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.MinLength">
      <summary>
        <para>Gets or sets the minimum length of the data bar, as a percentage of the cell width.</para>
      </summary>
      <value>An integer value that specifies the length of the shortest bar, as a fixed percentage of the column width. The value must be a whole number between 0 and 100. The default value is 10.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.NegativeBarBorderColor">
      <summary>
        <para>Gets or sets the negative bar border color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that specifies the border line color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.NegativeBarColor">
      <summary>
        <para>Gets or sets the negative bar fill color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that specifies the color of the negative bar.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBarConditionalFormatting.ShowValue">
      <summary>
        <para>Indicates whether to show the values of cells to which the data bar conditional formatting rule is applied.</para>
      </summary>
      <value>true, if cell values are displayed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataBindingDirection">
      <summary>
        <para>Indicates whose value is being updated during binding.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingDirection.DataSourceUpdate">
      <summary>
        <para>An indication that the data source value is being updated from the range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingDirection.RangeUpdate">
      <summary>
        <para>An indication that the range is being updated from the data source.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataBindingErrorEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Spreadsheet.WorksheetDataBindingCollection.Error"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataBindingErrorEventArgs.#ctor(DevExpress.Spreadsheet.DataBindingErrorType,DevExpress.Spreadsheet.DataBindingDirection,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.DataBindingErrorEventArgs"/> class with the default settings.</para>
      </summary>
      <param name="errorType">A <see cref="T:DevExpress.Spreadsheet.DataBindingErrorType"/> enumeration member that indicates the cause of an error.</param>
      <param name="direction">A <see cref="T:DevExpress.Spreadsheet.DataBindingDirection"/> enumeration value that indicates whose value is updated during binding.</param>
      <param name="rowIndex">An integer that is the <see cref="P:DevExpress.Spreadsheet.Row.Index"/> property value of a row which caused an error.</param>
      <param name="columnIndex">An integer that is the <see cref="P:DevExpress.Spreadsheet.Column.Index"/> property value of a column which caused an error.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBindingErrorEventArgs.BindingDirection">
      <summary>
        <para>Indicates whose value is updated during binding.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DataBindingDirection"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBindingErrorEventArgs.ColumnIndex">
      <summary>
        <para>Gets the index of the column in which an error occurs.</para>
      </summary>
      <value>An integer that is the <see cref="P:DevExpress.Spreadsheet.Column.Index"/> property value of a column which caused an error.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBindingErrorEventArgs.DataBinding">
      <summary>
        <para>Gets a binding object whose binding caused an error.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object that contains information on a specific data binding in a worksheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBindingErrorEventArgs.ErrorType">
      <summary>
        <para>Indicates the cause of an error.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DataBindingErrorType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataBindingErrorEventArgs.RowIndex">
      <summary>
        <para>Gets the index of the row in which an error occurs.</para>
      </summary>
      <value>An integer that is the <see cref="P:DevExpress.Spreadsheet.Row.Index"/> property value of a row which caused an error.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataBindingErrorEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.WorksheetDataBindingCollection.Error"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.DataBindingErrorEventArgs"/> object that contains the event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataBindingErrorType">
      <summary>
        <para>Lists possible error causes relevant to cell range data binding.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingErrorType.BindingRangeHasMergedCells">
      <summary>
        <para>When binding a cell range to the data source, the range has merged cells, which is not allowed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingErrorType.CannotDeleteLastRow">
      <summary>
        <para>When a cell range serves as a data source, an attempt to remove a row fails if it is the only row in the data source, because the data source must contain at least one row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingErrorType.CannotInsertRows">
      <summary>
        <para>When binding a cell range to the data source, the range cannot insert rows to accommodate new data rows in the data source.</para>
        <para />
        <para>This may happen in a situation when there are two binding ranges on the same worksheet placed horizontally one after another, and one range is bound to a read&#0045;only data source. When a record is added to the editable data source, the corresponding range cannot insert a row to display the record because such insertion is prohibited by the read&#0045;only status of another binding range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingErrorType.CannotModifyCellsWithFormulas">
      <summary>
        <para>When a cell range serves as a data source and the <see cref="P:DevExpress.Spreadsheet.RangeDataSourceOptions.PreserveFormulas"/> option has been set to true, an attempt to modify a cell value fails if a cell contains a formula.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingErrorType.CannotRemoveRows">
      <summary>
        <para>When binding a cell range to the data source, the range cannot remove rows to reflect row removal in the data source.</para>
        <para />
        <para>This may happen in a situation when there are two binding ranges on the same worksheet placed horizontally one after another, and one range is bound to a read&#0045;only data source. When a record is removed from the editable data source, the corresponding range cannot remove a row to display the record because such removal is prohibited by the read&#0045;only status of another binding range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingErrorType.ColumnCountMismatch">
      <summary>
        <para>Indicates that the number of data fields in the bound data source exceeds the number of rows in the target worksheet range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingErrorType.DataOutOfSync">
      <summary>
        <para>When binding a cell range to the data source, indicates that the number of data rows in the binding range and in the data source differ.</para>
        <para>This error may occur after row insertion or deletion from a data source bound to the range which cannot insert or delete rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingErrorType.MaximumNumberOfColumnsExceeded">
      <summary>
        <para>When binding a cell range to the data source, the error occurs when the index of a column required to bind to the data source field exceeds the maximum number of columns allowed in the worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataBindingErrorType.MaximumNumberOfRowsExceeded">
      <summary>
        <para>When binding a cell range to the data source, the error occurs when the index of a row required to bind to the data source record exceeds the maximum number of rows allowed in the worksheet.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataImportOptions">
      <summary>
        <para>Contains properties which allow you to specify whether the imported data are treated as formulas, the cell reference style in use, the culture-specific decimal and list separators and a custom value converter.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataImportOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.DataImportOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataImportOptions.Converter">
      <summary>
        <para>Gets or sets a converter for imported data.</para>
      </summary>
      <value>An object implementing the  <see cref="T:DevExpress.Spreadsheet.IDataValueConverter"/> interface.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataImportOptions.FormulaCulture">
      <summary>
        <para>Gets or sets locale settings for correct interpretation of data formats in the data source.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object that specifies the locale settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataImportOptions.ImportFormulas">
      <summary>
        <para>Gets or sets whether imported data are inserted as formulas instead of values.</para>
      </summary>
      <value>True, to import data as formulas; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataImportOptions.ReferenceStyle">
      <summary>
        <para>Gets or sets whether the reference style is used in data imported as formulas.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ReferenceStyle"/> enumeration value which specifies the style of the cell reference.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataSourceEditingOptions">
      <summary>
        <para>Lists the editing options which can be applied to the data source originated from cell range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataSourceEditingOptions.AllowEdit">
      <summary>
        <para>Editing is allowed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataSourceEditingOptions.AllowNew">
      <summary>
        <para>Adding new rows is allowed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataSourceEditingOptions.AllowRemove">
      <summary>
        <para>Removing rows is allowed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataSourceEditingOptions.AllowSort">
      <summary>
        <para>Sorting is allowed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataSourceEditingOptions.Default">
      <summary>
        <para>Every editing operation is allowed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataSourceEditingOptions.ReadOnly">
      <summary>
        <para>Every editing operation is forbidden.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataSourceImportOptions">
      <summary>
        <para>Allows specifying data source fields to import.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataSourceImportOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.DataSourceImportOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataSourceImportOptions.PropertyNames">
      <summary>
        <para>Gets or sets names of the properties to import from the data source.</para>
      </summary>
      <value>A <see cref="T:System.String"/>[] array of property names that specifies properties to import.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataSourceOptionsBase">
      <summary>
        <para>Serves as the base for the <see cref="T:DevExpress.Spreadsheet.ExternalDataSourceOptions"/> and <see cref="T:DevExpress.Spreadsheet.RangeDataSourceOptions"/> classes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataSourceOptionsBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.DataSourceOptionsBase"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataSourceOptionsBase.CellValueConverter">
      <summary>
        <para>Gets or sets the converter that transforms cell values into custom objects and back.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Spreadsheet.IBindingRangeValueConverter"/> interface which provides methods for converting cell values into required data types and back.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataSourceOptionsBase.SkipHiddenColumns">
      <summary>
        <para>Gets or sets whether to include hidden columns into the binding range.</para>
      </summary>
      <value>true, to skip hidden columns; otherwise, false. Default is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataSourceOptionsBase.SkipHiddenRows">
      <summary>
        <para>Gets or sets whether to include the hidden rows into the binding range.</para>
      </summary>
      <value>true, to skip hidden rows; otherwise, false. Default is false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataValidation">
      <summary>
        <para>Provides access to a data validation rule defined for a worksheet range.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.AllowBlank">
      <summary>
        <para>Gets or sets whether the data validation treats empty or blank entries as valid.</para>
      </summary>
      <value>true, means that empty cells do not violate validation rules; otherwise, false. Default is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.Criteria">
      <summary>
        <para>Gets or sets the value used in the criterion for the data validation.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.Criteria2">
      <summary>
        <para>Gets or sets the value used in the criterion for the data validation.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.ErrorMessage">
      <summary>
        <para>Gets or sets the message displayed in the error dialog invoked when data validation fails.</para>
      </summary>
      <value>A string that is the text of the dialog.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.ErrorStyle">
      <summary>
        <para>Gets or sets the style of the alert dialog window used for data validation.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DataValidationErrorStyle"/> enumeration value that specifies the style of error alert.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.ErrorTitle">
      <summary>
        <para>Gets or sets the caption of the error alert window.</para>
      </summary>
      <value>A string displayed in the title bar of the error alert window.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.ImeMode">
      <summary>
        <para>Gets or sets the IME (input method editor) mode used by the data validation.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DataValidationImeMode"/> enumeration value that specifies the character set and behavior of the IME control. Default value is <see cref="F:DevExpress.Spreadsheet.DataValidationImeMode.NoControl"/>.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.InputMessage">
      <summary>
        <para>Gets or sets the input message text.</para>
      </summary>
      <value>The message text.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.InputTitle">
      <summary>
        <para>Gets or sets the title bar text of the input prompt dialog window.</para>
      </summary>
      <value>A string displayed in the title bar of the input window.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.Operator">
      <summary>
        <para>Gets or sets the relational operator used in the data validation rule.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DataValidationOperator"/> used in rule definition.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.Range">
      <summary>
        <para>Gets or sets the worksheet range to which the data validation rule is applied.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> on which data validation rules are in effect.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.ShowDropDown">
      <summary>
        <para>Gets or sets whether to display the dropdown combo box for a validation of the <see cref="F:DevExpress.Spreadsheet.DataValidationType.List"/> type.</para>
      </summary>
      <value>true, to display a dropdown combo box; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.ShowErrorMessage">
      <summary>
        <para>Gets or sets whether to display the error alert when the user input is not valid.</para>
      </summary>
      <value>true, to display the alert message if the value is not valid; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.ShowInputMessage">
      <summary>
        <para>Gets or sets whether to display the message prompting the user for data input.</para>
      </summary>
      <value>true, to display the message; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DataValidation.ValidationType">
      <summary>
        <para>Gets the type of data validation.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DataValidationType"/> enumeration member that specifies the type of data validation used to validate user input.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataValidationCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Spreadsheet.DataValidation"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.DataValidationType,DevExpress.Spreadsheet.DataValidationOperator,DevExpress.Spreadsheet.ValueObject,DevExpress.Spreadsheet.ValueObject)">
      <summary>
        <para>Creates a new data validation entry and adds it to the document’s collection.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the worksheet range to which the data validation rule is applied.</param>
      <param name="validationType">A <see cref="T:DevExpress.Spreadsheet.DataValidationType"/> enumeration member that specifies the validation type.</param>
      <param name="validationOperator">A <see cref="T:DevExpress.Spreadsheet.DataValidationOperator"/> enumeration member that specifies the operator used in criteria expression.</param>
      <param name="criteria">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> that is the value used in the criterion.</param>
      <param name="criteria2">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> that is the value used in the criterion.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.DataValidation"/> object that specifies a validation rule for a worksheet range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.DataValidationType,DevExpress.Spreadsheet.DataValidationOperator,DevExpress.Spreadsheet.ValueObject)">
      <summary>
        <para>Creates a new data validation entry and adds it to the document’s collection.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the worksheet range to which the data validation rule is applied.</param>
      <param name="validationType">A <see cref="T:DevExpress.Spreadsheet.DataValidationType"/> enumeration member that specifies the validation type.</param>
      <param name="validationOperator">A <see cref="T:DevExpress.Spreadsheet.DataValidationOperator"/> enumeration member that specifies the operator used in a criteria expression.</param>
      <param name="criteria">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> that is the value used in the criterion.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.DataValidation"/> object that specifies a validation rule for a worksheet range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.DataValidationType,DevExpress.Spreadsheet.ValueObject)">
      <summary>
        <para>Creates a new data validation entry and adds it to the document’s collection.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the worksheet range to which the data validation rule is applied.</param>
      <param name="validationType">A <see cref="T:DevExpress.Spreadsheet.DataValidationType"/> enumeration member that specifies the validation type.</param>
      <param name="criteria">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> that is the value used in the criterion.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.DataValidation"/> object that specifies a validation rule for a worksheet range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.Clear">
      <summary>
        <para>Removes all entries from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.Clear(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes data validation criteria from the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range from which data validation should be removed.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.Contains(DevExpress.Spreadsheet.DataValidation)">
      <summary>
        <para>Indicates whether the collection contains the specified item.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.DataValidation"/> object to locate in the collection.</param>
      <returns>True, if the collection contains the comment; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.GetDataValidation(DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Obtains a data validation entry for the specified cell.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object specifying a worksheet cell.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.DataValidation"/> object which contains data validation rules for the specified cell or null if data validation for this cell is not defined.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.GetDataValidations(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Obtains data validation entries for cells in the specified range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> containing cells for which data validation entries are obtained.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.DataValidation"/>,&gt; collection of data validation entries.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.GetDataValidations(DevExpress.Spreadsheet.DataValidationType,DevExpress.Spreadsheet.DataValidationOperator,DevExpress.Spreadsheet.ValueObject,DevExpress.Spreadsheet.ValueObject)">
      <summary>
        <para>Obtains data validation entries with the specified properties.</para>
      </summary>
      <param name="validationType">A <see cref="T:DevExpress.Spreadsheet.DataValidationType"/> enumeration member that specifies the validation type.</param>
      <param name="validationOperator">A <see cref="T:DevExpress.Spreadsheet.DataValidationOperator"/> enumeration member that specifies the operator used in a criteria expression.</param>
      <param name="criteria">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> that is the value used in the criterion.</param>
      <param name="criteria2">A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> that is the value used in the criterion.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.DataValidation"/>,&gt; collection of data validation entries.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.GetInvalidCells">
      <summary>
        <para>Returns cells that do not meet the data validation criteria.</para>
      </summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.Cell"/>,&gt; collection of cells containing invalid data.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.IndexOf(DevExpress.Spreadsheet.DataValidation)">
      <summary>
        <para>Returns the zero-based index of the specified element in the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.DataValidation"/> item to locate in the collection.</param>
      <returns>An integer value that is the position of the specified element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.Remove(DevExpress.Spreadsheet.DataValidation)">
      <summary>
        <para>Removes the specified item from the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.DataValidation"/> object to remove.</param>
      <returns>True, if the specified item has been found and successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the data validation item at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the item to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.Validate(DevExpress.Spreadsheet.Cell,DevExpress.Spreadsheet.CellValue)">
      <summary>
        <para>Validates the specified value before assigning it to the specified cell.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is a cell with the data validation applied.</param>
      <param name="newValue">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is a value to be validated.</param>
      <returns>true, if the specified value meets the data validation criteria applied to the specified cell; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DataValidationCollection.Validate(DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Validates the specified cell value.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object whose value should be validated.</param>
      <returns>true, if the cell value meets the data validation criteria applied to that cell; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataValidationErrorStyle">
      <summary>
        <para>Lists the styles of data validation error alert.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationErrorStyle.Information">
      <summary>
        <para>The dialog displays the Information icon; the end-user can click OK to accept the invalid value or Cancel to reject it.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationErrorStyle.Stop">
      <summary>
        <para>The dialog displays the Stop icon; the only options are Retry or Cancel; end-users are not allowed to enter invalid data in the cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationErrorStyle.Warning">
      <summary>
        <para>The dialog displays the Warning icon; the end-user can decide whether to allow entry of the invalid data, to retry, or to remove the invalid entry.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataValidationImeMode">
      <summary>
        <para>Lists values that specify how the IME (input method editor) mode is controlled by data validation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.Disabled">
      <summary>
        <para>The IME control is disabled when the cell is selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.FullAlpha">
      <summary>
        <para>The IME control is in full width alphanumeric input mode when the cell is selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.FullHangul">
      <summary>
        <para>The IME control is in full width Hangul input mode when the cell is selected. Applies only when Korean language support has been installed and selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.FullKatakana">
      <summary>
        <para>The IME control is in full width Katakana input mode when the cell is selected. Applies only when Japanese language support has been installed and selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.HalfAlpha">
      <summary>
        <para>The IME control is in half width alphanumeric input mode when the cell is selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.HalfHangul">
      <summary>
        <para>The IME control is in half width Hangul input mode when the cell is selected. Applies only when Korean language support has been installed and selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.HalfKatakana">
      <summary>
        <para>The IME control is in half width Katakana input mode when the cell is selected. Applies only when Japanese language support has been installed and selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.Hiragana">
      <summary>
        <para>The IME control is in Hiragana input mode when the cell is selected. Applies only when Japanese language support has been installed and selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.NoControl">
      <summary>
        <para>Data Validation does not control the IME mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.Off">
      <summary>
        <para>The IME control is off (does not start) when the cell is selected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationImeMode.On">
      <summary>
        <para>The IME control starts when the cell is selected.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataValidationOperator">
      <summary>
        <para>Lists comparison operators used in criteria for certain validation types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationOperator.Between">
      <summary>
        <para>Determines whether the cell value falls within a specified range of values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationOperator.Equal">
      <summary>
        <para>Determines whether the cell value equals a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationOperator.GreaterThan">
      <summary>
        <para>Determines whether the cell value is greater than the specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationOperator.GreaterThanOrEqual">
      <summary>
        <para>Determines whether the cell value is greater than or equal to the specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationOperator.LessThan">
      <summary>
        <para>Determines whether the cell value is less than the specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationOperator.LessThanOrEqual">
      <summary>
        <para>Determines whether the cell value is less than or equal to the specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationOperator.NotBetween">
      <summary>
        <para>Determines whether the cell value does not fall within a specified range of values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationOperator.NotEqual">
      <summary>
        <para>Determines whether the cell value does not equal the specified value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DataValidationType">
      <summary>
        <para>Lists data validation types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationType.AnyValue">
      <summary>
        <para>Any value satisfies validation criteria, equivalent to no validation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationType.Custom">
      <summary>
        <para>Data is validated using an arbitrary formula.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationType.Date">
      <summary>
        <para>Checks for date values satisfying the given condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationType.Decimal">
      <summary>
        <para>Checks for decimal values satisfying the given condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationType.List">
      <summary>
        <para>Checks whether a value matches a specified list of values. The maximum length of a list is 255 characters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationType.TextLength">
      <summary>
        <para>Checks for text values whose length satisfies the given condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationType.Time">
      <summary>
        <para>Checks for time values satisfying the given condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DataValidationType.WholeNumber">
      <summary>
        <para>Checks for whole numeric values satisfying given conditions.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DateGrouping">
      <summary>
        <para>A criterion for date values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DateGrouping.#ctor(System.DateTime,DevExpress.Spreadsheet.DateTimeGroupingType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.DateGrouping"/> class with the specified settings.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> value which is used to specify a filter criteria according to the grouping type.</param>
      <param name="groupingType">A <see cref="T:DevExpress.Spreadsheet.DateTimeGroupingType"/> enumeration member that specifies what part of the DateTime value is used in the criteria.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.DateGrouping.GroupingType">
      <summary>
        <para>Gets which part of the DateTime value is used in the criteria.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DateTimeGroupingType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DateGrouping.Value">
      <summary>
        <para>Gets the value used to construct a criterion for the DateTime cell values.</para>
      </summary>
      <value>A <see cref="T:System.DateTime"/> object.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DateTimeGroupingType">
      <summary>
        <para>Lists grouping types used to specify filter criteria for DateTime values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DateTimeGroupingType.Day">
      <summary>
        <para>Groups the <see cref="T:System.DateTime"/> values by day.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DateTimeGroupingType.Hour">
      <summary>
        <para>Groups the <see cref="T:System.DateTime"/> values by hour.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DateTimeGroupingType.Minute">
      <summary>
        <para>Groups the <see cref="T:System.DateTime"/> values by minute.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DateTimeGroupingType.Month">
      <summary>
        <para>Groups the <see cref="T:System.DateTime"/> values by month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DateTimeGroupingType.None">
      <summary>
        <para>The <see cref="T:System.DateTime"/> values are not grouped.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DateTimeGroupingType.Second">
      <summary>
        <para>Groups the <see cref="T:System.DateTime"/> values by second.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DateTimeGroupingType.Year">
      <summary>
        <para>Groups the <see cref="T:System.DateTime"/> values by year.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DefinedName">
      <summary>
        <para>A defined name that refers to a cell, range of cells, formula or constant value.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedName.Comment">
      <summary>
        <para>Gets or sets a string that provides additional information about the current defined name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies additional information about the defined name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedName.Hidden">
      <summary>
        <para>Gets or sets a value indicating whether the defined name should be hidden in the user interface.</para>
      </summary>
      <value>true, to hide the defined name; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedName.IsGlobal">
      <summary>
        <para>Gets a value indicating whether the defined name has a workbook scope.</para>
      </summary>
      <value>true, if the name belongs to the workbook defined name collection; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedName.Name">
      <summary>
        <para>Gets or sets the name of a cell, cell range, formula or constant.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a name by which a cell, cell range, formula or constant can be referred.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedName.ParsedExpression">
      <summary>
        <para>Gets or sets the expression tree created from the formula to which the defined name refers.</para>
      </summary>
      <value>An object that contains the expression tree. If null (Nothing in Visual Basic), an <see cref="T:System.ArgumentException"/> is thrown.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedName.Range">
      <summary>
        <para>Gets or sets a cell range to which the defined name refers.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedName.RefersTo">
      <summary>
        <para>Gets or sets a string that specifies a cell, cell range, formula or constant to which the defined name refers.</para>
      </summary>
      <value>A string that is a cell reference, formula or constant associated with the defined name. If this value is empty or invalid, an <see cref="T:System.ArgumentException"/> is thrown.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedName.Scope">
      <summary>
        <para>Gets a worksheet to which the defined name is scoped.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object which stores the given defined name, or null (Nothing in Visual Basic) if the name has a workbook scope.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DefinedNameCollection">
      <summary>
        <para>A collection of defined names stored in a worksheet or workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameCollection.Add(System.String,System.String)">
      <summary>
        <para>Adds a new defined name to the end of the collection and returns the newly created object.</para>
      </summary>
      <param name="name">A string that specifies the name of a cell, cell range, formula or constant.</param>
      <param name="refersTo">A string that specifies a cell reference, formula or constant to be associated with the defined name. If the specified value is empty or invalid, an <see cref="T:System.ArgumentException"/> is thrown.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.DefinedName"/> object that specifies the created defined name.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameCollection.Clear">
      <summary>
        <para>Removes all defined names from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameCollection.Contains(DevExpress.Spreadsheet.DefinedName)">
      <summary>
        <para>Indicates whether the collection contains the specified defined name.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.DefinedName"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the defined name; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameCollection.Contains(System.String)">
      <summary>
        <para>Indicates whether the collection contains the defined name with the specified <see cref="P:DevExpress.Spreadsheet.DefinedName.Name"/> property value.</para>
      </summary>
      <param name="name">A string that is the <see cref="P:DevExpress.Spreadsheet.DefinedName.Name"/> property value of the defined name to locate in the collection.</param>
      <returns>true, if the collection contains the defined name; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameCollection.GetDefinedName(System.String)">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Spreadsheet.DefinedName"/> object with the specified <see cref="P:DevExpress.Spreadsheet.DefinedName.Name"/> property value.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that is the name of the defined name to be found. This name is specified by the <see cref="P:DevExpress.Spreadsheet.DefinedName.Name"/> property.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.DefinedName"/> object that has the specified name. Null (Nothing in VB), if no object with the specified name is found.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameCollection.IndexOf(DevExpress.Spreadsheet.DefinedName)">
      <summary>
        <para>Returns the position of the defined name in the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.DefinedName"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the defined name’s position within the collection. &#0045;1 if the defined name doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameCollection.Remove(DevExpress.Spreadsheet.DefinedName)">
      <summary>
        <para>Removes the specified defined name from the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.DefinedName"/> object to be removed form the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameCollection.Remove(System.String)">
      <summary>
        <para>Removes the defined name with the specified name from the collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name (<see cref="P:DevExpress.Spreadsheet.DefinedName.Name"/>) of the defined name to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the defined name at the specified index location from the current collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the defined name to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs">
      <summary>
        <para>Provides data for the DefinedNameConflictResolving event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs.#ctor(System.String,DevExpress.XtraSpreadsheet.Services.IDefinedNameValidator,DevExpress.XtraSpreadsheet.Services.DefinedNameStatus,DevExpress.Spreadsheet.IUsedNameSet)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="conflictedName">A string value specifying the conflict name.</param>
      <param name="validator">An object implementing the <see cref="T:DevExpress.XtraSpreadsheet.Services.IDefinedNameValidator"/> interface used to validate a new version of the conflict defined name.</param>
      <param name="nameStatus">A <see cref="T:DevExpress.XtraSpreadsheet.Services.DefinedNameStatus"/> enumeration value specifying the defined name status.</param>
      <param name="usedNames">An object exposing the <see cref="T:DevExpress.Spreadsheet.IUsedNameSet"/> interface that is a set of names defined in the destination document and names for which name conflicts have already been resolved.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs.NameStatus">
      <summary>
        <para>Gets the status of the conflict name.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Services.DefinedNameStatus"/> enumeration value specifying the defined name status.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs.NewName">
      <summary>
        <para>Gets or sets the name for a new version of the defined name being moved or copied.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the new defined name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs.OldName">
      <summary>
        <para>Gets the defined name for which the event is fired.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the conflict name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs.UsedNames">
      <summary>
        <para>Provides access to the set of table and defined names existing in the destination workbook.</para>
      </summary>
      <value>An object exposing the <see cref="T:DevExpress.Spreadsheet.IUsedNameSet"/> interface.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs.UseExistingName">
      <summary>
        <para>Gets or sets a value indicating whether to use the defined name specified on the destination worksheet or workbook in the conflict situation.</para>
      </summary>
      <value>true, to use the name that exists on the destination worksheet or workbook; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs.Validator">
      <summary>
        <para>Gets or sets a validator used to check whether a new version of the conflict name is valid and unique.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.XtraSpreadsheet.Services.IDefinedNameValidator"/> interface.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventHandler">
      <summary>
        <para>A method that will handle the DefinedNameConflictResolving event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.DefinedNameConflictResolvingEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.DefinedNameScope">
      <summary>
        <para>Lists values used to specify the defined name scope.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DefinedNameScope.Workbook">
      <summary>
        <para>A global scope. A defined name is recognized within the entire workbook.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DefinedNameScope.Worksheet">
      <summary>
        <para>A local scope. A defined name is recognized within the worksheet where this name exists.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DeleteMode">
      <summary>
        <para>Specifies how to delete cells from a worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DeleteMode.EntireColumn">
      <summary>
        <para>Entire columns containing the specified cell range are deleted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DeleteMode.EntireRow">
      <summary>
        <para>Entire rows containing the specified cell range are deleted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DeleteMode.ShiftCellsLeft">
      <summary>
        <para>When deleting cells from a worksheet, other cells in the same row are shifted to the left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DeleteMode.ShiftCellsUp">
      <summary>
        <para>When deleting cells from a worksheet, other cells in the same column are shifted up.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DiagonalBorderType">
      <summary>
        <para>Lists the types of cell diagonal borders.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DiagonalBorderType.Down">
      <summary>
        <para>Specifies a diagonal cell border from top left to bottom right.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DiagonalBorderType.None">
      <summary>
        <para>No diagonal borders are applied in a cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DiagonalBorderType.Up">
      <summary>
        <para>Specifies a diagonal cell border from bottom left to top right.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DiagonalBorderType.UpAndDown">
      <summary>
        <para>Specifies that both diagonal-down and diagonal-up borders are applied in a cell.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DocumentCustomProperties">
      <summary>
        <para>Contains custom document properties associated with a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentCustomProperties.Clear">
      <summary>
        <para>Removes all the custom document properties from a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentCustomProperties.Count">
      <summary>
        <para>Returns the number of custom document properties associated with a workbook.</para>
      </summary>
      <value>An integer value that specifies the number of custom properties defined in a workbook.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentCustomProperties.GetLinkTarget(System.String)">
      <summary>
        <para>Retrieves the name of a cell or cell range to which the target custom property is linked.</para>
      </summary>
      <param name="name">A string value that is the name of a custom document property to be checked.</param>
      <returns>A string value that is the name of the linked cell or cell range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentCustomProperties.IsLinked(System.String)">
      <summary>
        <para>Indicates whether the target custom document property is linked to the cell or cell range content.</para>
      </summary>
      <param name="name">A string value that is the name of the document property to be checked.</param>
      <returns>true, if the custom property is linked to the cell or cell range content; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentCustomProperties.Item(System.String)">
      <summary>
        <para>Gets or sets a custom document property with the given name.</para>
      </summary>
      <param name="name">A string that specifies the name of the custom property to be set or obtained.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the value of the custom property.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentCustomProperties.LinkToContent(System.String,System.String)">
      <summary>
        <para>Links a custom document property to the cell or cell range content.</para>
      </summary>
      <param name="name">A string value that is the name of the custom document property.</param>
      <param name="linkTarget">A string value that is the defined name of the cell or cell range to be linked to the custom property.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentCustomProperties.Names">
      <summary>
        <para>Provides access to a list of custom property names.</para>
      </summary>
      <value>A list of custom property names which implements the <see cref="T:System.Collections.Generic.IEnumerable`1"/>&lt;<see cref="T:System.String"/>,&gt; interface.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DocumentFormat">
      <summary>
        <para>A document format.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentFormat.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> structure with the specified value.</para>
      </summary>
      <param name="value">An integer value specifying the initial value for the document format.</param>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Csv">
      <summary>
        <para>Comma Separated Values - the plain text format that uses commas as separators between cell values. File extension - .csv.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentFormat.Equals(DevExpress.Spreadsheet.DocumentFormat)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> instance.</para>
      </summary>
      <param name="other">An object to compare with the current object.</param>
      <returns>true if objects are equal; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentFormat.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> instance.</para>
      </summary>
      <param name="obj">The object to compare to the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentFormat.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> object.</para>
      </summary>
      <returns>An integer value that is the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentFormat.op_Equality(DevExpress.Spreadsheet.DocumentFormat,DevExpress.Spreadsheet.DocumentFormat)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> structures for equality.</para>
      </summary>
      <param name="id1">The first <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> instance to compare.</param>
      <param name="id2">The second <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> instance to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> objects are equal; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentFormat.op_Inequality(DevExpress.Spreadsheet.DocumentFormat,DevExpress.Spreadsheet.DocumentFormat)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> structures to determine whether they are not equal.</para>
      </summary>
      <param name="id1">The first <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> instance to compare.</param>
      <param name="id2">The second <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> instance to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> objects are not equal; otherwise, false.</returns>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.OpenXml">
      <summary>
        <para>Microsoft Office Open XML format - the default file format starting with Microsoft Excel 2007. File extension - .xlsx.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Text">
      <summary>
        <para>Tab Delimited Text - the plain text format that uses tab characters as separators between cell values. File extension - .txt.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentFormat.ToString">
      <summary>
        <para>Returns a string that represents the <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> object.</para>
      </summary>
      <returns>The <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> object’s string representation.</returns>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Undefined">
      <summary>
        <para>The document format is undefined.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Xls">
      <summary>
        <para>Microsoft Excel 97-2003 binary file format (import/export), or Microsoft Excel 5.0/95 binary file format (import only). File extension - .xls.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Xlsb">
      <summary>
        <para>Microsoft Excel 2007-2010 binary file format (BIFF12). File extension - .xlsb.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Xlsm">
      <summary>
        <para>Microsoft Office Open XML macro-enabled format. File extension - .xlsm.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Xlsx">
      <summary>
        <para>Microsoft Office Open XML format - the default file format starting with Microsoft Excel 2007. File extension - .xlsx.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Xlt">
      <summary>
        <para>Microsoft Excel 97-2003 template file. File extension - .xlt.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Xltm">
      <summary>
        <para>Microsoft Office Open XML macro-enabled template file. File extension - .xltm.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.Xltx">
      <summary>
        <para>Microsoft Office Open XML template file. File extension - .xltx.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentFormat.XmlSpreadsheet2003">
      <summary>
        <para>XML Spreadsheet 2003 file format. File extension - .xml.</para>
      </summary>
      <value>A document format.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DocumentOptions">
      <summary>
        <para>Provides access to workbook options.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.CalculationEngineType">
      <summary>
        <para>Gets or sets the parameter that specifies the computational model used in worksheet calculations.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CalculationEngineType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.CalculationMode">
      <summary>
        <para>Gets or sets the calculation mode that specifies when to calculate formulas in a <see cref="T:DevExpress.Spreadsheet.Workbook"/> or Spreadsheet control.</para>
      </summary>
      <value>An enumeration member that specifies the calculation mode. The default is <see cref="F:DevExpress.Spreadsheet.WorkbookCalculationMode.UseDocumentSettings"/> for the WinForms and WPF Spreadsheet, and <see cref="F:DevExpress.Spreadsheet.WorkbookCalculationMode.Manual"/> for a <see cref="T:DevExpress.Spreadsheet.Workbook"/> component.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Cells">
      <summary>
        <para>Provides access to the options that can be specified for worksheet cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellOptions"/> class instance that provides access to various cell options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Clipboard">
      <summary>
        <para>Provides access to options for clipboard operations.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions"/> object containing options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Compatibility">
      <summary>
        <para>Provides access to options designed to ensure compatibility with previous Spreadsheet versions.</para>
      </summary>
      <value>An object that contains compatibility settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Copy">
      <summary>
        <para>Provides access to options that allow you to control copy operations.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCopyOptions"/> class instance that provides access to copy options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Culture">
      <summary>
        <para>Provides access to the culture-specific settings of the spreadsheet.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object that specifies culture settings currently being used.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.DataSourceLoading">
      <summary>
        <para>Provides access to options for loading a data source in mail merge operations.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDataSourceLoadingOptions"/> object containing options for loading a data source in mail merge operations.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.DocumentOptions.Dispose">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.DocumentCapabilities">
      <summary>
        <para>Provides access to an object used to specify document restrictions.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions"/> class instance that provides access to various document restrictions.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Events">
      <summary>
        <para>Provides access to options used to specify how certain events are raised for the workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.WorkbookEventOptions"/> object comprising workbook event settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Export">
      <summary>
        <para>Provides access to options used to export a workbook to different formats.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions"/> object containing format-specific export options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Import">
      <summary>
        <para>Provides access to options used to import workbooks in different formats.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions"/> object containing various import options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Print">
      <summary>
        <para>Provides access to print options for a workbook.</para>
      </summary>
      <value>An object that contains print options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Protection">
      <summary>
        <para>Provides access to options specifying the encryption parameters for the password protected workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.RealTimeData">
      <summary>
        <para>Provides access to options for real-time data (RTD) function calculation.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.RealTimeDataOptions"/> class instance.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.Save">
      <summary>
        <para>Provides access to the workbook save options.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.WorkbookSaveOptions"/> object that contains settings related to document saving.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentOptions.ZoomMode">
      <summary>
        <para>Gets or sets a zoom mode for all worksheets in the document.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.WorksheetZoomMode"/> enumeration values specifying the zoom mode.The default is <see cref="F:DevExpress.Spreadsheet.WorksheetZoomMode.AllViews"/>.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DocumentProperties">
      <summary>
        <para>Contains basic document properties associated with a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Application">
      <summary>
        <para>Gets or sets the name of the application used to create or modify the document.</para>
      </summary>
      <value>The application name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Author">
      <summary>
        <para>Gets or sets the name of the document’s author.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the author’s name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Category">
      <summary>
        <para>Gets or sets the categorization of the document content.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the category name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Company">
      <summary>
        <para>Gets or sets the name of the company associated with the document.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the company name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.ContentStatus">
      <summary>
        <para>Gets or sets the status of the content (e.g., “Draft”, “Reviewed”, or “Final”).</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the content status.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Created">
      <summary>
        <para>Gets or sets the date and time when the document was created.</para>
      </summary>
      <value>A <see cref="T:System.DateTime"/> object that specifies the date and time value when the document was created.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Custom">
      <summary>
        <para>Provides access to the custom document properties associated with a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DocumentCustomProperties"/> object that represents all the custom document properties for a workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Description">
      <summary>
        <para>Gets or sets the explanation of the document content.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the document’s description.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.DocumentRevision">
      <summary>
        <para>Gets or sets the document’s revision number.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a positive integer indicating the number of saves or revisions.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.DocumentVersion">
      <summary>
        <para>Gets or sets the document’s version number.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a positive integer indicating the version number.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Keywords">
      <summary>
        <para>Gets or sets the delimited set of keywords to support searching and indexing.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the document keywords.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.LastModifiedBy">
      <summary>
        <para>Gets or sets the name of the user who last modified and saved the current document.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the user’s name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Manager">
      <summary>
        <para>Gets or sets the manager name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of the manager.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Modified">
      <summary>
        <para>Gets or sets the date and time on which the document was last saved.</para>
      </summary>
      <value>A <see cref="T:System.DateTime"/> object that specifies a date and time value of the last modification.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Printed">
      <summary>
        <para>Gets or sets the date and time on which the document was last printed.</para>
      </summary>
      <value>A <see cref="T:System.DateTime"/> object that specifies the date and time value of the last printing.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Security">
      <summary>
        <para>Gets or sets the security level of the document.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.DocumentSecurity"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Subject">
      <summary>
        <para>Gets or sets the subject of the document.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the document’s subject.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Title">
      <summary>
        <para>Gets or sets the title of the document.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the document’s title.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentProperties.Version">
      <summary>
        <para>Gets or sets the version of the application used to create or modify the document.</para>
      </summary>
      <value>The version number.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.DocumentSecurity">
      <summary>
        <para>Lists the security levels of the document.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentSecurity.Locked">
      <summary>
        <para>Document is locked for annotation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentSecurity.None">
      <summary>
        <para>Not specified.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentSecurity.Password">
      <summary>
        <para>Document is password protected.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentSecurity.ReadonlyEnforced">
      <summary>
        <para>Document is enforced to be opened as read-only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DocumentSecurity.ReadonlyRecommended">
      <summary>
        <para>Document is recommended to be opened as read-only.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DocumentSettings">
      <summary>
        <para>Contains workbook options related to formula calculation.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentSettings.Calculation">
      <summary>
        <para>Provides access to options used for calculation of formulas contained in the worksheet cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CalculationOptions"/> object that contains various calculation options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentSettings.CompressImages">
      <summary>
        <para>Returns or specifies whether to compress images in the document.</para>
      </summary>
      <value>true to compress images (default state); otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentSettings.Encryption">
      <summary>
        <para>Provides access to the document encryption options used to save a password encrypted document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.EncryptionOptions"/> object that represents the document encryption settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentSettings.R1C1ReferenceStyle">
      <summary>
        <para>Gets or sets whether the workbook uses the R1C1 reference style.</para>
      </summary>
      <value>true, if the R1C1 reference style is turned on; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentSettings.ShowPivotTableFieldList">
      <summary>
        <para>Gets or sets a value indicating whether the PivotTable Field List should be displayed for pivot tables in the workbook.</para>
      </summary>
      <value>true, to show the Field List for pivot tables contained in the workbook; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentSettings.UpdateLinks">
      <summary>
        <para>Specifies how to update links to other workbooks when the document is opened.</para>
      </summary>
      <value>An enumeration member that specifies update mode for external links.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.DocumentSettings.WriteProtection">
      <summary>
        <para>Returns write-protection options for a workbook.</para>
      </summary>
      <value>An object that stores the document’s write-protection settings.</value>
    </member>
    <member name="N:DevExpress.Spreadsheet.Drawings">
      <summary>
        <para>Contains classes and interfaces which specify information used to display and position drawing objects in spreadsheet documents.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.GradientStopInfo">
      <summary>
        <para>Defines the position and color of a transition point in a gradient.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.GradientStopInfo.Color">
      <summary>
        <para>Gets or sets the color of the gradient stop.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that is the stop’s color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.GradientStopInfo.Position">
      <summary>
        <para>Gets or sets the location of the gradient stop on the gradient line.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value between 0 and 1 that is the stop’s position.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeComplexFill">
      <summary>
        <para>Serves as a base for the <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeGradientFill"/> and <see cref="T:DevExpress.Spreadsheet.Drawings.ShapePictureFill"/> interfaces and contains specific settings for the gradient and picture fills.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeComplexFill.FillRect">
      <summary>
        <para>Gets or set the direction of a gradient fill and specifies the fill area of a picture fill.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeRectangleOffset"/> object that specifies the offset from the corresponding edge of the shape’s bounding box.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeComplexFill.FlipType">
      <summary>
        <para>Gets or sets the direction in which to flip the gradient or picture while tiling.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Office.Drawing.TileFlipType"/> enumeration value that specifies the mirror type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeComplexFill.RotateWithShape">
      <summary>
        <para>Gets or sets a value indicating whether the gradient or picture fill should be rotated with the shape.</para>
      </summary>
      <value>true, to rotate the fill with the shape rotation; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeFill">
      <summary>
        <para>Defines the fill formatting for a drawing object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeFill.PatternFill">
      <summary>
        <para>Provides access to the settings of the pattern fill applied to a drawing object’s element.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapePatternFill"/> object containing pattern fill options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeFill.PictureFill">
      <summary>
        <para>Provides access to the settings of the picture fill applied to a drawing object’s element.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapePictureFill"/> object containing picture fill options.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeFill.SetPatternFill(System.Drawing.Color,System.Drawing.Color,DevExpress.Spreadsheet.Drawings.ShapeFillPatternType)">
      <summary>
        <para>Sets the pattern fill for a drawing object’s element.</para>
      </summary>
      <param name="foregroundColor">A <see cref="T:System.Drawing.Color"/> object that specifies the foreground color of pattern fill.</param>
      <param name="backgroundColor">A <see cref="T:System.Drawing.Color"/> object that specifies the background color of pattern fill.</param>
      <param name="patternType">A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType"/> enumeration value that is a preset type of pattern fill.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeFill.SetPictureFill(DevExpress.Spreadsheet.SpreadsheetImageSource)">
      <summary>
        <para>Sets the picture fill for a drawing object’s element.</para>
      </summary>
      <param name="imageSource">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object containing an image used for the fill.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeFill.SetPictureFill(System.Drawing.Image)">
      <summary>
        <para>Sets the picture fill for a drawing object’s element.</para>
      </summary>
      <param name="image">A <see cref="T:System.Drawing.Image"/> object that is the image used to fill a drawing object’s element.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeFill.SetPictureFill(System.String)">
      <summary>
        <para>Sets the picture fill for a drawing object’s element.</para>
      </summary>
      <param name="filename">A string that specifies a path to the image file.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType">
      <summary>
        <para>Lists preset patterns for a pattern fill.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Cross">
      <summary>
        <para>A pattern of horizontal and vertical lines that cross each other.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DarkDownwardDiagonal">
      <summary>
        <para>A pattern of thick downward diagonal lines that are spaced 50% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DownwardDiagonal"/> pattern and whose width is two times greater than the width of <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DownwardDiagonal"/> lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DarkHorizontal">
      <summary>
        <para>A pattern of thick horizontal lines that are spaced 50% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Horizontal"/> pattern and whose width is two times greater than the width of <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Horizontal"/> lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DarkUpwardDiagonal">
      <summary>
        <para>A pattern of thick upward diagonal lines that are spaced 50% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.UpwardDiagonal"/> pattern and whose width is two times greater than the width of <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.UpwardDiagonal"/> lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DarkVertical">
      <summary>
        <para>A pattern of thick vertical lines that are spaced 50% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Vertical"/> pattern and whose width is two times greater than the width of <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Vertical"/> lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DashedDownwardDiagonal">
      <summary>
        <para>A pattern of dashed downward diagonal lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DashedHorizontal">
      <summary>
        <para>A pattern of dashed horizontal lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DashedUpwardDiagonal">
      <summary>
        <para>A pattern of dashed upward diagonal lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DashedVertical">
      <summary>
        <para>A pattern of dashed vertical lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DiagonalBrick">
      <summary>
        <para>A pattern that has the appearance of diagonally layered bricks.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DiagonalCross">
      <summary>
        <para>A pattern of crisscross diagonal lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Divot">
      <summary>
        <para>A pattern that has the appearance of divots.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DottedDiamond">
      <summary>
        <para>A pattern of dotted forward and backward diagonal lines that cross each other.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DottedGrid">
      <summary>
        <para>A pattern of dotted horizontal and vertical lines that cross each other.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DownwardDiagonal">
      <summary>
        <para>A pattern of downward diagonal lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Horizontal">
      <summary>
        <para>A pattern of horizontal lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.HorizontalBrick">
      <summary>
        <para>A pattern that has the appearance of horizontally layered bricks.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.LargeCheckerBoard">
      <summary>
        <para>A pattern that has the appearance of a checkerboard with large squares.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.LargeConfetti">
      <summary>
        <para>A pattern that has the appearance of large confetti.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.LargeGrid">
      <summary>
        <para>A pattern of horizontal and vertical lines that cross each other to form a series of large squares. This pattern is equal to <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Cross"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.LightDownwardDiagonal">
      <summary>
        <para>A pattern of thin downward diagonal lines that are spaced 50% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DownwardDiagonal"/> pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.LightHorizontal">
      <summary>
        <para>A pattern of thin horizontal lines that are spaced 50% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Horizontal"/> pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.LightUpwardDiagonal">
      <summary>
        <para>A pattern of thin upward diagonal lines that are spaced 50% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.UpwardDiagonal"/> pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.LightVertical">
      <summary>
        <para>A pattern of thin vertical lines that are spaced 50% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Vertical"/> pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.NarrowHorizontal">
      <summary>
        <para>A pattern of thin horizontal lines that are spaced 75% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Horizontal"/> pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.NarrowVertical">
      <summary>
        <para>A pattern of thin vertical lines that are spaced 75% closer together than in the <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Vertical"/> pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.OpenDiamond">
      <summary>
        <para>A pattern of forward and backward diagonal lines that cross each other.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent10">
      <summary>
        <para>A 10% pattern. The ratio of the foreground color to the background color is 10 to 90.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent20">
      <summary>
        <para>A 20% pattern. The ratio of the foreground color to the background color is 20 to 80.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent25">
      <summary>
        <para>A 25% pattern. The ratio of the foreground color to the background color is 25 to 75.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent30">
      <summary>
        <para>A 30% pattern. The ratio of the foreground color to the background color is 30 to 70.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent40">
      <summary>
        <para>A 40% pattern. The ratio of the foreground color to the background color is 40 to 60.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent5">
      <summary>
        <para>A 5% pattern. The ratio of the foreground color to the background color is 5 to 95.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent50">
      <summary>
        <para>A 50% pattern. The ratio of the foreground color to the background color is 50 to 50.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent60">
      <summary>
        <para>A 60% pattern. The ratio of the foreground color to the background color is 60 to 40.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent70">
      <summary>
        <para>A 70% pattern. The ratio of the foreground color to the background color is 70 to 30.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent75">
      <summary>
        <para>A 75% pattern. The ratio of the foreground color to the background color is 75 to 25.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent80">
      <summary>
        <para>A 80% pattern. The ratio of the foreground color to the background color is 80 to 20.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Percent90">
      <summary>
        <para>A 90% pattern. The ratio of the foreground color to the background color is 90 to 10.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Plaid">
      <summary>
        <para>A pattern that has the appearance of the plaid material.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Shingle">
      <summary>
        <para>A pattern that has the appearance of diagonally layered shingles.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.SmallCheckerBoard">
      <summary>
        <para>A pattern that has the appearance of a checkerboard with small squares.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.SmallConfetti">
      <summary>
        <para>A pattern that has the appearance of small confetti.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.SmallGrid">
      <summary>
        <para>A pattern of closely spaced horizontal and vertical lines that cross each other to form a series of small squares.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.SolidDiamond">
      <summary>
        <para>A pattern that has the appearance of a checkerboard made up of equal-sized diamonds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Sphere">
      <summary>
        <para>A pattern that has the appearance of adjacent spheres.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Trellis">
      <summary>
        <para>A pattern that has the appearance of a trellis.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.UpwardDiagonal">
      <summary>
        <para>A pattern of upward diagonal lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Vertical">
      <summary>
        <para>A pattern of vertical lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Wave">
      <summary>
        <para>A pattern of horizontal lines that are composed of reversed tildes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.Weave">
      <summary>
        <para>A pattern that has the appearance of the woven material.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.WideDownwardDiagonal">
      <summary>
        <para>A pattern of wide downward diagonal lines whose width is three times greater than the width of <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.DownwardDiagonal"/> lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.WideUpwardDiagonal">
      <summary>
        <para>A pattern of wide upward diagonal lines whose width is three times greater than the width of <see cref="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.UpwardDiagonal"/> lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType.ZigZag">
      <summary>
        <para>A pattern of horizontal lines that are composed of zigzags.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeFillType">
      <summary>
        <para>Lists values used to specify the possible ways to fill a shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillType.Auto">
      <summary>
        <para>Specifies that a shape is filled by default according to the applied style and current document theme.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillType.Gradient">
      <summary>
        <para>Specifies that a shape is filled with a gradient whose type is defined by the <see cref="P:DevExpress.Spreadsheet.Drawings.ShapeGradientFill.GradientType"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillType.Group">
      <summary>
        <para>Specifies that a shape is a part of a group and inherits the group’s fill properties.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillType.None">
      <summary>
        <para>Specifies that a shape is not filled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillType.Pattern">
      <summary>
        <para>Specifies that a shape is filled with a pattern defined by the <see cref="P:DevExpress.Spreadsheet.Drawings.ShapePatternFill.PatternType"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillType.Picture">
      <summary>
        <para>Specifies that a shape is filled with a picture defined by the <see cref="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.Image"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeFillType.Solid">
      <summary>
        <para>Specifies that a shape is filled with a solid color defined by the <see cref="P:DevExpress.Spreadsheet.Drawings.ShapeSolidFill.Color"/> property.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeGradientFill">
      <summary>
        <para>Defines the settings of the gradient fill applied to a chart element.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeGradientFill.Angle">
      <summary>
        <para>Gets or sets an angle by which the linear gradient fill should be rotated within the chart element.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the angle in degrees.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeGradientFill.GradientType">
      <summary>
        <para>Returns the type of the gradient applied to a chart element.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeGradientType"/> enumeration value specifying the gradient type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeGradientFill.Scaled">
      <summary>
        <para>Gets or sets a value indicating whether the gradient angle should be scaled with the fill region.</para>
      </summary>
      <value>true, to scale the gradient angle with the fill region; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeGradientFill.Stops">
      <summary>
        <para>Provides access to the gradient stop collection.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.GradientStopCollection"/> object that is the collection of color stop points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeGradientFill.TileRect">
      <summary>
        <para>Specifies the rectangular region of a chart element to which the gradient fill is applied. This region will be tiled to fill the remaining area of the shape.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeRectangleOffset"/> object that specifies the tile rectangle offset from the corresponding edge of the shape.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeGradientType">
      <summary>
        <para>Lists values used to specify the gradient types for the gradient fill.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeGradientType.Circle">
      <summary>
        <para>Specifies a radial gradient that blends two or more colors along a circle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeGradientType.Linear">
      <summary>
        <para>Specifies a linear gradient that blends two or more colors along a line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeGradientType.Rectangle">
      <summary>
        <para>Specifies a rectangular gradient that blends two or more colors along a rectangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeGradientType.Shape">
      <summary>
        <para>Specifies a path gradient that blends two or more colors along a shape to which the gradient fill is applied.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeLineCompoundType">
      <summary>
        <para>Lists values that specify the compound line type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineCompoundType.Double">
      <summary>
        <para>A line style composed of double lines of equal width.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineCompoundType.Single">
      <summary>
        <para>A single line of normal width.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineCompoundType.ThickThin">
      <summary>
        <para>A line style composed of double lines, the first of which is thick and the second, thin.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineCompoundType.ThinThick">
      <summary>
        <para>A line style composed of double lines, the first of which is thin and the second, thick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineCompoundType.Triple">
      <summary>
        <para>A line style composed of triple lines, the first of which is thin, the second, thick, and the last one, thin.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeLineDashing">
      <summary>
        <para>Lists values that specify the line dash type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.Dash">
      <summary>
        <para>A line consisting of dashes. The binary pattern is 1111000 (four filled points and three spaces).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.DashDot">
      <summary>
        <para>A line consisting of a repeating dash-dot pattern. The binary pattern is 11110001000 (four filled points - three spaces - one filled point - three spaces).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.Dot">
      <summary>
        <para>A line consisting of dots. The binary pattern is 1000 (one filled point and three spaces).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.LongDash">
      <summary>
        <para>A line consisting of long dashes. The binary pattern is 11111111000 (eight filled points and three spaces).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.LongDashDot">
      <summary>
        <para>A line consisting of a repeating long dash-dot pattern. The binary pattern is 111111110001000 (eight filled points - three spaces - one filled point - three spaces).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.LongDashDotDot">
      <summary>
        <para>A line consisting of a repeating long dash-dot-dot pattern. The binary pattern is 1111111100010001000 (eight filled points - three spaces - one filled point - three spaces - one filled point - three spaces).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.Solid">
      <summary>
        <para>A solid line. The binary pattern is 1 (a continuous line).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.SystemDash">
      <summary>
        <para>A line consisting of short dashes. The binary pattern is 1110 (three filled points and one space).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.SystemDashDot">
      <summary>
        <para>A line consisting of a repeating short dash-dot pattern. The binary pattern is 111010 (three filled points - one space - one filled point - one space).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.SystemDashDotDot">
      <summary>
        <para>A line consisting of a repeating short dash-dot-dot pattern. The binary pattern is 11101010 (three filled points - one space - one filled point - one space - one filled point - one space).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineDashing.SystemDot">
      <summary>
        <para>A line consisting of dots with a short space between them. The binary pattern is 10 (one filled point and one space).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeLineEndCapStyle">
      <summary>
        <para>Lists values used to specify the cap style for the end of a line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineEndCapStyle.Flat">
      <summary>
        <para>Specifies that the line end is flat.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineEndCapStyle.Round">
      <summary>
        <para>Specifies that a line has a round end.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineEndCapStyle.Square">
      <summary>
        <para>Specifies that a line has a square end.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeLineJoinStyle">
      <summary>
        <para>Lists values that specify the line join type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineJoinStyle.Bevel">
      <summary>
        <para>Specifies that a corner where two lines intersect is cut off at a 45 degree angle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineJoinStyle.Miter">
      <summary>
        <para>Specifies that a corner where two lines intersect is sharp or clipped, depending on the <see cref="P:DevExpress.Spreadsheet.Drawings.ShapeOutline.MiterLimit"/> value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeLineJoinStyle.Round">
      <summary>
        <para>Specifies that a corner where two lines intersect is rounded.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeOutline">
      <summary>
        <para>Contains information on a drawing object’s outline and provides methods to set fill types.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeOutline.CapType">
      <summary>
        <para>Gets or sets a style for the end of a shape line.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeLineEndCapStyle"/> enumeration value that defines the line cap type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeOutline.CompoundType">
      <summary>
        <para>Gets or sets the compound type for a shape line.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeLineCompoundType"/> enumeration value specifying the compound line style.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeOutline.Dashing">
      <summary>
        <para>Gets or sets the dash style for a shape line.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeLineDashing"/> enumeration value that specifies the line dash type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeOutline.JoinType">
      <summary>
        <para>Gets or sets a join style for two intersecting lines.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeLineJoinStyle"/> enumeration value that specifies the join type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeOutline.MiterLimit">
      <summary>
        <para>Gets or sets the value used to calculate the distance at which the intersection of lines is clipped.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeOutline.Width">
      <summary>
        <para>Gets or sets the width of the shape line.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the line width in points.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeOutlineFill">
      <summary>
        <para>A base class for the <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeOutline"/> class containing information on the fill type of the shape outline of chart elements and providing methods to set fill types.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeOutlineFill.FillType">
      <summary>
        <para>Returns the fill type applied to a shape.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeFillType"/> enumeration value specifying the fill type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeOutlineFill.GradientFill">
      <summary>
        <para>Provides access to the settings of the gradient fill applied to a drawing object’s element.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeGradientFill"/> object containing gradient fill options.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeOutlineFill.SetAutoFill">
      <summary>
        <para>Sets the automatic fill for a drawing object’s element.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeOutlineFill.SetGradientFill(DevExpress.Spreadsheet.Drawings.ShapeGradientType,System.Collections.Generic.IList{DevExpress.Spreadsheet.Drawings.GradientStopInfo})">
      <summary>
        <para>Sets the gradient fill for a drawing object’s element.</para>
      </summary>
      <param name="gradientType">A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeGradientType"/> enumeration value specifying the type of the gradient to be applied to a chart element.</param>
      <param name="gradientStops">A list of the <see cref="T:DevExpress.Spreadsheet.Drawings.GradientStopInfo"/> objects containing information about the gradient stop position and color.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeOutlineFill.SetGradientFill(DevExpress.Spreadsheet.Drawings.ShapeGradientType,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Sets the two-color gradient fill for a drawing object’s element.</para>
      </summary>
      <param name="gradientType">A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeGradientType"/> enumeration value specifying the type of the gradient to be applied to a drawing object’s element.</param>
      <param name="firstColor">A <see cref="T:System.Drawing.Color"/> object that is the color at the starting point (0).</param>
      <param name="lastColor">A <see cref="T:System.Drawing.Color"/> object that is the color at the ending point (1).</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeOutlineFill.SetNoFill">
      <summary>
        <para>Removes any fill from a drawing object’s element.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeOutlineFill.SetSolidFill(System.Drawing.Color)">
      <summary>
        <para>Sets a solid color fill for a drawing object’s element.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> object that specifies the color used to fill a drawing object’s element.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeOutlineFill.SolidFill">
      <summary>
        <para>Provides access to the settings of the solid fill applied to a drawing object’s element.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeSolidFill"/> object containing solid fill options.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapePatternFill">
      <summary>
        <para>Defines the settings of the pattern fill applied to a chart element.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePatternFill.BackgroundColor">
      <summary>
        <para>Gets or sets the background color of the pattern fill applied to a chart element.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that specifies the background color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePatternFill.ForegroundColor">
      <summary>
        <para>Gets or sets the foreground color of the pattern fill applied to a chart element.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that specifies the foreground color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePatternFill.PatternType">
      <summary>
        <para>Gets or sets the type of the pattern applied to a chart element.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeFillPatternType"/> enumeration value specifying the pattern type.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapePictureFill">
      <summary>
        <para>Defines the settings of the picture fill applied to a chart element.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.AlignType">
      <summary>
        <para>Gets or sets the placement of the tiled picture with respect to the shape.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.TileAlignType"/> enumeration value that specifies the first tile alignment.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.Image">
      <summary>
        <para>Gets the image used to fill a chart element.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Office.Utils.OfficeImage"/> object specifying the image used for the picture fill.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.OffsetX">
      <summary>
        <para>Gets or sets the additional horizontal offset of the tiled picture fill after the <see cref="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.AlignType"/> property is specified.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the offset in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property. A negative value moves the picture fill to the left, and a positive - to the right.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.OffsetY">
      <summary>
        <para>Gets or sets the additional vertical offset of the tiled picture fill after the <see cref="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.AlignType"/> property is specified.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the offset in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property. A negative value moves the picture fill up, and a positive values shifts the picture fill down.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.ScaleX">
      <summary>
        <para>Gets or sets the horizontal scaling of the picture used for the tiled picture fill.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the scale factor percentage. This value must be between 0 and 1.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.ScaleY">
      <summary>
        <para>Gets or sets the vertical scaling of the picture used for the tiled picture fill.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the scale factor percentage. This value must be between 0 and 1.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.SourceRect">
      <summary>
        <para>Gets the part of the picture used for the fill.</para>
      </summary>
      <value>An object that specifies the source rectangle offsets from the corresponding edges of the bounding box.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapePictureFill.Stretch">
      <summary>
        <para>Gets or sets a value indicating whether the picture should be stretched to fill the chart element.</para>
      </summary>
      <value>true, to stretch the picture; otherwise, false. The default is true.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeRectangleOffset">
      <summary>
        <para>Defines the offsets from the corresponding edges of the shape to which the gradient or picture fill is applied.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeRectangleOffset.Bottom">
      <summary>
        <para>Gets or sets the offset from the bottom edge of the shape.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value. A positive value indicates an inset and a negative value specifies an outset.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeRectangleOffset.Left">
      <summary>
        <para>Gets or sets the offset from the left edge of the shape.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value. A positive value indicates an inset and a negative value specifies an outset.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeRectangleOffset.Right">
      <summary>
        <para>Gets or sets the offset from the right edge of the shape.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value. A positive value indicates an inset and a negative value specifies an outset.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeRectangleOffset.Top">
      <summary>
        <para>Gets or sets the offset from the top edge of the shape.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value. A positive value indicates an inset and a negative value specifies an outset.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeSolidFill">
      <summary>
        <para>Defines the settings of the solid color fill applied to a chart element.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeSolidFill.Color">
      <summary>
        <para>Gets or sets the color used to fill a chart element.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that is the fill color.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeTextCapsType">
      <summary>
        <para>Lists the types of text capitalization.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextCapsType.All">
      <summary>
        <para>All capital formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextCapsType.None">
      <summary>
        <para>Lower case formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextCapsType.Small">
      <summary>
        <para>Small capital formatting.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeTextFont">
      <summary>
        <para>Contains shape text font attributes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.Auto">
      <summary>
        <para>Gets whether the text formatting is determined by the drawing object’s style.</para>
      </summary>
      <value>true, if the text font is set automatically to match the style; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.Bold">
      <summary>
        <para>Gets or sets the value indicating whether the text is formatted as bold.</para>
      </summary>
      <value>true, if the text is bold; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.CapsType">
      <summary>
        <para>Gets or sets text capitalization.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeTextCapsType"/> enumeration member specifying capitalization style.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.Color">
      <summary>
        <para>Gets or sets the color of the font applied to the text.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/>  structure that specifies the font color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.Italic">
      <summary>
        <para>Gets or sets the value indicating whether the text is formatted as italic.</para>
      </summary>
      <value>true, if the cell text is italic; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.Name">
      <summary>
        <para>Gets or sets the name of the font used to display the text.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value specifying the font name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.Script">
      <summary>
        <para>Formats the text as subscript or superscript.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ScriptType"/> enumeration value indicating whether the text is subscript or superscript.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Drawings.ShapeTextFont.SetAuto">
      <summary>
        <para>Sets font formatting as the drawing object’s style specifies.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.Size">
      <summary>
        <para>Gets or sets the size of the font used to display the text.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value specifying the font size in points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.StrikeType">
      <summary>
        <para>Gets or sets the value indicating that strikethrough formatting is applied to the text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeTextStrikeType"/> enumeration value indicating the strikethrough format type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Drawings.ShapeTextFont.UnderlineType">
      <summary>
        <para>Gets or sets the type of underline applied to the text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeTextStrikeType">
      <summary>
        <para>Lists the types of lines drawn through the text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextStrikeType.Double">
      <summary>
        <para>Double line strike-through.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextStrikeType.None">
      <summary>
        <para>No strike-through.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextStrikeType.Single">
      <summary>
        <para>Single line strike-through.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType">
      <summary>
        <para>Lists the types of underline formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.Dashed">
      <summary>
        <para>Dashed line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.DotDash">
      <summary>
        <para>Series of dash - dot characters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.DotDotDash">
      <summary>
        <para>Series of dash - dot - dot characters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.Dotted">
      <summary>
        <para>Series of dot characters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.Double">
      <summary>
        <para>Two lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.DoubleWavy">
      <summary>
        <para>Pair of wavy lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.Heavy">
      <summary>
        <para>Heavy line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.HeavyDashed">
      <summary>
        <para>Series of thick dashes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.HeavyDotDash">
      <summary>
        <para>Series of thick dash - dot characters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.HeavyDotDotDash">
      <summary>
        <para>Series of thick dash - dot - dot characters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.HeavyDotted">
      <summary>
        <para>Series of thick dot characters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.HeavyLongDashed">
      <summary>
        <para>Series of thick, long, dashed characters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.HeavyWavy">
      <summary>
        <para>Single thick wavy line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.LongDashed">
      <summary>
        <para>Series of long dashed characters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.None">
      <summary>
        <para>No underline.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.Single">
      <summary>
        <para>Single line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.Wavy">
      <summary>
        <para>Single wavy line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.ShapeTextUnderlineType.Words">
      <summary>
        <para>Single line beneath all non-space characters.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Drawings.TileAlignType">
      <summary>
        <para>Lists values used to specify the position of the first tile relative to the shape to which the tiled picture fill is applied.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.TileAlignType.Bottom">
      <summary>
        <para>Specifies that the first tile should be aligned to the bottom edge of the shape and centered.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.TileAlignType.BottomLeft">
      <summary>
        <para>Specifies that the first tile should be aligned to the bottom left of the shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.TileAlignType.BottomRight">
      <summary>
        <para>Specifies that the first tile should be aligned to the bottom right of the shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.TileAlignType.Center">
      <summary>
        <para>Specifies that the first tile should be aligned to the center of the shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.TileAlignType.Left">
      <summary>
        <para>Specifies that the first tile should be aligned to the left edge of the shape and centered.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.TileAlignType.Right">
      <summary>
        <para>Specifies that the first tile should be aligned to the right edge of the shape and centered.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.TileAlignType.Top">
      <summary>
        <para>Specifies that the first tile should be aligned to the top edge of the shape and centered.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.TileAlignType.TopLeft">
      <summary>
        <para>Specifies that the first tile should be aligned to the top left of the shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Drawings.TileAlignType.TopRight">
      <summary>
        <para>Specifies that the first tile should be aligned to the top right of the shape.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.DynamicFilterType">
      <summary>
        <para>Lists the types of dynamic filter, i.e. a filter whose results may depend on the data to which it is applied or the current date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.AboveAverage">
      <summary>
        <para>Shows values which are greater than the average value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.BelowAverage">
      <summary>
        <para>Shows values which are less than the average value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.LastMonth">
      <summary>
        <para>Shows dates occurring in the last calendar month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.LastQuarter">
      <summary>
        <para>Shows dates occurring in the last quarter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.LastWeek">
      <summary>
        <para>Shows dates occurring in the last week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.LastYear">
      <summary>
        <para>Shows dates occurring in the last year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M1">
      <summary>
        <para>Shows dates occurring in January, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M10">
      <summary>
        <para>Shows dates occurring in October, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M11">
      <summary>
        <para>Shows dates occurring in November, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M12">
      <summary>
        <para>Shows dates occurring in December, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M2">
      <summary>
        <para>Shows dates occurring in February, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M3">
      <summary>
        <para>Shows dates occurring in March, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M4">
      <summary>
        <para>Shows dates occurring in April, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M5">
      <summary>
        <para>Shows dates occurring in May, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M6">
      <summary>
        <para>Shows dates occurring in June, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M7">
      <summary>
        <para>Shows dates occurring in July, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M8">
      <summary>
        <para>Shows dates occurring in August, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.M9">
      <summary>
        <para>Shows dates occurring in September, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.NextMonth">
      <summary>
        <para>Shows dates occurring in the next calendar month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.NextQuarter">
      <summary>
        <para>Shows dates occurring in the next quarter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.NextWeek">
      <summary>
        <para>Shows dates occurring in the next week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.NextYear">
      <summary>
        <para>Shows dates occurring in the next year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.Null">
      <summary>
        <para>Does not apply any filter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.Q1">
      <summary>
        <para>Shows dates occurring in the 1st quarter, regardless of year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.Q2">
      <summary>
        <para>Shows dates occurring in the 2nd quarter, regardless of year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.Q3">
      <summary>
        <para>Shows dates occurring in the 3rd quarter, regardless of year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.Q4">
      <summary>
        <para>Shows dates occurring in the 4th quarter, regardless of year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.ThisMonth">
      <summary>
        <para>Shows dates in the current month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.ThisQuarter">
      <summary>
        <para>Shows dates in the current quarter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.ThisWeek">
      <summary>
        <para>Shows dates in the current week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.ThisYear">
      <summary>
        <para>Shows dates in the current year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.Today">
      <summary>
        <para>Shows today’s dates.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.Tomorrow">
      <summary>
        <para>Shows tomorrow’s dates.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.YearToDate">
      <summary>
        <para>Shows dates occurring between the beginning of the current year and today, inclusive.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.DynamicFilterType.Yesterday">
      <summary>
        <para>Shows yesterday’s dates.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.EditRangePermission">
      <summary>
        <para>Contains security information required for applying user-level security to a <see cref="T:DevExpress.Spreadsheet.ProtectedRange"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.EditRangePermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.EditRangePermission"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.EditRangePermission.Deny">
      <summary>
        <para>Gets or sets whether a particular permission is denied.</para>
      </summary>
      <value>true, to deny a permission; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.EditRangePermission.DomainName">
      <summary>
        <para>Gets or sets the domain name to which a user or group belongs.</para>
      </summary>
      <value>A string that is the Windows domain name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.EditRangePermission.UserName">
      <summary>
        <para>Gets or sets the name of the user or group for which editing permissions are specified.</para>
      </summary>
      <value>A string that is the name of the user or group.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.EncryptedFileIntegrityCheckFailedEventArgs">
      <summary>
        <para>Provides data for the EncryptedFileIntegrityCheckFailed event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.EncryptedFileIntegrityCheckFailedEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.EncryptedFileIntegrityCheckFailedEventArgs"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.EncryptedFileIntegrityCheckFailedEventHandler">
      <summary>
        <para>A method that will handle the EncryptedFileIntegrityCheckFailed event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">An <see cref="T:DevExpress.Spreadsheet.EncryptedFileIntegrityCheckFailedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.EncryptedFilePasswordCheckFailedEventArgs">
      <summary>
        <para>Provides data for the EncryptedFilePasswordCheckFailed event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.EncryptedFilePasswordCheckFailedEventArgs.#ctor(System.String,DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError)">
      <summary>
        <para>Initializes a new instance of the EncryptedFilePasswordCheckFailedEventArgs class with the specified settings.</para>
      </summary>
      <param name="documentName">The encrypted document’s name.</param>
      <param name="error">The password error.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.EncryptedFilePasswordCheckFailedEventArgs.DocumentName">
      <summary>
        <para>Gets the encrypted document’s name.</para>
      </summary>
      <value>A document name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.EncryptedFilePasswordCheckFailedEventArgs.Error">
      <summary>
        <para>Obtains the password error.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError"/> enumeration values indicating the error type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.EncryptedFilePasswordCheckFailedEventArgs.TryAgain">
      <summary>
        <para>Gets or sets whether to request a password again.</para>
      </summary>
      <value>true to repeat the password request; otherwise, false</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.EncryptedFilePasswordCheckFailedEventHandler">
      <summary>
        <para>Represents a method that will handle the EncryptedFilePasswordCheckFailed event.</para>
      </summary>
      <param name="sender">An object sender.</param>
      <param name="e">An <see cref="T:DevExpress.Spreadsheet.EncryptedFilePasswordCheckFailedEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.EncryptedFilePasswordRequestEventArgs">
      <summary>
        <para>Provides data for the EncryptedFilePasswordRequest event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.EncryptedFilePasswordRequestEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.EncryptedFilePasswordRequestEventArgs"/> class with the specified name of the workbook.</para>
      </summary>
      <param name="documentName">A string that is the name of the encrypted document.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.EncryptedFilePasswordRequestEventArgs.DocumentName">
      <summary>
        <para>Gets the name of the encrypted  document.</para>
      </summary>
      <value>A string that is the document name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.EncryptedFilePasswordRequestEventArgs.Password">
      <summary>
        <para>Gets or sets the password used to encrypt the document.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that is the encryption password.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.EncryptedFilePasswordRequestEventHandler">
      <summary>
        <para>A method that will handle the EncryptedFilePasswordRequest event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">An <see cref="T:DevExpress.Spreadsheet.EncryptedFilePasswordRequestEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.EncryptionOptions">
      <summary>
        <para>Contains the workbook encryption options.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.EncryptionOptions.Password">
      <summary>
        <para>Gets or sets the password to encrypt the workbook.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that is the password for encryption.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.EncryptionOptions.Type">
      <summary>
        <para>Gets or sets the encryption type for the current workbook.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.EncryptionType"/> enumeration values indicating the type of the encryption.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.EncryptionSettings">
      <summary>
        <para>Base implementation of the <see cref="T:DevExpress.Spreadsheet.EncryptionOptions"/> interface.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.EncryptionSettings.#ctor">
      <summary>
        <para>Initializes a new EncryptionSettings instance with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.EncryptionSettings.#ctor(System.String,DevExpress.Spreadsheet.EncryptionType)">
      <summary>
        <para>Initializes a new EncryptionSettings instance with specific settings.</para>
      </summary>
      <param name="password">A password to encrypt the file.</param>
      <param name="type">The encryption type.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.EncryptionSettings.#ctor(System.String)">
      <summary>
        <para>Initializes a new EncryptionSettings instance with specific settings.</para>
      </summary>
      <param name="password">A password to encrypt the file.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.EncryptionSettings.Dispose">
      <summary>
        <para>Releases resources associated with the <see cref="T:DevExpress.Spreadsheet.EncryptionSettings"/> instance.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.EncryptionSettings.Password">
      <summary>
        <para>Gets or sets an encryption password.</para>
      </summary>
      <value>A password.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.EncryptionSettings.Type">
      <summary>
        <para>Specifies the encryption type.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.EncryptionType"/> enumeration values indicating the encryption type.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.EncryptionType">
      <summary>
        <para>Lists available encryption types for a workbook.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.EncryptionType.Compatible">
      <summary>
        <para>Standard encryption for Open XML files that uses a binary EncryptionInfo structure. The default encryption algorithm is AES-128 and SHA-1 is used as a hashing algorithm. Binary files (XLS) are encrypted by 40-bit RC4 encryption.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.EncryptionType.Strong">
      <summary>
        <para>Agile encryption for Open XML files that uses an XML EncryptionInfo structure. The default encryption algorithm is AES-256 and SHA512 is used as a hashing algorithm. Binary files (XLS) are encrypted by RC4 CryptoAPI encryption.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ErrorsPrintMode">
      <summary>
        <para>Lists the values to specify how cell errors are printed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorsPrintMode.Blank">
      <summary>
        <para>Cell errors are not printed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorsPrintMode.Dash">
      <summary>
        <para>Cell errors are printed as double dashes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorsPrintMode.Displayed">
      <summary>
        <para>Cell errors are printed as they are displayed on a worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorsPrintMode.NA">
      <summary>
        <para>Cell errors are printed as #N/A.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ErrorType">
      <summary>
        <para>Lists errors that can occur in cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorType.DivisionByZero">
      <summary>
        <para>The formula includes division by zero or by a cell that does not contain any data. This error is indicated as #DIV/0!.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorType.Name">
      <summary>
        <para>The formula includes text that is not recognized (for example, a defined name that does not exist, a function name that is spelled incorrectly, a cell range reference without colon, etc.). This error is indicated as #NAME?.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorType.None">
      <summary>
        <para>There is no error in the cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorType.NotAvailable">
      <summary>
        <para>The value is not available to the formula or function. This error is indicated as #N/A.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorType.Null">
      <summary>
        <para>The specified intersection includes two ranges that do not intersect. This error is indicated as #NULL!.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorType.Number">
      <summary>
        <para>The formula or function includes invalid numeric values. This error is indicated as #NUM!.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorType.Reference">
      <summary>
        <para>The formula include an invalid cell reference. This error is indicated as #REF!.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ErrorType.Value">
      <summary>
        <para>The formula includes a value of the wrong data type. This error is indicated as #VALUE!.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ErrorValueInfo">
      <summary>
        <para>Contains information about an error that occurred in a cell.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ErrorValueInfo.Description">
      <summary>
        <para>Gets the description of the error that occurred in the cell.</para>
      </summary>
      <value>A string that represents the error description.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ErrorValueInfo.Name">
      <summary>
        <para>Returns the error name displayed in the cell.</para>
      </summary>
      <value>A string that represents the error name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ErrorValueInfo.Type">
      <summary>
        <para>Gets the type of the error that occurred in the cell.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.ErrorType"/> enumeration member that specifies the error type.</value>
    </member>
    <member name="N:DevExpress.Spreadsheet.Export">
      <summary>
        <para>Contains base interfaces and classes required for data export from the cells of the spreadsheet to a data table.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs">
      <summary>
        <para>Provides data for the DataTableExporter.CellValueConversionError event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs.Action">
      <summary>
        <para>Specifies the action performed after the <see cref="E:DevExpress.Spreadsheet.Export.DataTableExporter.CellValueConversionError"/> event is handled.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Export.DataTableExporterAction"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs.Cell">
      <summary>
        <para>Identifies the cell containing the value that cannot be converted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> interface that is the worksheet cell.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs.CellValue">
      <summary>
        <para>Gets the value that caused the error.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the value contained in the cell.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs.ConversionResult">
      <summary>
        <para>Gets an enumeration member that identifies the cause of the conversion error.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Export.ConversionResult"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs.DataColumn">
      <summary>
        <para>Provides access to a column in a target DataTable that cannot be filled with data for the current row due to a conversion error.</para>
      </summary>
      <value>A <see cref="T:System.Data.DataColumn"/> object that is the column in a <see cref="T:System.Data.DataTable"/></value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs.DataTableValue">
      <summary>
        <para>Gets or sets a value contained in the target DataTable.</para>
      </summary>
      <value>An object to be placed in the target DataTable.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs.Initialize(DevExpress.Spreadsheet.Cell,DevExpress.Spreadsheet.CellValue,System.Data.DataColumn,DevExpress.Spreadsheet.Export.ConversionResult)">
      <summary>
        <para>Initializes the object before passing it to a <see cref="E:DevExpress.Spreadsheet.Export.DataTableExporter.CellValueConversionError"/> event handler.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> interface that identifies a worksheet cell.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the value contained in the cell.</param>
      <param name="dataColumn">A <see cref="T:System.Data.DataColumn"/> object that is the column in a <see cref="T:System.Data.DataTable"/></param>
      <param name="prevResult">A <see cref="T:DevExpress.Spreadsheet.Export.ConversionResult"/> enumeration member that is the result of an attempt to convert the cell value.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.Export.DataTableExporter.CellValueConversionError"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.Spreadsheet.Export.DataTableExporter"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.Export.CellValueConversionErrorEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter">
      <summary>
        <para>Default converter used by the DataTableExporter to convert cell values to any data type except String.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.CheckNarrowingConversion">
      <summary>
        <para>Gets or sets whether the result of the conversion is within the range of the destination data type.</para>
      </summary>
      <value>true, to check for narrowing conversion; otherwise, false. Default is false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.Convert(DevExpress.Spreadsheet.Cell,DevExpress.Spreadsheet.CellValue,System.Type,System.Object@)">
      <summary>
        <para>Converts a worksheet cell value to a value that will be written in the DataTable.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the worksheet cell whose value is converted.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the value to be converted.</param>
      <param name="destinationType">A <see cref="T:System.Type"/> object that indicates the column data type to which a cell value is converted.</param>
      <param name="result">An object that is the result of conversion - a value that will be written in a DataTable.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Export.ConversionResult"/> enumeration member that indicates whether the conversion is successful.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.ConvertStringValues">
      <summary>
        <para>Gets or sets whether an attempt is made to convert the text displayed in a worksheet cell to a value of the type indicated by the type of the destination column in the DataTable.</para>
      </summary>
      <value>true, to try convert the cell text to a value of the destination type; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.EmptyCellValue">
      <summary>
        <para>Gets or sets a value used when exporting an empty cell.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the cell value. Default is <see cref="P:DevExpress.Spreadsheet.CellValue.Empty"/>.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.GetCellDisplayText(DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Gets the string that specifies the formatted cell value as it is displayed in a spreadsheet.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the cell whose display text is obtained.</param>
      <returns>A <see cref="T:System.String"/> that is the text for display in the specified cell.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.PreferredCulture">
      <summary>
        <para>Gets or sets the information used to format culture-specific data, such as DateTime, DateTimeOffset, and the numeric types.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object that provides culture-specific information.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.PreferredNumberStyles">
      <summary>
        <para>Gets or sets the styles permitted in strings when an attempt is made to convert a string to the integral or the floating point numeric types.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.NumberStyles"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.SkipErrorValues">
      <summary>
        <para>Gets or sets whether to skip cells with error values.</para>
      </summary>
      <value>true, to skip cells with error values; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter.TreatStringAsZero">
      <summary>
        <para>Gets or sets whether a cell containing text should be converted to a 0 (zero) numeric value.</para>
      </summary>
      <value>true, to return 0 (zero) if the converted cell contains text; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.CellValueToStringConverter">
      <summary>
        <para>Default converter used by the DataTableExporter to convert cell values to the String data type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.CellValueToStringConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Export.CellValueToStringConverter"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.CellValueToStringConverter.Convert(DevExpress.Spreadsheet.Cell,DevExpress.Spreadsheet.CellValue,System.Type,System.Object@)">
      <summary>
        <para>Converts a worksheet cell value to a string.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the worksheet cell whose value is converted.</param>
      <param name="cellValue">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the value to be converted.</param>
      <param name="dataColumnType">A <see cref="T:System.Type"/> object that indicates the column data type to which a cell value is converted. Not used, the method always converts a value to the string.</param>
      <param name="result">An object that is the result of conversion - a value that will be written in a DataTable. A <see cref="T:System.String"/> object instance.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Export.ConversionResult"/> enumeration member that indicates whether the conversion is successful.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToStringConverter.EmptyCellValue">
      <summary>
        <para>Gets or sets a value used when exporting an empty cell.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the cell value. Default is <see cref="P:DevExpress.Spreadsheet.CellValue.Empty"/>.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToStringConverter.PreferredCulture">
      <summary>
        <para>Gets or sets the information used to format culture-specific string data.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object that provides culture-specific information.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToStringConverter.PreferredNumberFormat">
      <summary>
        <para>Returns a format string (in the invariant culture) that specifies how to format numbers converted to strings.</para>
      </summary>
      <value>A string that specifies how to format numbers when they are converted to strings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToStringConverter.PreferredNumberFormatLocal">
      <summary>
        <para>Returns a local format string that specifies how to format numbers converted to strings.</para>
      </summary>
      <value>A string that specifies how to format numbers when they are converted to strings.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.CellValueToStringConverter.SetPreferredNumberFormat(DevExpress.Spreadsheet.IWorkbook,System.String)">
      <summary>
        <para>Specifies a number format (in the invariant culture) used for string representation of numeric values.</para>
      </summary>
      <param name="workbook">The current workbook.</param>
      <param name="excelNumberFormat">A Microsoft Excel compatible number format.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.CellValueToStringConverter.SetPreferredNumberFormatLocal(DevExpress.Spreadsheet.IWorkbook,System.String)">
      <summary>
        <para>Specifies a local number format used for string representation of numeric values.</para>
      </summary>
      <param name="workbook">The current workbook.</param>
      <param name="excelNumberFormat">A Microsoft Excel compatible number format.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.CellValueToStringConverter.SkipErrorValues">
      <summary>
        <para>Gets or sets whether to skip cells with error values.</para>
      </summary>
      <value>true, to skip cells with error values; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.ConversionResult">
      <summary>
        <para>List possible conversion results.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Export.ConversionResult.Error">
      <summary>
        <para>An attempt to convert a value is unsuccessful.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Export.ConversionResult.Overflow">
      <summary>
        <para>An attempt to convert a value results in an Overflow Exception.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Export.ConversionResult.Success">
      <summary>
        <para>Conversion is successful.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.DataTableExporter">
      <summary>
        <para>Performs export of the worksheet range to the data table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.DataTableExporter.#ctor(System.Data.DataTable,DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Export.DataTableExporter"/> class with the specified settings.</para>
      </summary>
      <param name="dataTable">A <see cref="T:System.Data.DataTable"/> object that is the table that will be populated with exported data.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> that is the worksheet cell range containing data for export.</param>
      <param name="rangeHasHeaders">true, if the first row in a cell range contains column names instead of data for export; otherwise, false.</param>
    </member>
    <member name="E:DevExpress.Spreadsheet.Export.DataTableExporter.CellValueConversionError">
      <summary>
        <para>Fires if an error occurs during conversion of a specific cell value to the value which should be stored in a data table.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExporter.DataTable">
      <summary>
        <para>Provides access to the DataTable containing exported data.</para>
      </summary>
      <value>A <see cref="T:System.Data.DataTable"/> object that is the table for exported data.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.DataTableExporter.GetConverter(System.Type,System.String,System.Int32)">
      <summary>
        <para>Obtains the converter used by the DataTableExporter for the specified column.</para>
      </summary>
      <param name="targetType">A <see cref="T:System.Type"/> object that specifies the data type for which the converter is obtained.</param>
      <param name="columnName">A string that is the name of the column in the target DataTable.</param>
      <param name="columnIndexInDataTable">An integer that is the index of the column in the target DataTable.</param>
      <returns>An object that exposes the <see cref="T:DevExpress.Spreadsheet.Export.ICellValueToColumnTypeConverter"/> interface.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExporter.Options">
      <summary>
        <para>Provides access to various options that specify how the export and data conversion are performed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Export.DataTableExportOptions"/> object containing export and conversion options.</value>
    </member>
    <member name="E:DevExpress.Spreadsheet.Export.DataTableExporter.ProcessEmptyRow">
      <summary>
        <para>Occurs when an empty row is encountered during export and the <see cref="P:DevExpress.Spreadsheet.Export.DataTableExportOptions.SkipEmptyRows"/> property is false.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExporter.Range">
      <summary>
        <para>Gets the worksheet cell range containing data for export.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the worksheet cell range.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExporter.RangeHasHeaders">
      <summary>
        <para>Gets whether the first row of the cell range contains column names.</para>
      </summary>
      <value>true, if the first row of a cell range contains headings instead of data; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.DataTableExporterAction">
      <summary>
        <para>Lists possible actions which can be specified in the <see cref="E:DevExpress.Spreadsheet.Export.DataTableExporter.CellValueConversionError"/> event handler.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Export.DataTableExporterAction.Continue">
      <summary>
        <para>Continue export procedure and proceed to the next cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Export.DataTableExporterAction.SkipRow">
      <summary>
        <para>Do not export the current cell and skip the entire row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Export.DataTableExporterAction.Stop">
      <summary>
        <para>Stop the export procedure and cancel export of the current row.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.DataTableExporterOptimizationType">
      <summary>
        <para>Lists optimization types which specify the strategy used for data export from cells to a DataTable.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Export.DataTableExporterOptimizationType.Memory">
      <summary>
        <para>Allocates a block of memory required to export a single cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Export.DataTableExporterOptimizationType.Speed">
      <summary>
        <para>Tries to allocate a block of memory sufficient to hold all data for export.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.DataTableExportOptions">
      <summary>
        <para>Comprises various options and settings which are used for exporting cell values to a DataTable.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.DataTableExportOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Export.DataTableExportOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExportOptions.ConvertEmptyCells">
      <summary>
        <para>Gets or sets whether a cell with an empty value is processed by a converter.</para>
      </summary>
      <value>true, to process cells with empty values; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExportOptions.CustomConverters">
      <summary>
        <para>Gets or sets custom converters for cell values.</para>
      </summary>
      <value>A generic dictionary <see cref="T:System.Collections.Generic.Dictionary`2"/>&lt;<see cref="T:System.String"/>,<see cref="T:DevExpress.Spreadsheet.Export.ICellValueToColumnTypeConverter"/>,&gt;, providing a collection of complementary column name - converter pairs.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExportOptions.DefaultCellValueToColumnTypeConverter">
      <summary>
        <para>Specifies the default converter for cell values to all data types except strings.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Export.CellValueToColumnTypeConverter object that enables you to specify conversion options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExportOptions.DefaultCellValueToStringConverter">
      <summary>
        <para>Specifies the default converter for DataTable columns with the String datatype.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Export.CellValueToStringConverter object that enables you to specify conversion options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExportOptions.OptimizationType">
      <summary>
        <para>Gets or sets the type of optimization used for cell value conversion.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Export.DataTableExporterOptimizationType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.DataTableExportOptions.SkipEmptyRows">
      <summary>
        <para>Gets or sets whether to skip rows containing only empty cells in the exported range.</para>
      </summary>
      <value>true, to skip rows with empty cell values; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.ICellValueToColumnTypeConverter">
      <summary>
        <para>Base interface implemented by converters which are used by the <see cref="T:DevExpress.Spreadsheet.Export.DataTableExporter"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.ICellValueToColumnTypeConverter.Convert(DevExpress.Spreadsheet.Cell,DevExpress.Spreadsheet.CellValue,System.Type,System.Object@)">
      <summary>
        <para>Converts a cell value to the data stored in the DataTable.</para>
      </summary>
      <param name="readOnlyCell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the worksheet cell containing the source value.</param>
      <param name="cellValue">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the cell value to be converted.</param>
      <param name="dataColumnType">A <see cref="T:System.Type"/> object that indicates the type of data stored in the column.</param>
      <param name="result">An object that is the result of conversion.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Export.ConversionResult"/> enumeration that indicates whether the conversion is successful.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.ICellValueToColumnTypeConverter.EmptyCellValue">
      <summary>
        <para>Gets or sets a value used when exporting an empty cell.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the cell value. Default is <see cref="P:DevExpress.Spreadsheet.CellValue.Empty"/>.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.ProcessEmptyRowEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Spreadsheet.Export.DataTableExporter.ProcessEmptyRow"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.ProcessEmptyRowEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Export.ProcessEmptyRowEventArgs"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.ProcessEmptyRowEventArgs.Action">
      <summary>
        <para>Gets or sets an action to be performed when an empty row is encountered and the <see cref="E:DevExpress.Spreadsheet.Export.DataTableExporter.ProcessEmptyRow"/> event occurs.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Export.DataTableExporterAction"/> enumeration member.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Export.ProcessEmptyRowEventArgs.Initialize(System.Int32)">
      <summary>
        <para>Initializes the object before passing it to a <see cref="E:DevExpress.Spreadsheet.Export.DataTableExporter.ProcessEmptyRow"/> event handler.</para>
      </summary>
      <param name="rowIndex">A zero-based integer specifying the index of the empty row.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Export.ProcessEmptyRowEventArgs.RowIndex">
      <summary>
        <para>Obtains the index of an empty row.</para>
      </summary>
      <value>An integer that is the row index.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Export.ProcessEmptyRowEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.Export.DataTableExporter.ProcessEmptyRow"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.Spreadsheet.Export.DataTableExporter"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.Export.ProcessEmptyRowEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ExpressionConditionalFormatting">
      <summary>
        <para>Represents a conditional formatting rule that uses a relational operator to determine which cells to format.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExpressionConditionalFormatting.Condition">
      <summary>
        <para>Gets or sets a relational operator used in the conditional formatting rule.</para>
      </summary>
      <value>One of <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingExpressionCondition"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExpressionConditionalFormatting.Value">
      <summary>
        <para>Gets or sets a threshold value used in the conditional formatting rule.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that represents a threshold value.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ExternalDataSourceOptions">
      <summary>
        <para>Contains options for data retrieval from an external data source when establishing a data binding.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ExternalDataSourceOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ExternalDataSourceOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExternalDataSourceOptions.ImportHeaders">
      <summary>
        <para>Gets or sets whether the first row of the binding range will contain data field names.</para>
      </summary>
      <value>True, to display data field names in the first row of the cell range specified for data binding; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ExternalDefinedName">
      <summary>
        <para>A defined name that is contained in the external workbook or in the external worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExternalDefinedName.Name">
      <summary>
        <para>Obtains the name defined in the external workbook.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a name by which a cell, cell range, formula or constant can be referred.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExternalDefinedName.RefersTo">
      <summary>
        <para>Obtains a string that specifies a cell, cell range, formula or constant to which the defined name of the external workbook refers.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a cell reference, formula or constant associated with the defined name.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ExternalWorkbook">
      <summary>
        <para>An external workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExternalWorkbook.DefinedNames">
      <summary>
        <para>Provides access to a collection of defined names for the external workbook.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Spreadsheet.ExternalDefinedName"/> objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExternalWorkbook.Path">
      <summary>
        <para>Gets the path to the spreadsheet file loaded as an external workbook.</para>
      </summary>
      <value>A string that is the path to a file including a file name.</value>
    </member>
    <member name="E:DevExpress.Spreadsheet.ExternalWorkbook.SchemaChanged">
      <summary>
        <para>Occurs when the schema of an external workbook is changed (a new worksheet is added, a new defined name appears etc.).</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExternalWorkbook.Worksheets">
      <summary>
        <para>Gets a collection of worksheets contained in the external workbook.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Spreadsheet.ExternalWorksheet"/> objects.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ExternalWorkbookCollection">
      <summary>
        <para>A collection of external workbooks.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ExternalWorkbookCollection.Add(DevExpress.Spreadsheet.ExternalWorkbook,System.String)">
      <summary>
        <para>Adds a new workbook to the <see cref="T:DevExpress.Spreadsheet.ExternalWorkbookCollection"/> collection.</para>
      </summary>
      <param name="item">An <see cref="T:DevExpress.Spreadsheet.ExternalWorkbook"/> object specifying the workbook to be added to the collection.</param>
      <param name="alias">A <see cref="T:System.String"/> value specifying the custom workbook name that can be used in external references.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExternalWorkbookCollection.Count">
      <summary>
        <para>Gets the number of external workbooks in the collection.</para>
      </summary>
      <value>An integer specifying the number of external workbooks in the collection.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ExternalWorkbookCollection.IndexOf(DevExpress.Spreadsheet.ExternalWorkbook)">
      <summary>
        <para>Returns the index of the specified item in the collection.</para>
      </summary>
      <param name="item">An <see cref="T:DevExpress.Spreadsheet.ExternalWorkbook"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the item position within the collection. &#0045;1 if the item doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ExternalWorkbookCollection.Replace(System.Int32,DevExpress.Spreadsheet.ExternalWorkbook,System.String)">
      <summary>
        <para>Replaces an element with the specified index with a specified element.</para>
      </summary>
      <param name="itemIndex">An integer that is the index in the collection.</param>
      <param name="newItem">An <see cref="T:DevExpress.Spreadsheet.ExternalWorkbook"/> object that is the new element to insert into the collection.</param>
      <param name="alias">A <see cref="T:System.String"/> value specifying the custom workbook name that can be used in external references.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ExternalWorkbookCollection.Replace(System.Int32,DevExpress.Spreadsheet.ExternalWorkbook)">
      <summary>
        <para>Replaces an element with the specified index with a specified element.</para>
      </summary>
      <param name="itemIndex">An integer that is the index in the collection.</param>
      <param name="newItem">An <see cref="T:DevExpress.Spreadsheet.ExternalWorkbook"/> object that is the new element to insert into the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ExternalWorksheet">
      <summary>
        <para>A worksheet contained in an external workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExternalWorksheet.DefinedNames">
      <summary>
        <para>Gets a collection of defined names for the external worksheet.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Spreadsheet.ExternalDefinedName"/> objects.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ExternalWorksheet.GetCellValue(System.Int32,System.Int32)">
      <summary>
        <para>Obtains the cell value for the specified cell.</para>
      </summary>
      <param name="columnIndex">An integer that is the column index of a cell.</param>
      <param name="rowIndex">An integer that is the row index of a cell.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the value of the specified cell.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ExternalWorksheet.Name">
      <summary>
        <para>Gets the name of the external worksheet.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the worksheet name.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Fill">
      <summary>
        <para>Contains the cell background attributes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Fill.BackgroundColor">
      <summary>
        <para>Gets or sets the cell background color.</para>
      </summary>
      <value>The cell background color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Fill.FillType">
      <summary>
        <para>Gets or sets the fill type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FillType"/> enumeration member. Default is Pattern.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Fill.Gradient">
      <summary>
        <para>Provides access to an object containing gradient characteristics.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.GradientFill"/> object that contains all gradient characteristics.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Fill.PatternColor">
      <summary>
        <para>Gets or sets the cell shading color.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> value that is the cell shading color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Fill.PatternType">
      <summary>
        <para>Gets or sets the cell background pattern.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PatternType"/> enumeration member that specifies the pattern for the cell shading. Default is None.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.FillType">
      <summary>
        <para>Lists fill types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FillType.Gradient">
      <summary>
        <para>The background is painted using a color gradient.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FillType.Pattern">
      <summary>
        <para>The background is painted using a pattern.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.FilterComparisonOperator">
      <summary>
        <para>Lists comparison operators used in a custom filter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterComparisonOperator.Equal">
      <summary>
        <para>Filters values that are equal to a specified criterion value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterComparisonOperator.GreaterThan">
      <summary>
        <para>Filters values that are greater than a specified criterion value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterComparisonOperator.GreaterThanOrEqual">
      <summary>
        <para>Filters values that are greater than or equal to a specified criterion value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterComparisonOperator.LessThan">
      <summary>
        <para>Filters values that are less than a specified criterion value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterComparisonOperator.LessThanOrEqual">
      <summary>
        <para>Filters values that are less than or equal to a specified criterion value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterComparisonOperator.NotEqual">
      <summary>
        <para>Filters values that are not equal to a specified criterion value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.FilterCriteria">
      <summary>
        <para>Provides information on multiple values and groups of dates by which to filter.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.FilterCriteria.DateGroupings">
      <summary>
        <para>Provides access to a collection of criteria for the date values.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Spreadsheet.DateGrouping"/> items.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FilterCriteria.FilterByBlanks">
      <summary>
        <para>Gets whether blank cells are included in the filtered set.</para>
      </summary>
      <value>true to filter blank cells; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FilterCriteria.Filters">
      <summary>
        <para>Gets cell values which are filtered out when a filter is applied.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object containing values used in a filter.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.FilterType">
      <summary>
        <para>Lists types of filters available for the AutoFilter functionality.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterType.CustomFilter">
      <summary>
        <para>Specifies the custom filter based on a comparison operator.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterType.DynamicFilter">
      <summary>
        <para>Specifies the dynamic filter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterType.FilterCriteria">
      <summary>
        <para>Specifies the filter by values and date intervals.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterType.IconFilter">
      <summary>
        <para>Specifies the filter by cell icon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterType.None">
      <summary>
        <para>The filter is not applied.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FilterType.Top10Filter">
      <summary>
        <para>Specifies the &quot;Top 10&quot; filter.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.FilterValue">
      <summary>
        <para>A value or values used in a filter criterion.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.FilterValue.FilterByBlank">
      <summary>
        <para>Gets a special value representing a blank cell for use in a filter criteria.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.FilterValue.FromDateTime(System.DateTime,System.Boolean)">
      <summary>
        <para>Converts the <see cref="T:System.DateTime"/> object to a filter value using the specified date system.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> object that specifies a date and time value to be converted to a filter value.</param>
      <param name="use1904DateSystem">true, to use the 1904 date system; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies a value for the filter criteria.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.FilterValue.op_Implicit(DevExpress.Spreadsheet.CellValue)~DevExpress.Spreadsheet.FilterValue">
      <summary>
        <para>Implicitly converts a cell value to a filter value.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> to be converted to a <see cref="T:DevExpress.Spreadsheet.FilterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.FilterValue.op_Implicit(DevExpress.Spreadsheet.CellValue[])~DevExpress.Spreadsheet.FilterValue">
      <summary>
        <para>Implicitly converts an array of cell values to a <see cref="T:DevExpress.Spreadsheet.FilterValue"/>.</para>
      </summary>
      <param name="values">An array of <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects to be converted to a <see cref="T:DevExpress.Spreadsheet.FilterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.FilterValue.op_Implicit(System.Boolean)~DevExpress.Spreadsheet.FilterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Boolean"/> value to a filter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Boolean"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.FilterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.FilterValue.op_Implicit(System.Char)~DevExpress.Spreadsheet.FilterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Char"/> value to a filter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Char"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.FilterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.FilterValue.op_Implicit(System.DateTime)~DevExpress.Spreadsheet.FilterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.DateTime"/> object to a filter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.FilterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.FilterValue.op_Implicit(System.Double)~DevExpress.Spreadsheet.FilterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Double"/> value to a filter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Double"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.FilterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.FilterValue.op_Implicit(System.Int32)~DevExpress.Spreadsheet.FilterValue">
      <summary>
        <para>Implicitly converts an <see cref="T:System.Int32"/> value to a filter value.</para>
      </summary>
      <param name="value">An <see cref="T:System.Int32"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.FilterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.FilterValue.op_Implicit(System.String)~DevExpress.Spreadsheet.FilterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.String"/> value to a filter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.String"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.FilterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.FilterValue.Values">
      <summary>
        <para>Gets an array of strings that corresponds to the cell values by which a filtering is performed.</para>
      </summary>
      <value>A <see cref="T:System.String"/>[] object that is the array of string values which are the filter criteria.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.FloatingObject">
      <summary>
        <para>A base interface for floating objects in a worksheet (pictures, charts and comments).</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.BottomRightCell">
      <summary>
        <para>Gets or sets a cell where the bottom right corner of a floating object is located.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the cell containing the floating object’s bottom right corner.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.Height">
      <summary>
        <para>Gets or sets the height of the floating object.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the height measured in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.Left">
      <summary>
        <para>Gets or sets the distance from the left edge of the worksheet to the top left corner of the floating object.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the distance from the left edge of the worksheet in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.LockAspectRatio">
      <summary>
        <para>Gets or sets whether the floating object retains its original proportions after resizing.</para>
      </summary>
      <value>true, to retain the original proportions; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.FloatingObject.Move(System.Single,System.Single)">
      <summary>
        <para>Moves a floating object by a specified offset.</para>
      </summary>
      <param name="rowOffset">A <see cref="T:System.Single"/> that is the horizontal (column) offset measured in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</param>
      <param name="columnOffset">A <see cref="T:System.Single"/> that is the vertical (row) offset measured in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.OffsetX">
      <summary>
        <para>Gets a distance from the top left corner of the floating to the left edge of the cell where the top left corner of the floating object is located.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> that is the horizontal offset measured in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.OffsetY">
      <summary>
        <para>Gets a distance from the top left corner of the floating object to the top edge of the cell where the top left corner of the floating object is located.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> that is the vertical offset measured in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.Placement">
      <summary>
        <para>Gets or sets the behavior of the floating object regarding the cells below.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Placement"/> enumeration value specifying how the floating object should behave when the underlying cells are resized or moved.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.Top">
      <summary>
        <para>Gets or sets the distance from the top edge of the worksheet to the top left corner of the floating object.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.TopLeftCell">
      <summary>
        <para>Gets or sets a cell where the top left corner of a floating object is located.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the cell containing the floating object’s top left corner.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.FloatingObject.Width">
      <summary>
        <para>Gets or sets the width of the floating object.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the width measured in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.FontSchemeStyles">
      <summary>
        <para>Lists values used to specify the font scheme.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FontSchemeStyles.Major">
      <summary>
        <para>Specifies the major font of the document theme.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FontSchemeStyles.Minor">
      <summary>
        <para>Specifies the minor font of the document theme.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FontSchemeStyles.None">
      <summary>
        <para>Specifies that the given font is not a theme font.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formatting">
      <summary>
        <para>Provides access to cell format characteristics.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formatting.Alignment">
      <summary>
        <para>Provides access to cell alignment.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Alignment"/> object providing properties to specify cell alignment settings.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formatting.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.Spreadsheet.Formatting"></see> object by preventing visual updates until the EndUpdate method is called.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formatting.Borders">
      <summary>
        <para>Provides access to cell borders.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Borders"/> object that provides access to the borders of a cell or cell range.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formatting.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Spreadsheet.Formatting"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formatting.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.Formatting"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true, if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.Formatting"/> instance; otherwise false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formatting.Fill">
      <summary>
        <para>Provides access to cell background.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Fill"/> object providing properties to change cell background characteristics.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formatting.Flags">
      <summary>
        <para>Provides access to flags that control which cell format attributes are specified by the applied cell style and which ones are specified by direct cell formatting.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.StyleFlags"/> object providing access to flags, each of which corresponds to a specific group of format attributes.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formatting.Font">
      <summary>
        <para>Provides access to the cell font.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFont"/> object providing properties to change cell font attributes.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formatting.NumberFormat">
      <summary>
        <para>Specifies a number format for a numeric cell value in the invariant culture.</para>
      </summary>
      <value>The number format in the invariant (English) culture.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formatting.NumberFormatLocal">
      <summary>
        <para>Specifies a number format for a numeric cell value based on the current (local) culture.</para>
      </summary>
      <value>The local number format.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formatting.Protection">
      <summary>
        <para>Provides access to options which are in effect when the worksheet is protected.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Protection"/> object providing options for protected cells.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.FormulaExpressionConditionalFormatting">
      <summary>
        <para>Represents a conditional formatting rule that uses a formula as a formatting criteria.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.FormulaExpressionConditionalFormatting.Expression">
      <summary>
        <para>Gets or sets a formula used as the formatting criteria in the conditional formatting rule.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that represents a formula for conditional formatting.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.FormulaReplacementMode">
      <summary>
        <para>Specifies how to replace copied formulas if they contain references to worksheets that do not exist in the destination workbook.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FormulaReplacementMode.KeepFormulaValuesOnly">
      <summary>
        <para>Copies only calculated values for formulas with external references.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.FormulaReplacementMode.UseExternalReferences">
      <summary>
        <para>Converts references to other sheets in the source workbook to external references.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Spreadsheet.Formulas">
      <summary>
        <para>Contains classes, interfaces and enumerations required to use the SpreadsheetControl’s formula engine.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.AdditionExpression">
      <summary>
        <para>An arithmetic addition operation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.AdditionExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.AdditionExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.AdditionExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.AdditionExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.AdditionExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.AdditionExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.AdditionExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.AdditionExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.AdditionExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.AdditionExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “+” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.AdditionExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression">
      <summary>
        <para>An array constant operand.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression.#ctor(DevExpress.Spreadsheet.CellValue[0:,0:])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression"/> class with the specified settings.</para>
      </summary>
      <param name="values">Two-dimensional array of <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.ArrayConstantExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression.Values">
      <summary>
        <para>Gets or sets the array constant - that is, the array of values.</para>
      </summary>
      <value>A two-dimensional array of <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ArrayConstantExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.BinaryOperatorExpression">
      <summary>
        <para>A base class for binary operator expressions.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.BinaryOperatorExpression.LeftExpression">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</para>
      </summary>
      <value>An expression that is the left operand.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.BinaryOperatorExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>A string that designates an operator.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.BinaryOperatorExpression.RightExpression">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</para>
      </summary>
      <value>An expression that is the left operand.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.CellArea">
      <summary>
        <para>Defines the range of cells in a worksheet. Used in cell reference expressions contained in parsed formulas.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellArea.#ctor(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> class with the specified settings.</para>
      </summary>
      <param name="sourceRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the cell range which the CellArea represents.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellArea.#ctor(DevExpress.Spreadsheet.Formulas.CellReferencePosition,DevExpress.Spreadsheet.Formulas.CellReferencePosition)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> class with the specified settings.</para>
      </summary>
      <param name="topLeft">A <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> object that specifies the top left cell of an area.</param>
      <param name="bottomRight">A <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> object that specifies the bottom right cell of an area.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellArea.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> class with the specified settings.</para>
      </summary>
      <param name="leftColumnIndex">An integer that is the index of the leftmost column in the range which the CellArea represents.</param>
      <param name="topRowIndex">An integer that is the index of the top row in the range which the CellArea represents.</param>
      <param name="rightColumnIndex">An integer that is the index of the rightmost column in the range which the CellArea represents.</param>
      <param name="bottomRowIndex">An integer that is the index of the bottom row in the range which the CellArea represents.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellArea.BottomRight">
      <summary>
        <para>Gets or sets the position of the bottom-right corner of the rectangular cell area.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> object that specifies the cell coordinate.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellArea.BottomRowIndex">
      <summary>
        <para>Gets or sets the index of the bottom row of the cell area.</para>
      </summary>
      <value>An integer that is the row index.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellArea.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> object which is a copy of the current object.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellArea.ColumnCount">
      <summary>
        <para>Gets the number of columns in the cell area.</para>
      </summary>
      <value>An integer that is the number of columns.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellArea.CopyFrom(DevExpress.Spreadsheet.Formulas.CellArea)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellArea.LeftColumnIndex">
      <summary>
        <para>Gets or sets the index of the left column in the cell area.</para>
      </summary>
      <value>An integer that is the column index.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellArea.Normalize">
      <summary>
        <para>Validates the settings of the CellArea object and corrects them if possible.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellArea.RightColumnIndex">
      <summary>
        <para>Gets or sets the index of the rightmost column in the cell area.</para>
      </summary>
      <value>An integer that is the column index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellArea.RowCount">
      <summary>
        <para>Gets the number of rows in the cell area.</para>
      </summary>
      <value>An integer that is the number of rows.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellArea.TopLeft">
      <summary>
        <para>Gets or sets the position of the top left corner of the rectangular cell area.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> object that specifies the cell coordinate.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellArea.TopRowIndex">
      <summary>
        <para>Gets or sets the index of the top row in the cell area.</para>
      </summary>
      <value>An integer that is the row index.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellArea.ToString">
      <summary>
        <para>Gets reference string to a range represented by the CellArea object.</para>
      </summary>
      <returns>A string reference to a cell range in <see cref="F:DevExpress.Spreadsheet.ReferenceStyle.A1"/> style.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.CellCalculationArgs">
      <summary>
        <para>Provides data for the <see cref="M:DevExpress.XtraSpreadsheet.Services.ICustomCalculationService.OnBeginCellCalculation(DevExpress.Spreadsheet.Formulas.CellCalculationArgs)"/> method.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellCalculationArgs.#ctor(DevExpress.Spreadsheet.CellKey,DevExpress.Spreadsheet.CellValue)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellCalculationArgs"/> class with the specified settings.</para>
      </summary>
      <param name="cellKey">A <see cref="T:DevExpress.Spreadsheet.CellKey"/> object that uniquely identifies a cell in a workbook.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the cell content.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellCalculationArgs.CellKey">
      <summary>
        <para>Gets the cell key that uniquely identifies a cell in a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellKey"/> object to identify a cell.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellCalculationArgs.Column">
      <summary>
        <para>Gets the index of a column containing the current cell.</para>
      </summary>
      <value>An integer that is the column index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellCalculationArgs.Handled">
      <summary>
        <para>Gets or sets whether to perform cell calculation.</para>
      </summary>
      <value>True to not calculate the cell; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellCalculationArgs.Row">
      <summary>
        <para>Gets the index of a row containing the current cell.</para>
      </summary>
      <value>An integer that is the row index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellCalculationArgs.SheetId">
      <summary>
        <para>Returns the ID of the worksheet that contains the current cell.</para>
      </summary>
      <value>An integer that is the worksheet’s ID.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellCalculationArgs.Value">
      <summary>
        <para>Gets or sets the content of a cell for which calculation starts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the cell content.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression">
      <summary>
        <para>Invalid Cell Reference error (#REF!).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression.#ctor(DevExpress.Spreadsheet.Formulas.SheetReference)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression"/> class with the specified settings.</para>
      </summary>
      <param name="sheetReference">A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object that specifies a reference to a worksheet.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.CellReferenceExpression">
      <summary>
        <para>A cell range reference used in parsed formula.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferenceExpression.#ctor(DevExpress.Spreadsheet.Formulas.CellArea,DevExpress.Spreadsheet.Formulas.SheetReference)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferenceExpression"/> class with the specified settings.</para>
      </summary>
      <param name="rangeArea">A <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> object that specifies where cells are located.</param>
      <param name="sheetReference">A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object that specifies a worksheet to which cells belong.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferenceExpression.#ctor(DevExpress.Spreadsheet.Formulas.CellArea)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferenceExpression"/> class with the specified settings.</para>
      </summary>
      <param name="rangeArea">A <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> object that specifies where cells are located.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellReferenceExpression.CellArea">
      <summary>
        <para>Gets or sets the cell area referenced by the expression.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.CellArea"/> object that specifies the referenced range.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferenceExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferenceExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferenceExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferenceExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.CellReferenceExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferenceExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferenceExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferenceExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition">
      <summary>
        <para>Defines the column, row and the reference type (relative or absolute).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferencePosition.#ctor(System.Int32,System.Int32,DevExpress.Spreadsheet.Formulas.PositionType,DevExpress.Spreadsheet.Formulas.PositionType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> class with the specified settings.</para>
      </summary>
      <param name="column">An integer that is the index of the column.</param>
      <param name="row">An integer that is the index of the row.</param>
      <param name="columnType">A <see cref="T:DevExpress.Spreadsheet.Formulas.PositionType"/> enumeration value.</param>
      <param name="rowType">A <see cref="T:DevExpress.Spreadsheet.Formulas.PositionType"/> enumeration value.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferencePosition.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> class with the specified settings.</para>
      </summary>
      <param name="column">An integer that is the index of the column.</param>
      <param name="row">An integer that is the index of the row.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellReferencePosition.Column">
      <summary>
        <para>Gets the column index of the referenced cell.</para>
      </summary>
      <value>An integer that is the column index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellReferencePosition.ColumnType">
      <summary>
        <para>Gets the reference type for the column in the cell reference.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.PositionType"/> enumeration that identifies the reference type used for the cell position.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferencePosition.Equals(DevExpress.Spreadsheet.Formulas.CellReferencePosition)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> instance.</para>
      </summary>
      <param name="other">The <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> to compare to the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferencePosition.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> instance.</para>
      </summary>
      <param name="obj">The object to compare to the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferencePosition.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> object.</para>
      </summary>
      <returns>An integer value that is the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellReferencePosition.InvalidValue">
      <summary>
        <para>Gets a specific position that is considered invalid.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> object with properties set to extreme values so that it does not represent any real position.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellReferencePosition.Row">
      <summary>
        <para>Gets the row index of the referenced cell.</para>
      </summary>
      <value>An integer that is the row index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.CellReferencePosition.RowType">
      <summary>
        <para>Gets the reference type for the row in the cell reference.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.PositionType"/> enumeration that identifies the reference type used for cell position.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferencePosition.ToString">
      <summary>
        <para>Returns the string cell reference.</para>
      </summary>
      <returns>A string that is the cell reference in <see cref="F:DevExpress.Spreadsheet.ReferenceStyle.A1"/> style.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.CellReferencePosition.TryCreate(System.String)">
      <summary>
        <para>Creates a CellReferencePosition object from a string reference and validates it.</para>
      </summary>
      <param name="reference">A string cell reference.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.CellReferencePosition"/> object if it is successfully created and vaildated; otherwise, <see cref="P:DevExpress.Spreadsheet.Formulas.CellReferencePosition.InvalidValue"/>.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.ConcatenateExpression">
      <summary>
        <para>An ampersand operator used to concatenate strings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ConcatenateExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ConcatenateExpression"/> class with the specified settings.</para>
      </summary>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ConcatenateExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.ConcatenateExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.ConcatenateExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ConcatenateExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.ConcatenateExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ConcatenateExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.ConcatenateExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ConcatenateExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “&amp;” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ConcatenateExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.ConstantExpression">
      <summary>
        <para>A constant value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ConstantExpression.#ctor(DevExpress.Spreadsheet.CellValue)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ConstantExpression"/> class with the specified settings.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object representing a constant value.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ConstantExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.ConstantExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.ConstantExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ConstantExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.ConstantExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ConstantExpression"/> class.</para>
        <para>A <see cref="T:DevExpress.Spreadsheet.Formulas.ConstantExpression"/> class instance, representing the source object for copying.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.ConstantExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ConstantExpression.Value">
      <summary>
        <para>Gets or sets the value of the constant.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the constant.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ConstantExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression">
      <summary>
        <para>A defined name.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression.#ctor(System.String,DevExpress.Spreadsheet.Formulas.SheetReference)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression"/> class with the specified settings.</para>
      </summary>
      <param name="definedName">A string that is the defined name.</param>
      <param name="sheetReference">A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object that specifies a worksheet to which the defined name belongs.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression"/> class with the specified settings.</para>
      </summary>
      <param name="definedName">A string that is the defined name.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression.DefinedName">
      <summary>
        <para>Gets or sets the defined name used in an expression.</para>
      </summary>
      <value>A string that is the worksheet defined name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.DivisionExpression">
      <summary>
        <para>A division operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.DivisionExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.DivisionExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.DivisionExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.DivisionExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.DivisionExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.DivisionExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.DivisionExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.DivisionExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.DivisionExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.DivisionExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “/“ string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.DivisionExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.EqualityExpression">
      <summary>
        <para>An equality operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.EqualityExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.EqualityExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.EqualityExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.EqualityExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.EqualityExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.EqualityExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.EqualityExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.EqualityExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.EqualityExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.EqualityExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “=” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.EqualityExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.Expression">
      <summary>
        <para>A base class for an expression.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.Expression.BracketsCount">
      <summary>
        <para>Gets or sets the number of pairs of parentheses in which the expression is enclosed.</para>
      </summary>
      <value>An integer that is the number of pairs of parentheses.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.Expression.BuildExpressionString(System.Text.StringBuilder,DevExpress.Spreadsheet.IWorkbook,DevExpress.Spreadsheet.Formulas.IExpressionContext)">
      <summary>
        <para>Appends the expression string to the specified StringBuilder object.</para>
      </summary>
      <param name="builder">A <see cref="T:System.Text.StringBuilder"/> object that holds a string to append.</param>
      <param name="workbook">An <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> object used for creating a string from an expression tree node.</param>
      <param name="context">A <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> object specifying the formula context.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.Expression.BuildExpressionString(System.Text.StringBuilder,DevExpress.Spreadsheet.IWorkbook)">
      <summary>
        <para>Appends the expression string to the specified StringBuilder object.</para>
      </summary>
      <param name="builder">A <see cref="T:System.Text.StringBuilder"/> object that holds a string to append.</param>
      <param name="workbook">An <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> object used for creating a string from an expression tree node.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.Expression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.ExpressionContext">
      <summary>
        <para>Contains formula environment information - the cell or range, the worksheet, the current culture, the reference style, and indicates whether the formula is an array formula.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionContext.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionContext.#ctor(System.Int32,System.Int32,DevExpress.Spreadsheet.Worksheet,System.Globalization.CultureInfo,DevExpress.Spreadsheet.ReferenceStyle,DevExpress.Spreadsheet.Formulas.ExpressionStyle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> class with the specified settings.</para>
      </summary>
      <param name="column">An integer that is the column index of a cell containing the formula.</param>
      <param name="row">An integer that is the row index of a cell containing the formula.</param>
      <param name="sheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the worksheet containing the formula.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object specifying culture-specific settings.</param>
      <param name="referenceStyle">A <see cref="T:DevExpress.Spreadsheet.ReferenceStyle"/> enumeration that specifies the cell reference style.</param>
      <param name="expressionStyle">An <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionStyle"/> enumeration that specifies whether the formula works with a series of data values.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionContext.#ctor(System.Int32,System.Int32,DevExpress.Spreadsheet.Worksheet,System.Globalization.CultureInfo,System.Boolean,DevExpress.Spreadsheet.ReferenceStyle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> class with the specified settings.</para>
      </summary>
      <param name="column">An integer that is the column index of a cell containing the formula.</param>
      <param name="row">An integer that is the row index of a cell containing the formula.</param>
      <param name="sheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the worksheet containing the formula.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object specifying culture-specific settings.</param>
      <param name="isArrayFormula">true, if the formula is an array formula; otherwise, false.</param>
      <param name="referenceStyle">A <see cref="T:DevExpress.Spreadsheet.ReferenceStyle"/> enumeration that specifies the cell reference style.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionContext.#ctor(System.Int32,System.Int32,DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> class with the specified settings.</para>
      </summary>
      <param name="column">An integer that is the column index of a cell containing the formula.</param>
      <param name="row">An integer that is the row index of a cell containing the formula.</param>
      <param name="sheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the worksheet containing the formula.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ExpressionContext.Column">
      <summary>
        <para>Gets or sets the column of a cell containing the formula.</para>
      </summary>
      <value>An integer that is the column index of a cell containing the formula.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ExpressionContext.Culture">
      <summary>
        <para>Gets or sets the culture setting of a formula environment.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object specifying culture-specific settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ExpressionContext.ExpressionStyle">
      <summary>
        <para>Gets or sets the worksheet-specific parameter which determines how the formula is interpreted and calculated.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionStyle"/> enumeration member specifying how the formula is interpreted.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ExpressionContext.IsArrayFormula">
      <summary>
        <para>Gets or sets whether the expression is an array formula.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object specifying culture-specific settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ExpressionContext.ReferenceStyle">
      <summary>
        <para>Gets or sets the cell reference style used in the expression.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ReferenceStyle"/> enumeration that specifies the cell reference style.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ExpressionContext.Row">
      <summary>
        <para>Gets or sets the row of a cell containing the formula.</para>
      </summary>
      <value>An integer that is the row index of a cell containing the formula.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ExpressionContext.Sheet">
      <summary>
        <para>Gets or sets a worksheet that contains a formula.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the worksheet containing the formula.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.ExpressionStyle">
      <summary>
        <para>Lists possible ways to interpret and calculate a formula in a worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.ExpressionStyle.Array">
      <summary>
        <para>Formula is calculated as an array formula in a worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.ExpressionStyle.DefinedName">
      <summary>
        <para>The formula works with an array of values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.ExpressionStyle.Normal">
      <summary>
        <para>Formula is calculated as if it is entered in the worksheet cell in the usual way. It does not operate with arrays to return arrays.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.ExpressionVisitor">
      <summary>
        <para>A base class for implementing a custom visitor to traverse the expression tree.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.AdditionExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.ArrayConstantExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.CellErrorReferenceExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.CellReferenceExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.ConcatenateExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.ConstantExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.DefinedNameReferenceExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.DivisionExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.EqualityExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.FunctionExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.FunctionExternalExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.GreaterExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.InequalityExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.LessExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.LessOrEqualExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.MissingArgumentExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.MultiplicationExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.PercentExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.PowerExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.RangeExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.RangeUnionExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.SubtractionExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.TableReferenceExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.UnaryMinusExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.UnaryPlusExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.Visit(DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an expression of specific type.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.VisitBinary(DevExpress.Spreadsheet.Formulas.BinaryOperatorExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting a binary expression.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.VisitFunction(DevExpress.Spreadsheet.Formulas.FunctionExpressionBase)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting a call to function in the expression.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ExpressionVisitor.VisitUnary(DevExpress.Spreadsheet.Formulas.UnaryOperatorExpression)">
      <summary>
        <para>Override this method in a class descendant. It is called when visiting an unary expression.</para>
      </summary>
      <param name="expression">A visited expression.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.FormulaEngine">
      <summary>
        <para>An object that provides the capability to calculate and parse worksheet formulas.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FormulaEngine.Evaluate(System.String,DevExpress.Spreadsheet.Formulas.ExpressionContext)">
      <summary>
        <para>Evaluates the specified formula using the specified context.</para>
      </summary>
      <param name="formula">A string that is the formula to evaluate. Note that the leading equal sign “=” in the formula is optional and can be omitted.</param>
      <param name="context">An <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> object providing information on the cell for which a formula will be evaluated.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object containing the result of the formula calculation.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FormulaEngine.Evaluate(System.String)">
      <summary>
        <para>Evaluates the specified formula using default context.</para>
      </summary>
      <param name="formula">A string that is the formula to evaluate. Note that the leading equal sign “=” in the formula is optional and can be omitted.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object containing the result of the formula calculation.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FormulaEngine.Parse(System.String,DevExpress.Spreadsheet.Formulas.ExpressionContext)">
      <summary>
        <para>Parses the specified formula in the specified context.</para>
      </summary>
      <param name="formula">A string that is the expression to parse. The leading equals “=” symbol is optional.</param>
      <param name="context">A <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> object specifying the context for parsing a formula.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.ParsedExpression"/> object providing access to the expression tree.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FormulaEngine.Parse(System.String)">
      <summary>
        <para>Parses the specified formula using the default context.</para>
      </summary>
      <param name="formula">A string that is the expression to parse. The leading equals “=” symbol is optional.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.ParsedExpression"/> object providing access to the expression tree.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.FunctionExpression">
      <summary>
        <para>A built-in or user-defined worksheet function.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FunctionExpression.#ctor(DevExpress.Spreadsheet.Functions.IFunction,System.Collections.Generic.IList{DevExpress.Spreadsheet.Formulas.IExpression})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExpression"/> class with the specified settings.</para>
      </summary>
      <param name="function">An <see cref="T:DevExpress.Spreadsheet.Functions.IFunction"/> object that is the worksheet function.</param>
      <param name="innerExpressions">A list of <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> objects which are function arguments.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FunctionExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FunctionExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.FunctionExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.FunctionExpression.Function">
      <summary>
        <para>Gets or sets the function used in an expression.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Functions.IFunction"/> descendant that is the function used in the formula.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FunctionExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.FunctionExpressionBase">
      <summary>
        <para>A base class for the functions in formulas.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.FunctionExpressionBase.InnerExpressions">
      <summary>
        <para>Gets or sets the expressions used as function arguments.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> objects which are the function arguments.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression">
      <summary>
        <para>An external function.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression.#ctor(System.String,DevExpress.Spreadsheet.Formulas.SheetReference,System.Collections.Generic.IList{DevExpress.Spreadsheet.Formulas.IExpression})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression"/> class with the specified settings.</para>
      </summary>
      <param name="functionName">A string that is the name of external function.</param>
      <param name="sheetReference">A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object that specifies a worksheet.</param>
      <param name="innerExpressions">A list of <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> objects which are function arguments.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression.#ctor(System.String,DevExpress.Spreadsheet.Formulas.SheetReference)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression"/> class with the specified settings.</para>
      </summary>
      <param name="functionName">A string that is the name of an external function.</param>
      <param name="sheetReference">A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object that specifies a worksheet.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.FunctionExternalExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression.FunctionName">
      <summary>
        <para>Gets or sets the name of the external function used in an expression.</para>
      </summary>
      <value>A string that is the function’s name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression.SheetReference">
      <summary>
        <para>Gets or sets the worksheet reference used to reference an external function.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object specifying the worksheet containing a function.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.FunctionExternalExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.GreaterExpression">
      <summary>
        <para>A “Greater than” operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.GreaterExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.GreaterExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.GreaterExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.GreaterExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.GreaterExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “&gt;” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.GreaterExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression">
      <summary>
        <para>A “Greater than or equal” operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “&gt;=” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.GreaterOrEqualExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.IExpression">
      <summary>
        <para>A base interface for expression node.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.IExpression.BracketsCount">
      <summary>
        <para>Gets or sets the number of pairs of parentheses in which the expression is enclosed.</para>
      </summary>
      <value>An integer that is the number of pairs of parentheses.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.IExpression.BuildExpressionString(System.Text.StringBuilder,DevExpress.Spreadsheet.IWorkbook,DevExpress.Spreadsheet.Formulas.IExpressionContext)">
      <summary>
        <para>Appends the expression string to the specified StringBuilder object.</para>
      </summary>
      <param name="builder">A <see cref="T:System.Text.StringBuilder"/> object that holds a string to append.</param>
      <param name="workbook">An <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> object used for creating a string from an expression tree node.</param>
      <param name="context">A <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> object specifying the formula context.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.IExpression.BuildExpressionString(System.Text.StringBuilder,DevExpress.Spreadsheet.IWorkbook)">
      <summary>
        <para>Appends the expression string to the specified StringBuilder object.</para>
      </summary>
      <param name="builder">A <see cref="T:System.Text.StringBuilder"/> object that holds a string to append.</param>
      <param name="workbook">An <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> object used for creating a string from an expression tree node.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.IExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.IExpressionContext">
      <summary>
        <para>A base interface for an expression context.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.IExpressionContext.ExpressionStyle">
      <summary>
        <para>Gets the value that specifies whether the formula should be calculated as an array formula and/or return a series of values.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionStyle"/> enumeration member specifying how the formula is calculated.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.IExpressionContext.IsArrayFormula">
      <summary>
        <para>Gets whether the expression is an array formula.</para>
      </summary>
      <value>true, if the expression is an array formula; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.IExpressionContext.ReferenceStyle">
      <summary>
        <para>Gets the reference style used in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ReferenceStyle"/> enumeration specifying the cell reference style.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.InequalityExpression">
      <summary>
        <para>A inequality operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.InequalityExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.InequalityExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.InequalityExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.InequalityExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.InequalityExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.InequalityExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.InequalityExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.InequalityExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.InequalityExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.InequalityExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “&lt;&gt;” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.InequalityExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.LessExpression">
      <summary>
        <para>A “Less than” operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.LessExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.LessExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.LessExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.LessExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.LessExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.LessExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.LessExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.LessExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.LessExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.LessExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “&lt;” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.LessExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression">
      <summary>
        <para>A “Less than or equal” operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.LessOrEqualExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “&lt;=” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.LessOrEqualExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.MissingArgumentExpression">
      <summary>
        <para>A “Missing argument” error.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.MissingArgumentExpression.Instance">
      <summary>
        <para>Gets the expression of the <see cref="T:DevExpress.Spreadsheet.Formulas.MissingArgumentExpression"/> type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.MissingArgumentExpression"/> instance.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.MissingArgumentExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.MultiplicationExpression">
      <summary>
        <para>A multiplication operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.MultiplicationExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.MultiplicationExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.MultiplicationExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.MultiplicationExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.MultiplicationExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.MultiplicationExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.MultiplicationExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.MultiplicationExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.MultiplicationExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.MultiplicationExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “*” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.MultiplicationExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.ParsedExpression">
      <summary>
        <para>Contains an expression tree and provides methods to handle it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ParsedExpression.#ctor(DevExpress.Spreadsheet.IWorkbook)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.ParsedExpression"/> class with the specified settings.</para>
      </summary>
      <param name="workbook">A <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> object that is the workbook containing the formula being processed.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ParsedExpression.Expression">
      <summary>
        <para>Gets or sets the root expression of the expression tree.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> descendant that is the top level expression in a formula.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ParsedExpression.GetRanges">
      <summary>
        <para>Gets the list of ranges referenced in a formula.</para>
      </summary>
      <returns>A list of <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects which are the ranges referenced in a formula.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ParsedExpression.GetRanges(DevExpress.Spreadsheet.Formulas.IExpressionContext)">
      <summary>
        <para>Gets the list of ranges referenced in a formula.</para>
      </summary>
      <param name="context">An <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> object providing information on the worksheet, cell, formula type and the current culture.</param>
      <returns>A list of <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects which are the ranges referenced in a formula.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ParsedExpression.ToString">
      <summary>
        <para>Builds a string expression from an expression tree.</para>
      </summary>
      <returns>A string expression.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.ParsedExpression.ToString(DevExpress.Spreadsheet.Formulas.IExpressionContext)">
      <summary>
        <para>Builds a string expression from an expression tree.</para>
      </summary>
      <param name="context">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpressionContext"/> object that provides formula context.</param>
      <returns>A string expression.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.PercentExpression">
      <summary>
        <para>A percent operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.PercentExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.PercentExpression"/> class with the specified settings.</para>
      </summary>
      <param name="innerExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.PercentExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.PercentExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.PercentExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.PercentExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.PercentExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.PercentExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.PercentExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.PercentExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “%” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.PercentExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.PositionType">
      <summary>
        <para>Lists types of cell references in formulas.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.PositionType.Absolute">
      <summary>
        <para>A row or a column in a cell reference is marked as fixed (absolute cell reference).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.PositionType.Relative">
      <summary>
        <para>A row or a column in a cell reference is marked as adjustable (relative cell reference).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.PowerExpression">
      <summary>
        <para>An exponentiation operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.PowerExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.PowerExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.PowerExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.PowerExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.PowerExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.PowerExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.PowerExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.PowerExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.PowerExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.PowerExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “^” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.PowerExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.RangeExpression">
      <summary>
        <para>An operator that produces a reference to all cells located between the cells specified as operands.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.RangeExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.RangeExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.RangeExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.RangeExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.RangeExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.RangeExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.RangeExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “:” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression">
      <summary>
        <para>An operator that produces a reference to cells that are included in both references specified as operands.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “ “ (space) string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeIntersectionExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.RangeUnionExpression">
      <summary>
        <para>An operator that produces a reference to cells that are included in both references specified as operands.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeUnionExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.RangeUnionExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeUnionExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.RangeUnionExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.RangeUnionExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeUnionExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.RangeUnionExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.RangeUnionExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.RangeUnionExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeUnionExpression.GetOperatorText(DevExpress.XtraSpreadsheet.Model.WorkbookDataContext)">
      <summary>
        <para>Gets the operator symbol specific to the current worksheet and the culture.</para>
      </summary>
      <param name="context">An <see cref="T:DevExpress.Spreadsheet.Formulas.ExpressionContext"/> object providing information on the formula environment.</param>
      <returns>A string that is the operator symbol.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.RangeUnionExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “,” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.RangeUnionExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.ReferenceExpression">
      <summary>
        <para>A base class for expressions that reference cells.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.ReferenceExpression.SheetReference">
      <summary>
        <para>Gets or sets the worksheet reference.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object that is the worksheet reference.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.SheetReference">
      <summary>
        <para>A worksheet reference in a formula.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.SheetReference.#ctor(DevExpress.Spreadsheet.IWorkbook,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> class with the specified settings.</para>
      </summary>
      <param name="workbook">An <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> object that is the workbook containing the specified worksheet.</param>
      <param name="startSheetName">A string that is the name of the worksheet. For 3D references, this is the start reference.</param>
      <param name="endSheetName">A string that is the name of the worksheet. Valid only for 3D references where it is the end reference.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.SheetReference.#ctor(DevExpress.Spreadsheet.IWorkbook,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> class with the specified settings.</para>
      </summary>
      <param name="workbook">An <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> object that is the workbook containing the specified worksheet.</param>
      <param name="sheetName">A string that is the name of the worksheet.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.SheetReference.#ctor(DevExpress.Spreadsheet.IWorkbook)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> class with the specified settings.</para>
      </summary>
      <param name="workbook">An <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> object that is the workbook containing the specified worksheet.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.SheetReference.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.SheetReference.CopyFrom(DevExpress.Spreadsheet.Formulas.SheetReference)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.SheetReference.EndSheetName">
      <summary>
        <para>Gets or sets an end worksheet name for the 3D reference.</para>
      </summary>
      <value>A string that is the name of the worksheet. For 3D references, this is the end reference.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.SheetReference.ExternalLinkName">
      <summary>
        <para>Gets or sets the name of the workbook used in external reference.</para>
      </summary>
      <value>A string that is the name of the workbook. The name may include the entire workbook path.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.SheetReference.StartSheetName">
      <summary>
        <para>Gets or sets a worksheet name for the external or 3D reference.</para>
      </summary>
      <value>A string that is the name of the external worksheet. For 3D references, this is the start worksheet reference.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.SheetReference.Type">
      <summary>
        <para>Gets or sets the type of the worksheet reference.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> enumeration member that indicates the reference type.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.SheetReferenceType">
      <summary>
        <para>Lists types of the worksheet reference.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.SheetReferenceType.CurrentWorkbook">
      <summary>
        <para>A type that is used sparsely. A reference of this type can be created in Microsoft Excel for a defined name. It is in the form “temp.xslx!DefinedName” where “temp.xslx” is the name of the file containing the reference.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.SheetReferenceType.CurrentWorksheet">
      <summary>
        <para>Reference type that is specific for defined names. For example, if the <see cref="P:DevExpress.Spreadsheet.DefinedName.RefersTo"/> property is the “!$D$6” string, then the type of this reference is the CurrentWorksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.SheetReferenceType.External">
      <summary>
        <para>A reference to an external worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.SheetReferenceType.Invalid">
      <summary>
        <para>Invalid sheet reference in expressions used in defined names.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.SheetReferenceType.Simple">
      <summary>
        <para>A reference that contains the sheet name and the cell reference. A sheet name is the name of the sheet in the current workbook, for example “Sheet1!A2”.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.SubtractionExpression">
      <summary>
        <para>A subtraction operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.SubtractionExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression,DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.SubtractionExpression"/> class with the specified settings.</para>
      </summary>
      <param name="leftExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the left operand.</param>
      <param name="rightExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the right operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.SubtractionExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.SubtractionExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.SubtractionExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.SubtractionExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.SubtractionExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.SubtractionExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.SubtractionExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.SubtractionExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “-“ string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.SubtractionExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.TableReferenceExpression">
      <summary>
        <para>A structured reference used for worksheet tables.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.#ctor(System.String,DevExpress.Spreadsheet.Formulas.SheetReference)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.TableReferenceExpression"/> class with the specified settings.</para>
      </summary>
      <param name="tableName">A string that is the name of the table.</param>
      <param name="sheetReference">A <see cref="T:DevExpress.Spreadsheet.Formulas.SheetReference"/> object that specifies a worksheet.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.TableReferenceExpression"/> class with the specified settings.</para>
      </summary>
      <param name="tableName">A string that is the name of the table.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.TableReferenceExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.TableReferenceExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.ColumnEnd">
      <summary>
        <para>Gets or sets the name of the rightmost column in a contiguous area.</para>
      </summary>
      <value>A string that is the column name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.ColumnsDefined">
      <summary>
        <para>Gets whether column names are specified in the table reference.</para>
      </summary>
      <value>true, if column names are in the table reference; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.ColumnStart">
      <summary>
        <para>Gets or sets the name of the leftmost column in a contiguous area of the table.</para>
      </summary>
      <value>A string that is the column name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.TableReferenceExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.TableReferenceExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.TableReferenceExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.RowsRestriction">
      <summary>
        <para>Gets or sets a special item specifier for the table reference.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.TableRowsRestriction"/> enumeration member that specifies referenced rows.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.TableName">
      <summary>
        <para>Gets or sets the name of the table.</para>
      </summary>
      <value>A string that is the table name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.TableReferenceExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.TableRowsRestriction">
      <summary>
        <para>Lists item specifiers used in structured references.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.TableRowsRestriction.All">
      <summary>
        <para>A special item specifier that refers to the entire table, including column headers, data, and totals (if any).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.TableRowsRestriction.Data">
      <summary>
        <para>A special item specifier that refers to data only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.TableRowsRestriction.Headers">
      <summary>
        <para>A special item specifier that refers to the header row only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.TableRowsRestriction.None">
      <summary>
        <para>A specifier that does not apply any restrictions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.TableRowsRestriction.ThisRow">
      <summary>
        <para>A special item specifier that refers to the portion of the columns in the current row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Formulas.TableRowsRestriction.Totals">
      <summary>
        <para>A special item specifier that refers to the total row only.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression">
      <summary>
        <para>An unary negation operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression"/> class with the specified settings.</para>
      </summary>
      <param name="innerExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.UnaryMinusExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “-“ string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnaryMinusExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.UnaryOperatorExpression">
      <summary>
        <para>A base class for unary operators.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.UnaryOperatorExpression.InnerExpression">
      <summary>
        <para>Gets or sets the operand on which the unary operator acts.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> descendant that is the single operand in the expression.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.UnaryOperatorExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>A string that designates an operator.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression">
      <summary>
        <para>An unary positive operation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression.#ctor(DevExpress.Spreadsheet.Formulas.IExpression)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression"/> class with the specified settings.</para>
      </summary>
      <param name="innerExpression">An <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> object specifying the operand.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.UnaryPlusExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression.OperatorText">
      <summary>
        <para>Gets the symbols that designate the operation.</para>
      </summary>
      <value>Returns the “+” string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnaryPlusExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression">
      <summary>
        <para>An unrecognized function.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression.#ctor(System.String,System.Boolean,System.Collections.Generic.IList{DevExpress.Spreadsheet.Formulas.IExpression})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression"/> class with the specified settings.</para>
      </summary>
      <param name="functionName">A string that is the name of the function.</param>
      <param name="isAddinFunction">true if it is the add-in function; otherwise, false.</param>
      <param name="innerExpressions">A list of <see cref="T:DevExpress.Spreadsheet.Formulas.IExpression"/> objects which are function arguments.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression.CopyFrom(DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression.FunctionName">
      <summary>
        <para>Gets or sets the name of the function.</para>
      </summary>
      <value>A string that is the function name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression.IsAddinFunction">
      <summary>
        <para>Gets or sets whether the unrecognized function is the add-in function.</para>
      </summary>
      <value>true, if the current function is the add-in function; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Formulas.UnknownFunctionExpression.Visit(DevExpress.Spreadsheet.Formulas.IExpressionVisitor)">
      <summary>
        <para>Calls the visitor delegate on the expression.</para>
      </summary>
      <param name="visitor">A DevExpress.Spreadsheet.Formulas.IExpressionVisitor object that is the expression visitor.</param>
    </member>
    <member name="N:DevExpress.Spreadsheet.Functions">
      <summary>
        <para>Contains classes required to implement a custom spreadsheet function.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.CustomFunction">
      <summary>
        <para>Use the ICustomFunction interface instead.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.CustomFunctionArgumentDescription">
      <summary>
        <para>Contains text descriptions of the argument passed to the User-Defined Function (UDF).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.CustomFunctionArgumentDescription.#ctor(System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Functions.CustomFunctionArgumentDescription"/> class with the specified settings.</para>
      </summary>
      <param name="name">A string that is the name of an argument.</param>
      <param name="description">A string that is the text used as an argument description.</param>
      <param name="resultType">A string that is the hint for the type the function returns.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.CustomFunctionArgumentDescription.Description">
      <summary>
        <para>Gets or sets a description of the function argument.</para>
      </summary>
      <value>A string that explains to the end-user what the argument means.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.CustomFunctionArgumentDescription.Name">
      <summary>
        <para>Gets or sets the name of an argument.</para>
      </summary>
      <value>A string that names the argument.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.CustomFunctionArgumentDescription.ResultType">
      <summary>
        <para>Gets or sets the text description of the type the function returns.</para>
      </summary>
      <value>A string describing the return type.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.CustomFunctionArgumentsDescriptionsCollection">
      <summary>
        <para>Contains the type and description for each argument of the User-Defined Function (UDF).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.CustomFunctionArgumentsDescriptionsCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Functions.CustomFunctionArgumentsDescriptionsCollection"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.CustomFunctionCollection">
      <summary>
        <para>A collection of custom functions in a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.CustomFunctionCollection.Contains(System.String)">
      <summary>
        <para>Determines whether the collection contains the specified function.</para>
      </summary>
      <param name="name">A string that is the name of the function to locate in the collection.</param>
      <returns>true, if the collection contains the specified function; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.CustomFunctionCollection.Item(System.String)">
      <summary>
        <para>Gets a function by its invariant name.</para>
      </summary>
      <param name="name">A string that is the name of a function.</param>
      <value>A function that implements the <see cref="T:DevExpress.Spreadsheet.Functions.ICustomFunction"/> interface.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.CustomFunctionCollection.Remove(System.String)">
      <summary>
        <para>Removes the specified function from the collection.</para>
      </summary>
      <param name="name">A string that is the name of the function to be removed from a collection.</param>
      <returns>true, if the function is successfully removed; otherwise, false. If the function is not found, the method returns false.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.EvaluationContext">
      <summary>
        <para>Provides information on the worksheet, its current culture, the column and the row containing the cell for which a formula is calculated.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.EvaluationContext.Column">
      <summary>
        <para>Gets the index of a column containing the cell whose formula is being evaluated.</para>
      </summary>
      <value>An integer that is the zero-based column index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.EvaluationContext.Culture">
      <summary>
        <para>Gets the current culture setting.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object that indicates the culture setting currently being used.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.EvaluationContext.Row">
      <summary>
        <para>Gets the index of a row containing the cell whose formula is being evaluated.</para>
      </summary>
      <value>An integer that is the zero-based row index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.EvaluationContext.Sheet">
      <summary>
        <para>Gets the worksheet being recalculated.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the worksheet containing the formula with the function under evaluation.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext">
      <summary>
        <para>Determines the location of the formula and the culture used for correct formula evaluation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext.#ctor(System.Int32,System.Int32,DevExpress.Spreadsheet.Worksheet,System.Globalization.CultureInfo,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext"/> class with the specified settings.</para>
      </summary>
      <param name="column">An integer that is the index of the column that contains the function.</param>
      <param name="row">An integer that is the index of the row that contains the function.</param>
      <param name="sheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the worksheet containing the function.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object specifying the current language setting.</param>
      <param name="isArrayFormula">true, if the formula being evaluated is an array formula; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext.#ctor(System.Int32,System.Int32,DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext"/> class with the specified settings.</para>
      </summary>
      <param name="column">An integer that is the index of the column that contains the function.</param>
      <param name="row">An integer that is the index of the row that contains the function.</param>
      <param name="sheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the worksheet containing the function.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext.Column">
      <summary>
        <para>Gets or sets the column index.</para>
      </summary>
      <value>An integer that specifies the column index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext.Culture">
      <summary>
        <para>Gets or sets the language for correct formula evaluation.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object specifying the language for correct interpretation of the function names in a formula.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext.IsArrayFormula">
      <summary>
        <para>Gets or sets whether the formula being evaluated is an array formula.</para>
      </summary>
      <value>true, if a formula is an array formula; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext.Row">
      <summary>
        <para>Gets or sets the row index.</para>
      </summary>
      <value>An integer that specifies the row index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext.Sheet">
      <summary>
        <para>Gets or sets the worksheet containing the formula being evaluated.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the worksheet containing the formula.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.FunctionWrapper">
      <summary>
        <para>A base class that allows you to override a built-in spreadsheet function.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.FunctionWrapper.Evaluate(System.Collections.Generic.IList{DevExpress.Spreadsheet.Functions.ParameterValue},DevExpress.Spreadsheet.Functions.EvaluationContext)">
      <summary>
        <para>Override this method to calculate the function as needed.</para>
      </summary>
      <param name="parameters">A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>,&gt; object containing parameters passed to the function.</param>
      <param name="context">An <see cref="T:DevExpress.Spreadsheet.Functions.EvaluationContext"/> object containing information on the cell and worksheet in which the function is being calculated.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the calculated value.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.FunctionWrapper.GetName(System.Globalization.CultureInfo)">
      <summary>
        <para>Override this method to provide the function name.</para>
      </summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object containing culture-specific settings.</param>
      <returns>A string that is the name of the function.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.FunctionWrapper.Name">
      <summary>
        <para>Gets the name of the base function.</para>
      </summary>
      <value>A string that is the function name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.FunctionWrapper.Parameters">
      <summary>
        <para>Gets the parameters passed to the function.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.XtraReports.Parameters.ParameterInfo"/> objects that are the parameters passed to the function.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.FunctionWrapper.ReturnType">
      <summary>
        <para>Gets the return type of the base function.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraReports.Parameters.ParameterType"/> enumeration that specifies the function return type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.FunctionWrapper.Volatile">
      <summary>
        <para>Gets whether the base function is evaluated each time the worksheet is recalculated.</para>
      </summary>
      <value>True, if the base function is volatile; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.ICustomFunction">
      <summary>
        <para>Defines properties and methods required to implement your own worksheet function.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.ICustomFunctionDescriptionsRegisterService">
      <summary>
        <para>Provides captions and text descriptions for the Function Argument dialog invoked for the custom function (UDF).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ICustomFunctionDescriptionsRegisterService.RegisterFunctionDescriptions(System.String,System.String,DevExpress.Spreadsheet.Functions.CustomFunctionArgumentsDescriptionsCollection)">
      <summary>
        <para>Specifies text descriptions for use in the Function Argument dialog invoked for the specified custom function.</para>
      </summary>
      <param name="functionName">A string that is the name of a custom function for which descriptions are specified. The function name is defined by the <see cref="P:DevExpress.Spreadsheet.Functions.IFunction.Name"/> property.</param>
      <param name="functionDescription">A string that describes the custom function itself.</param>
      <param name="argumentsDescriptions">A collection of descriptions for the function arguments.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ICustomFunctionDescriptionsRegisterService.UnregisterFunction(System.String)">
      <summary>
        <para>Resets the text descriptions previously specified by the <see cref="M:DevExpress.Spreadsheet.Functions.ICustomFunctionDescriptionsRegisterService.RegisterFunctionDescriptions(System.String,System.String,DevExpress.Spreadsheet.Functions.CustomFunctionArgumentsDescriptionsCollection)"/> method to their default values.</para>
      </summary>
      <param name="functionName">A string that is the name of the function whose descriptions are reset.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.IFunction">
      <summary>
        <para>Defines properties and methods required for the worksheet function.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.IFunction.Evaluate(System.Collections.Generic.IList{DevExpress.Spreadsheet.Functions.ParameterValue},DevExpress.Spreadsheet.Functions.EvaluationContext)">
      <summary>
        <para>Performs required calculations and returns the result.</para>
      </summary>
      <param name="parameters">A list of <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> objects containing function parameters.</param>
      <param name="context">An <see cref="T:DevExpress.Spreadsheet.Functions.EvaluationContext"/> object that provides information on the cell that contains the function, the current culture and the worksheet.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that contains the calculation result.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.IFunction.GetName(System.Globalization.CultureInfo)">
      <summary>
        <para>Obtains the culture-specific name of a function.</para>
      </summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object that is the culture for which a function name id obtained.</param>
      <returns>A string that is the name of the function for the specified culture.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.IFunction.Name">
      <summary>
        <para>Returns the invariant name of a function.</para>
      </summary>
      <value>A string that is the name of a function.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.IFunction.Parameters">
      <summary>
        <para>Returns an array containing information on parameters that can be passed to the function.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.Spreadsheet.Functions.ParameterInfo"/> type objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.IFunction.ReturnType">
      <summary>
        <para>Gets the characteristic of an object that the function will return.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterType"/> enumeration member that characterizes the return type of a function.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.IFunction.Volatile">
      <summary>
        <para>Indicates whether the formula containing this function will always be recalculated at each recalculation, whether or not there are changes in the formula or its variables.</para>
      </summary>
      <value>True, to always recalculate a formula with this function; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.ParameterAttributes">
      <summary>
        <para>Lists parameter attributes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterAttributes.Optional">
      <summary>
        <para>The parameter is not required. If it is missing, the function still compiles and evaluates. Note that optional parameters should come after all required parameters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterAttributes.OptionalUnlimited">
      <summary>
        <para>Any number of parameters which are not required. Note that the total number of parameters should not exceed 255 and the optional unlimited parameter should be the final parameter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterAttributes.Required">
      <summary>
        <para>The parameter is mandatory. A missing parameter results in a user warning dialog.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.ParameterInfo">
      <summary>
        <para>Defines a parameter to pass to a custom function.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterInfo.#ctor(DevExpress.Spreadsheet.Functions.ParameterType,DevExpress.Spreadsheet.Functions.ParameterAttributes)">
      <summary>
        <para>Initializes a new instance of the ParameterInfo class with the specified type and attributes.</para>
      </summary>
      <param name="type">A <see cref="T:DevExpress.XtraReports.Parameters.ParameterType"/> enumeration member that specifies the parameter type.</param>
      <param name="Attributes">A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterAttributes"/> enumeration member that specifies the parameter attribute.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterInfo.#ctor(DevExpress.Spreadsheet.Functions.ParameterType)">
      <summary>
        <para>Initializes a new instance of the ParameterInfo class with the specified type.</para>
      </summary>
      <param name="type">A <see cref="T:DevExpress.XtraReports.Parameters.ParameterType"/> enumeration member that specifies the parameter type.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterInfo.Attributes">
      <summary>
        <para>Gets or sets the parameter attribute that specifies whether parameter is required and its cardinality.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterAttributes"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterInfo.ConvertEmptyValueToZero">
      <summary>
        <para>Gets or sets whether a parameter with an empty value is converted to zero when the parameter is evaluated.</para>
      </summary>
      <value>true, to convert an empty parameter value to zero; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterInfo.Type">
      <summary>
        <para>Gets or sets the expected parameter type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraReports.Parameters.ParameterType"/> enumeration member specifying the type of a parameter.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.ParameterType">
      <summary>
        <para>Lists parameter types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterType.Any">
      <summary>
        <para>Any kind of parameter is allowed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterType.Array">
      <summary>
        <para>Parameter is an array (the function is used in array formula).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterType.Reference">
      <summary>
        <para>The parameter is a reference to a cell, range or defined name.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterType.Value">
      <summary>
        <para>The parameter is a single value of any type.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Contains data passed to the function or returned.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.ArrayValue">
      <summary>
        <para>Gets the parameter as an array of cell values.</para>
      </summary>
      <value>A two-dimensional array of <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.BooleanValue">
      <summary>
        <para>Gets or sets the parameter value to a boolean value.</para>
      </summary>
      <value>A boolean value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.DateTimeValue">
      <summary>
        <para>Gets the parameter as the DateTime value.</para>
      </summary>
      <value>A <see cref="T:System.DateTime"/> value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.Empty">
      <summary>
        <para>Gets an empty parameter value.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> that is the value of an empty parameter.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> instance.</para>
      </summary>
      <param name="obj">The object to compare to the current object.</param>
      <returns>true, if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> instance; otherwise false.</returns>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterValue.ErrorDivisionByZero">
      <summary>
        <para>Creates a parameter which is the Division by Zero error.</para>
      </summary>
      <value>A parameter value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterValue.ErrorInvalidValueInFunction">
      <summary>
        <para>Creates a parameter which is the Invalid Value in Function error.</para>
      </summary>
      <value>A parameter value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterValue.ErrorName">
      <summary>
        <para>Creates a parameter which is the Name error.</para>
      </summary>
      <value>A parameter value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterValue.ErrorNullIntersection">
      <summary>
        <para>Creates a parameter which is the Null Intersection error.</para>
      </summary>
      <value>A parameter value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterValue.ErrorNumber">
      <summary>
        <para>Creates a parameter which is the Number error.</para>
      </summary>
      <value>A parameter value.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterValue.ErrorReference">
      <summary>
        <para>Creates a parameter which is the Reference error.</para>
      </summary>
      <value>A parameter value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.ErrorValue">
      <summary>
        <para>Gets information on an error which is the parameter.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.ErrorValueInfo"/> object containing information on an error.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.Functions.ParameterValue.ErrorValueNotAvailable">
      <summary>
        <para>Creates a parameter which is the Value not Available error.</para>
      </summary>
      <value>A parameter value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.FromDateTime(System.DateTime,System.Boolean)">
      <summary>
        <para>Creates the parameter from the DateTime value.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> value used to create a parameter.</param>
      <param name="use1904DateSystem">true, to specify the 1904 date system (which starts from January 2, 1904 and is compatible with Excel for Macintosh); otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> instance.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.FromRange(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a parameter that specifies a certain worksheet range.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the worksheet range being passed as a parameter.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> that is the parameter signifying the worksheet range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.FromRange(System.Collections.Generic.List{DevExpress.Spreadsheet.CellRange})">
      <summary>
        <para>Creates a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object from the specified cell range.</para>
      </summary>
      <param name="rangeAreas">A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CellRange"/>,&gt; object that is the list of cell ranges.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.GetHashCode">
      <summary>
        <para>Returns a number that identifies the object instance.</para>
      </summary>
      <returns>An integer that identifies the parameter instance.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.IsArray">
      <summary>
        <para>Gets whether the parameter is an array.</para>
      </summary>
      <value>true, if the parameter is an array; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.IsBoolean">
      <summary>
        <para>Gets whether the parameter is of the boolean type.</para>
      </summary>
      <value>true, if the parameter is a boolean value; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.IsEmpty">
      <summary>
        <para>Gets whether the parameter is an empty parameter.</para>
      </summary>
      <value>true, if the parameter is an empty parameter; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.IsError">
      <summary>
        <para>Gets whether the parameter is an error.</para>
      </summary>
      <value>true, if the parameter is an error; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.IsNumeric">
      <summary>
        <para>Gets whether the parameter is of the numeric type.</para>
      </summary>
      <value>true, if the parameter is numeric; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.IsRange">
      <summary>
        <para>Determines whether the parameter is a worksheet range.</para>
      </summary>
      <value>true, if the parameter is the worksheet range; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.IsText">
      <summary>
        <para>Gets whether the parameter is text.</para>
      </summary>
      <value>true, if the parameter is text; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.NumericValue">
      <summary>
        <para>Gets or sets the numeric value of the parameter.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is used as the numeric value of the parameter.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Equality(DevExpress.Spreadsheet.Functions.ParameterValue,DevExpress.Spreadsheet.Functions.ParameterValue)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> objects for equality.</para>
      </summary>
      <param name="value">The first <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> instance to compare.</param>
      <param name="other">The second <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> instance to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> objects are equal; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(DevExpress.Spreadsheet.CellValue)~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts a cell value to a parameter value.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(DevExpress.Spreadsheet.CellValue[0:,0:])~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts an array of cell values to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</para>
      </summary>
      <param name="values">A two-dimensional array of <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(System.Boolean)~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Boolean"/> value to a parameter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Boolean"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(System.Char)~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Char"/> value to a parameter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Char"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(System.DateTime)~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.DateTime"/> object to a parameter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(System.Decimal)~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Decimal"/> value to a parameter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Decimal"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(System.Double)~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Double"/> value to a parameter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Double"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(System.Int32)~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts an <see cref="T:System.Int32"/> value to a parameter value.</para>
      </summary>
      <param name="value">An <see cref="T:System.Int32"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(System.Single)~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Single"/> value to a parameter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.Single"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Implicit(System.String)~DevExpress.Spreadsheet.Functions.ParameterValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.String"/> value to a parameter value.</para>
      </summary>
      <param name="value">A <see cref="T:System.String"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.op_Inequality(DevExpress.Spreadsheet.Functions.ParameterValue,DevExpress.Spreadsheet.Functions.ParameterValue)">
      <summary>
        <para>Compares two <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> objects to determine whether they are not equal.</para>
      </summary>
      <param name="value">The first <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> instance to compare.</param>
      <param name="other">The second <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> instance to compare.</param>
      <returns>true, if two <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> objects are not equal; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.RangeAreas">
      <summary>
        <para>Gets or sets a list of cell ranges passed as a parameter.</para>
      </summary>
      <value>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CellRange"/>,&gt; object that is the list of cell ranges.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.RangeValue">
      <summary>
        <para>Gets or sets a range as a parameter value.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is passed as a parameter.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.ParameterValue.TextValue">
      <summary>
        <para>Gets or sets a text as a parameter value.</para>
      </summary>
      <value>A string that is passed as a parameter.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.ToDateTime(System.Boolean)">
      <summary>
        <para>Gets the parameter value as the DateTime calculated using the specified date system.</para>
      </summary>
      <param name="use1904DateSystem">true, to specify the 1904 date system (which starts from January 2, 1904 and is compatible with Excel for Macintosh); otherwise, false.</param>
      <returns>A <see cref="T:System.DateTime"/> value.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.ToString">
      <summary>
        <para>Returns a textual representation of the <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.ParameterValue.ToString(System.IFormatProvider)">
      <summary>
        <para>Returns a textual representation of the <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object.</para>
      </summary>
      <param name="formatProvider">An <see cref="T:System.IFormatProvider"/> interface specifying the culture settings.</param>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.Functions.WorkbookFunctions">
      <summary>
        <para>Provides access to worksheet functions and enables you to override a built-in function.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Compatibility">
      <summary>
        <para>Provides access to built-in Compatibility Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.ICompatibilityFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.CustomFunctions">
      <summary>
        <para>Provides access to User-Defined Functions (UDF).</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Functions.CustomFunctionCollection"/> object that contains custom functions.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Database">
      <summary>
        <para>Provides access to built-in Database Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.IDatabaseFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.DateAndTime">
      <summary>
        <para>Provides access to built-in Date and Time Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.IDateAndTimeFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Engineering">
      <summary>
        <para>Provides access to built-in Engineering Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.IEngineeringFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Financial">
      <summary>
        <para>Provides access to built-in Financial Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.IFinancialFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.GlobalCustomFunctions">
      <summary>
        <para>Provides access to custom functions (User-Defined Functions (UDF)), defined globally.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Functions.CustomFunctionCollection"/> collection that contains custom functions.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Informational">
      <summary>
        <para>Provides access to built-in Information Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.IInformationFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Item(System.String)">
      <summary>
        <para>Gets a built-in function by its name.</para>
      </summary>
      <param name="name">A string that is the name of the function to search for.</param>
      <value>A DevExpress.Spreadsheet.Functions.IBuiltInFunction interface representing the built-in function.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Logical">
      <summary>
        <para>Provides access to built-in Logical Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.ILogicalFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.LookupAndReference">
      <summary>
        <para>Provides access to built-in Lookup and Reference Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.ILookupAndReferenceFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Math">
      <summary>
        <para>Provides access to built-in Mathematical Functions</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.IMathAndTrigonometryFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.WorkbookFunctions.OverrideFunction(System.String,DevExpress.Spreadsheet.Functions.ICustomFunction,System.Boolean)">
      <summary>
        <para>Replaces the built-in function specified by its name with a custom function.</para>
      </summary>
      <param name="name">A name of the function to replace.</param>
      <param name="function">An <see cref="T:DevExpress.Spreadsheet.Functions.ICustomFunction"/> descendant that is the custom function.</param>
      <param name="skipIfExists">true, to cancel the function replacement if the built-in function with the specified name exists; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Functions.WorkbookFunctions.OverrideFunction(System.String,DevExpress.Spreadsheet.Functions.ICustomFunction)">
      <summary>
        <para>Replaces the built-in function specified by its name with a custom function.</para>
      </summary>
      <param name="name">A name of the function to replace.</param>
      <param name="function">An <see cref="T:DevExpress.Spreadsheet.Functions.ICustomFunction"/> descendant that is the custom function.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Statistical">
      <summary>
        <para>Provides access to built-in Statistical Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.IStatisticalFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Text">
      <summary>
        <para>Provides access to built-in Text Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.ITextFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Functions.WorkbookFunctions.Web">
      <summary>
        <para>Provides access to built-in Web Functions.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.Functions.IWebFunctions interface providing access to functions via its properties.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.GradientFill">
      <summary>
        <para>Contains characteristics required to create a gradient fill.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientFill.Degree">
      <summary>
        <para>Gets or sets the tilt of the gradient line.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the angle in degrees.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientFill.RectangleBottom">
      <summary>
        <para>Gets or sets the bottom convergence point for the path gradient type.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value in the range from 0 to 1.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientFill.RectangleLeft">
      <summary>
        <para>Gets or sets the left convergence point for the path gradient type.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value in the range from 0 to 1.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientFill.RectangleRight">
      <summary>
        <para>Gets or sets the right convergence point for the path gradient type.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value in the range from 0 to 1.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientFill.RectangleTop">
      <summary>
        <para>Gets or sets the top convergence point for the path gradient type.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value in the range from 0 to 1.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientFill.Stops">
      <summary>
        <para>Specifies the color stop points at the gradient line.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.GradientStopCollection"/> object that is the collection of color stop points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientFill.Type">
      <summary>
        <para>Gets or sets the type of the gradient fill.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.GradientFillType"/> enumeration member.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.GradientFillType">
      <summary>
        <para>Lists the types of gradient fill.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.GradientFillType.Linear">
      <summary>
        <para>Linear gradient. The background fill is a transition through a series of colors specified by color stops placed on a gradient line. The gradient line can be tilted at a specified angle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.GradientFillType.Path">
      <summary>
        <para>Path gradient indicates that the transition boundary of one color to the next is a rectangle, defined by top, bottom, left, and right attributes.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.GradientStop">
      <summary>
        <para>A color stop that constitutes a gradient fill.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientStop.Color">
      <summary>
        <para>Gets the color of the color stop point.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> value that is the color used in a gradient effect.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientStop.Position">
      <summary>
        <para>Gets the position of the color stop point at the gradient line.</para>
      </summary>
      <value>0 for the start point, 1 for the end point. Other values are not supported.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.GradientStopCollection">
      <summary>
        <para>A collection of color stops which constitutes a linear gradient.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.GradientStopCollection.Add(System.Double,System.Drawing.Color)">
      <summary>
        <para>Creates a new color stop and adds it to the collection.</para>
      </summary>
      <param name="position">A <see cref="T:System.Double"/> value that is the position of a color stop at the gradient line. Should be 0 (zero) or 1.</param>
      <param name="color">A <see cref="T:System.Drawing.Color"/> value that is the color used for the gradient effect.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.GradientStopCollection.Clear">
      <summary>
        <para>Removes all gradient stops from the collection.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientStopCollection.Count">
      <summary>
        <para>Gets the number of color stop points in a collection.</para>
      </summary>
      <value>An integer that is the number of points in a collection.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.GradientStopCollection.Item(System.Int32)">
      <summary>
        <para>Provides access to a color stop point.</para>
      </summary>
      <param name="index">An integer that is the index of a point in a collection.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.GradientStop"/> object that is the color stop point.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.GradientStopCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes a specified gradient stop from the collection in a path-based gradient fill.</para>
      </summary>
      <param name="index">An integer that is the index of a gradient stop in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.HeaderFooterCode">
      <summary>
        <para>Contains format codes used in headers and footers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Ampersand">
      <summary>
        <para>Prints a single ampersand.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.HeaderFooterCode.BodyFont(DevExpress.Spreadsheet.SpreadsheetFontStyle)">
      <summary>
        <para>Returns the format code that prints the characters by using the minor theme font and the specified font style.</para>
      </summary>
      <param name="fontStyle">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFontStyle"/> enumeration member that specifies the font style.</param>
      <returns>The resulting format code.</returns>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Bold">
      <summary>
        <para>Turns bold on and off for the text that follows the code.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.CenterSection">
      <summary>
        <para>Centers the characters that follow.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.HeaderFooterCode.CustomPageNumber(System.Int32)">
      <summary>
        <para>Returns the header and footer code that prints the page number plus/minus the specified number.</para>
      </summary>
      <param name="offset">Specifies a positive or negative integer to add to or subtract from the current page number.</param>
      <returns>The resulting header and footer code.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HeaderFooterCode.CustomPageTotal(System.Int32)">
      <summary>
        <para>Returns the header and footer code that prints the total number of pages plus/minus the specified number.</para>
      </summary>
      <param name="offset">Specifies a positive or negative integer to add to or subtract from the total number of pages.</param>
      <returns>The resulting header and footer code.</returns>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Date">
      <summary>
        <para>Prints the current date.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.DoubleUnderline">
      <summary>
        <para>Turns double underline on and off for the characters that follow.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.HeaderFooterCode.Font(System.String,DevExpress.Spreadsheet.SpreadsheetFontStyle)">
      <summary>
        <para>Prints the characters using the specified font.</para>
      </summary>
      <param name="fontName">A string that is the name of the font.</param>
      <param name="fontStyle">A <see cref="T:System.Drawing.FontStyle"/> enumeration that specifies the style of the text.</param>
      <returns>A string that can be assigned as the header or footer content.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HeaderFooterCode.FontColor(System.Drawing.Color)">
      <summary>
        <para>Obtains the formatting code that sets the text font color.</para>
      </summary>
      <param name="color">A <see cref="T:System.Drawing.Color"/> value that is the font color.</param>
      <returns>A string that is the formatting code.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HeaderFooterCode.FontColor(System.Int32,System.Int32)">
      <summary>
        <para>Obtains the formatting code that sets the text font color.</para>
      </summary>
      <param name="themeColorId">An integer that is the Office Theme color Id in the range 0..11.</param>
      <param name="tint">An integer that is the tint\shade value in the range -100..100.</param>
      <returns>A string that can be used as formatting code in a header or footer.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HeaderFooterCode.FontSize(System.Int32)">
      <summary>
        <para>Obtains the format code that sets the text font size.</para>
      </summary>
      <param name="size">An integer specifying the font size.</param>
      <returns>A string that is the format code.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HeaderFooterCode.HeadingsFont(DevExpress.Spreadsheet.SpreadsheetFontStyle)">
      <summary>
        <para>Returns the format code that prints the characters by using the major theme font and the specified font style.</para>
      </summary>
      <param name="fontStyle">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFontStyle"/> enumeration member that specifies the font style.</param>
      <returns>The resulting format code.</returns>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Italic">
      <summary>
        <para>Turns italic on and off for the characters that follow.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.LeftSection">
      <summary>
        <para>Left aligns the characters that follow.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.PageNumber">
      <summary>
        <para>Prints the current page number.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.PageTotal">
      <summary>
        <para>Prints the total number of pages in the document.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Picture">
      <summary>
        <para>Inserts a picture. Use the WorksheetHeaderFooter.AddPicture method to load the picture you want to insert.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.RightSection">
      <summary>
        <para>Right aligns the characters that follow.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Strikethrough">
      <summary>
        <para>Turns strikethrough on or off for the characters that follow.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Subscript">
      <summary>
        <para>Turns subscript on or off for the characters that follow.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Superscript">
      <summary>
        <para>Turns superscript on or off for the characters that follow.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Time">
      <summary>
        <para>Prints the current time.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.Underline">
      <summary>
        <para>Turns underline on or off for the characters that follow.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.WorkbookFileName">
      <summary>
        <para>Prints the name of the workbook.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.WorkbookFilePath">
      <summary>
        <para>Prints the file path of the workbook.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterCode.WorksheetName">
      <summary>
        <para>Prints the name of the worksheet.</para>
      </summary>
      <value>A header and footer code.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.HeaderFooterPicture">
      <summary>
        <para>A picture embedded in a worksheet header or footer.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.Brightness">
      <summary>
        <para>Gets or sets the brightness level of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value indicating the brightness level.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.ColorType">
      <summary>
        <para>Gets or sets the type of color transformation applied to the picture.</para>
      </summary>
      <value>One of the DevExpress.Spreadsheet.PictureColorType enumeration values specifying the color transformation type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.Contrast">
      <summary>
        <para>Gets or sets the contrast of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value indicating the contrast level.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.CropBottom">
      <summary>
        <para>Gets or sets the number of points that are cut from the bottom of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the number of points to be cut.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.CropLeft">
      <summary>
        <para>Gets or sets the number of pixels that are cut from the left of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the number of points to be cut.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.CropRight">
      <summary>
        <para>Gets or sets the number of pixels that are cut from the right of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the number of pixels to be cut.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.CropTop">
      <summary>
        <para>Gets or sets the number of points that are cut from the top of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the number of points to be cut.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.Height">
      <summary>
        <para>Gets or sets the height of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the picture’s height.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.Image">
      <summary>
        <para>Gets an image contained in the header or footer picture object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Office.Utils.OfficeImage"/> object that is the image contained in the object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.LockAspectRatio">
      <summary>
        <para>Gets or sets whether the picture retains its original proportions after resizing.</para>
      </summary>
      <value>true, to retain the original proportions; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.OriginalHeight">
      <summary>
        <para>Gets the original height of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> object that is the original height.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.OriginalWidth">
      <summary>
        <para>Gets the original width of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> object that is the original width.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HeaderFooterPicture.Width">
      <summary>
        <para>Gets or sets the width of the picture.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the picture’s width.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.HeaderFooterSection">
      <summary>
        <para>Lists document header and footer sections.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterSection.Center">
      <summary>
        <para>The center section.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterSection.Left">
      <summary>
        <para>The left section.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.HeaderFooterSection.Right">
      <summary>
        <para>The right section.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Hyperlink">
      <summary>
        <para>A hyperlink contained in a cell or cell range.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Hyperlink.DisplayText">
      <summary>
        <para>Gets or sets the text displayed for a hyperlink in a cell.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text to be displayed for a hyperlink.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Hyperlink.Range">
      <summary>
        <para>Gets the cell range that contains the hyperlink.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Hyperlink.SetUri(System.String,System.Boolean,System.String)">
      <summary>
        <para>Sets the hyperlink destination and text to be displayed for the hyperlink in a cell.</para>
      </summary>
      <param name="uri">A <see cref="T:System.String"/> value that specifies a web page, existing file, e-mail address or cell range in the current workbook to which a hyperlink refers. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.HyperlinkBase.Uri"/> property.</param>
      <param name="isExternal">A <see cref="T:System.Boolean"/> value that specifies whether a hyperlink refers to an external resource (true) or to a cell range within the current workbook (false). This value is assigned to the <see cref="P:DevExpress.Spreadsheet.HyperlinkBase.IsExternal"/> property.</param>
      <param name="displayText">A <see cref="T:System.String"/> value that specifies text to be displayed for a hyperlink. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.Hyperlink.DisplayText"/> property and specifies the top left cell value of the range which contains a hyperlink.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.HyperlinkBase">
      <summary>
        <para>Serves as the base for the <see cref="T:DevExpress.Spreadsheet.Hyperlink"/> and <see cref="T:DevExpress.Spreadsheet.ShapeHyperlink"/> interfaces that define hyperlinks for cells and shapes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.HyperlinkBase.IsExternal">
      <summary>
        <para>Gets a value that indicates whether the hyperlink refers to an external resource (web page, e-mail address, file or directory) or to a cell range within the current workbook.</para>
      </summary>
      <value>true, if the hyperlink refers to an external resource; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.HyperlinkBase.SetUri(System.String,System.Boolean)">
      <summary>
        <para>Sets the hyperlink destination.</para>
      </summary>
      <param name="uri">A <see cref="T:System.String"/> value that specifies a web page, existing file, e-mail address or cell range in the current workbook to which a hyperlink refers. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.HyperlinkBase.Uri"/> property.</param>
      <param name="isExternal">A <see cref="T:System.Boolean"/> value that specifies whether a hyperlink refers to an external resource (true) or to a cell range within the current workbook (false). This value is assigned to the <see cref="P:DevExpress.Spreadsheet.HyperlinkBase.IsExternal"/> property.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.HyperlinkBase.TooltipText">
      <summary>
        <para>Gets or sets the tooltip for the hyperlink.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the tooltip text for the hyperlink.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.HyperlinkBase.Uri">
      <summary>
        <para>Returns the hyperlink destination.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the destination to which a hyperlink refers.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.HyperlinkCollection">
      <summary>
        <para>A collection of hyperlinks contained in worksheet cells.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.HyperlinkCollection.Add(DevExpress.Spreadsheet.CellRange,System.String,System.Boolean,System.String)">
      <summary>
        <para>Adds a hyperlink into the specified cell or cell range and returns the newly created object.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range where a hyperlink is inserted. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.Hyperlink.Range"/> property.</param>
      <param name="uri">A <see cref="T:System.String"/> value that specifies a web page, existing file, e-mail address or cell range in the current workbook to which a hyperlink refers. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.HyperlinkBase.Uri"/> property.</param>
      <param name="isExternal">A <see cref="T:System.Boolean"/> value that specifies whether a hyperlink refers to an external resource (true) or to a cell range within the current workbook (false). This value is assigned to the <see cref="P:DevExpress.Spreadsheet.HyperlinkBase.IsExternal"/> property.</param>
      <param name="displayText">A <see cref="T:System.String"/> value that specifies text to be displayed for a hyperlink. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.Hyperlink.DisplayText"/> property and specifies the top left cell value of the range into which a hyperlink is added.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Hyperlink"/> object that specifies the created hyperlink.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HyperlinkCollection.Add(DevExpress.Spreadsheet.CellRange,System.String,System.Boolean)">
      <summary>
        <para>Adds a hyperlink into the specified cell or cell range and returns the newly created object.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range where a hyperlink is inserted. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.Hyperlink.Range"/> property.</param>
      <param name="uri">A <see cref="T:System.String"/> value that specifies a web page, existing file, e-mail address or cell range in the current workbook to which a hyperlink refers. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.HyperlinkBase.Uri"/> and <see cref="P:DevExpress.Spreadsheet.Hyperlink.DisplayText"/> properties and specifies the top left cell value of the range into which a hyperlink is added.</param>
      <param name="isExternal">A <see cref="T:System.Boolean"/> value that specifies whether a hyperlink refers to an external resource (true) or to a cell range within the current workbook (false). This value is assigned to the <see cref="P:DevExpress.Spreadsheet.HyperlinkBase.IsExternal"/> property.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Hyperlink"/> object that specifies the created hyperlink.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HyperlinkCollection.Clear">
      <summary>
        <para>Removes all hyperlinks from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.HyperlinkCollection.Contains(DevExpress.Spreadsheet.Hyperlink)">
      <summary>
        <para>Indicates whether the collection contains the specified hyperlink.</para>
      </summary>
      <param name="hyperlink">A <see cref="T:DevExpress.Spreadsheet.Hyperlink"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the hyperlink; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HyperlinkCollection.GetHyperlinks(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Gets hyperlink(s) contained in the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range that contains hyperlinks to be returned.</param>
      <returns>A collection of hyperlinks within the specified range of cells.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HyperlinkCollection.IndexOf(DevExpress.Spreadsheet.Hyperlink)">
      <summary>
        <para>Returns the index of the specified hyperlink in the collection.</para>
      </summary>
      <param name="hyperlink">A <see cref="T:DevExpress.Spreadsheet.Hyperlink"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the hyperlink’s position within the collection. &#0045;1 if the hyperlink doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.HyperlinkCollection.Remove(DevExpress.Spreadsheet.Hyperlink)">
      <summary>
        <para>Removes the specified hyperlink from the collection.</para>
      </summary>
      <param name="hyperlink">A <see cref="T:DevExpress.Spreadsheet.Hyperlink"/> object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.HyperlinkCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the hyperlink at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the hyperlink to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.IBindingRangeValueConverter">
      <summary>
        <para>An interface that allows you to convert cell values to custom objects and back.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IBindingRangeValueConverter.ConvertToObject(DevExpress.Spreadsheet.CellValue,System.Type,System.Int32)">
      <summary>
        <para>Convert a cell value to a certain object.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> to be converted.</param>
      <param name="requiredType">The type of object to return.</param>
      <param name="columnIndex">An integer that is the index of the column in the data source.</param>
      <returns>An object to which a cell value is converted.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IBindingRangeValueConverter.TryConvertFromObject(System.Object)">
      <summary>
        <para>Converts the specified object to a cell value.</para>
      </summary>
      <param name="value">An object to be converted.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> to which an object is converted.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.ICellValueConverter">
      <summary>
        <para>A converter that converts custom objects to cell values and vice versa.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ICellValueConverter.ConvertToObject(DevExpress.Spreadsheet.CellValue)">
      <summary>
        <para>Implement this method to convert a cell value to a certain object.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> to be converted.</param>
      <returns>An object to which a cell value is converted.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ICellValueConverter.TryConvertFromObject(System.Object)">
      <summary>
        <para>Implement this method to convert a certain object to a cell value.</para>
      </summary>
      <param name="value">An object to be converted.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> to which an object is converted.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.IClipboardManager">
      <summary>
        <para>Allows you to write data to the system clipboard.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IClipboardManager.Copy">
      <summary>
        <para>Copies the selected cells to the clipboard.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.IconSetConditionalFormatting">
      <summary>
        <para>Represents an icon set conditional formatting rule.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IconSetConditionalFormatting.GetIcon(System.Int32)">
      <summary>
        <para>Gets an icon by its index from the icon set specified in the icon set conditional format.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the icon. It should be non-negative and less than the number of icons in the set.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingCustomIcon"/> object representing a particular icon in the icon set.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.IconSetConditionalFormatting.IconSet">
      <summary>
        <para>Gets or sets an icon set type for conditional formatting.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.IconSetType"/> enumeration values that specifies an icon set to be displayed.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IconSetConditionalFormatting.IsCustom">
      <summary>
        <para>Indicates whether a custom icon set is specified.</para>
      </summary>
      <value>true, if the custom icon style is used; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IconSetConditionalFormatting.Reversed">
      <summary>
        <para>Gets or sets whether icons in the icon set specified in the conditional formatting rule are shown in reverse order.</para>
      </summary>
      <value>true, if the icon order is reversed; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.IconSetConditionalFormatting.SetCustomIcon(System.Int32,DevExpress.Spreadsheet.ConditionalFormattingCustomIcon)">
      <summary>
        <para>Inserts a custom icon into the icon set specified in the conditional formatting rule.</para>
      </summary>
      <param name="index">The zero-based index position of the insertion.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingCustomIcon"/> object representing a custom icon to be set.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.IconSetConditionalFormatting.ShowValue">
      <summary>
        <para>Gets or sets whether to show values of cells to which the icon set conditional formatting rule is applied.</para>
      </summary>
      <value>true, if cell values are displayed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IconSetConditionalFormatting.Values">
      <summary>
        <para>Returns an array of threshold values used in the icon set conditional formatting rule.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingIconSetValue"/> values that are threshold values.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.IconSetType">
      <summary>
        <para>Lists values that specify the icon set type for an icon set conditional format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Arrows3">
      <summary>
        <para>Specifies the 3 arrows icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Arrows4">
      <summary>
        <para>Specifies the 4 arrows icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Arrows5">
      <summary>
        <para>Specifies the 5 arrows icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.ArrowsGray3">
      <summary>
        <para>Specifies the 3 gray arrows icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.ArrowsGray4">
      <summary>
        <para>Specifies the 4 gray arrows icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.ArrowsGray5">
      <summary>
        <para>Specifies the 5 gray arrows icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Boxes5">
      <summary>
        <para>Specifies the 5 boxes icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Flags3">
      <summary>
        <para>Specifies the 3 flags icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.None">
      <summary>
        <para>Icon set type is not specified.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Quarters5">
      <summary>
        <para>Specifies the 5 quarters icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Rating4">
      <summary>
        <para>Specifies the 4 ratings icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Rating5">
      <summary>
        <para>Specifies the 5 ratings icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.RedToBlack4">
      <summary>
        <para>Specifies the 4 &quot;red to black&quot; icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Signs3">
      <summary>
        <para>Specifies the 3 signs icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Stars3">
      <summary>
        <para>Specifies the 3 stars icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Symbols23">
      <summary>
        <para>Specifies the 3 symbols icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Symbols3">
      <summary>
        <para>Specifies the 3 symbols (circled) icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.TrafficLights13">
      <summary>
        <para>Specifies the 3 traffic lights icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.TrafficLights23">
      <summary>
        <para>Specifies the 3 traffic lights (rimmed) icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.TrafficLights4">
      <summary>
        <para>Specifies the 4 traffic lights icon set.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IconSetType.Triangles3">
      <summary>
        <para>Specifies the 3 triangles icon set.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ICustomXmlPart">
      <summary>
        <para>A custom XML part embedded in a workbook.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.IDataSourceColumnTypeDetector">
      <summary>
        <para>Provides the capability to identify the name and type of each column in a data source created from a cell range.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IDataSourceColumnTypeDetector.GetColumnName(System.Int32,System.Int32,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Returns a name of the data source column.</para>
      </summary>
      <param name="index">An integer that is the index of the worksheet column used in the binding range.</param>
      <param name="offset">An integer that is the column offset in the binding range.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the binding range for which a column name is obtained.</param>
      <returns>A string that is the name of the data source column.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IDataSourceColumnTypeDetector.GetColumnType(System.Int32,System.Int32,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Returns a type of the data source column.</para>
      </summary>
      <param name="index">An integer that is the index of the worksheet column used in the binding range.</param>
      <param name="offset">An integer that is the column offset in the binding range.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the binding range for which a column name is obtained.</param>
      <returns>A <see cref="T:System.Type"/> object that identifies the column data type.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.IDataValueConverter">
      <summary>
        <para>An interface that allows you to modify data being imported before insertion in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IDataValueConverter.TryConvert(System.Object,System.Int32,DevExpress.Spreadsheet.CellValue@)">
      <summary>
        <para>Converts data being imported to the cell value.</para>
      </summary>
      <param name="value">An object that is the data being imported to a cell.</param>
      <param name="index">An integer that is the index of the column in the data source.</param>
      <param name="result">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that is the value which will be inserted in a cell.</param>
      <returns>true, if a conversion is successful; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.IgnoredError">
      <summary>
        <para>Specifies a worksheet range and a type of the formula error which will be ignored in that range.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.IgnoredError.Range">
      <summary>
        <para>Gets the range for which the error is ignored.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is a cell or a group of cells for which the specified error is ignored.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IgnoredError.Type">
      <summary>
        <para>Gets the type of error being ignored.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.IgnoredErrorType"/> enumeration member specifying the error type being ignored.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.IgnoredErrorCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Spreadsheet.IgnoredError"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IgnoredErrorCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.IgnoredErrorType)">
      <summary>
        <para>Adds a new exclusion of specific error checking for the specified range to the collection of exclusions and returns the newly created object.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the cell range for which specific error-checking will be disabled.</param>
      <param name="errorType">A <see cref="T:DevExpress.Spreadsheet.IgnoredErrorType"/> enumeration value that specifies the type of error checking.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.IgnoredError"/> object that specifies error-checking exclusion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IgnoredErrorCollection.Clear">
      <summary>
        <para>Removes all error-checking exclusions from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IgnoredErrorCollection.Clear(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removers all error-checking exclusions from the specified range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a range of cells for which all error-checking options will be enabled.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IgnoredErrorCollection.Contains(DevExpress.Spreadsheet.IgnoredError)">
      <summary>
        <para>Indicates whether the collection contains the specified item.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.XtraSpellChecker.IIgnoreList"/> item to locate in the collection.</param>
      <returns>True, if the collection contains the comment; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IgnoredErrorCollection.IndexOf(DevExpress.Spreadsheet.IgnoredError)">
      <summary>
        <para>Returns the index of the specified item in the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.IgnoredError"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the item position within the collection. &#0045;1 if the item does not belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IgnoredErrorCollection.Remove(DevExpress.Spreadsheet.IgnoredError)">
      <summary>
        <para>Removes the specified item from the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.IgnoredError"/> object to be removed from the collection.</param>
      <returns>True if the specified item has been found in the collection and successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IgnoredErrorCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the item at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the comment to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.IgnoredErrorType">
      <summary>
        <para>Lists types of errors that can occur in cell formulas. Use the <see cref="P:DevExpress.Spreadsheet.Worksheet.IgnoredErrors"/> property to ignore these errors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.All">
      <summary>
        <para>All errors are ignored.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.EmptyCellReferences">
      <summary>
        <para>The formula contains a reference to an empty cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.EvaluateToError">
      <summary>
        <para>A cell contains a formula that results in an error. Error values include #DIV/0!, #N/A, #NAME?, #NULL!, #NUM!, #REF!, and #VALUE!.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.FormulaRange">
      <summary>
        <para>The formula omits certain cells in a region. The rule checks whether the formula in the cell which references a cell range includes a range of cells that is adjacent to the cell that contains the formula.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.InconsistentColumnFormula">
      <summary>
        <para>A calculated column includes formulas that are different from the column formula.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.InconsistentFormula">
      <summary>
        <para>The formula does not match the pattern of other formulas near it.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.ListDataValidation">
      <summary>
        <para>A cell value does not comply with the Data Validation rule that restricts data to predefined items in a list.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.None">
      <summary>
        <para>No errors are ignored.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.NumberAsText">
      <summary>
        <para>Numbers stored as text or preceded by an apostrophe.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.TextDate">
      <summary>
        <para>A text date that might be misinterpreted as the wrong century.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.IgnoredErrorType.UnlockedFormula">
      <summary>
        <para>A cell with a formula is not locked for protection.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ImageFileFormat">
      <summary>
        <para>Lists image formats you can use to save a cell range as an image.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageFileFormat.Bmp">
      <summary>
        <para>The bitmap (BMP) image format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageFileFormat.Emf">
      <summary>
        <para>The enhanced metafile (EMF) image format. Export to this format is not supported on Linux and macOS.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageFileFormat.Gif">
      <summary>
        <para>The Graphics Interchange Format (GIF) image format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageFileFormat.Jpeg">
      <summary>
        <para>The Joint Photographic Experts Group (JPEG) image format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageFileFormat.Png">
      <summary>
        <para>The W3C Portable Network Graphics (PNG) image format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageFileFormat.Tiff">
      <summary>
        <para>The Tagged Image File Format (TIFF) image format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageFileFormat.Wmf">
      <summary>
        <para>The Windows Metafile (WMF) image format. Export to this format is not supported on Linux and macOS.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ImageReplacementMode">
      <summary>
        <para>Specifies how to insert a new image when you replace an existing worksheet image with a different image.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageReplacementMode.KeepAspectRatio">
      <summary>
        <para>The new image is scaled to fit the largest dimension (width or height) of the original image. The other dimension is calculated based on the aspect ratio of the inserted image.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageReplacementMode.Stretch">
      <summary>
        <para>The new image is increased or decreased to fit the size of the original image (the aspect ratio is not preserved). This is the default mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ImageReplacementMode.UseActualSize">
      <summary>
        <para>The new image maintains its width and height.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.InsertCellsMode">
      <summary>
        <para>Specifies how to insert new cells into a worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.InsertCellsMode.EntireColumn">
      <summary>
        <para>Entire columns are inserted to the left of the specified cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.InsertCellsMode.EntireRow">
      <summary>
        <para>Entire rows are inserted above the specified cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.InsertCellsMode.ShiftCellsDown">
      <summary>
        <para>When inserting new cells in a worksheet, other cells in the same column are shifted down.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.InsertCellsMode.ShiftCellsRight">
      <summary>
        <para>When inserting new cells in a worksheet, other cells in the same row are shifted to the right.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.InvalidFormatExceptionEventHandler">
      <summary>
        <para>A method that will handle the InvalidFormatException event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetInvalidFormatExceptionEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.IRangeProvider">
      <summary>
        <para>Provides properties and methods to get cell ranges.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IRangeProvider.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns a cell range by the indexes of the bounding rows and columns.</para>
      </summary>
      <param name="leftColumnIndex">An integer that is the zero-based index of the left column.</param>
      <param name="topRowIndex">An integer that is the zero-based index of the top row.</param>
      <param name="rightColumnIndex">An integer that is the zero-based index of the right column.</param>
      <param name="bottomRowIndex">An integer that is the zero-based index of the bottom row.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IRangeProvider.GetColumnIndexByName(System.String)">
      <summary>
        <para>Returns the index of the column with the specified heading in the A1 reference style.</para>
      </summary>
      <param name="columnHeading">The heading of the column whose index should be returned.</param>
      <returns>The column’s index. -1, if an invalid columnHeading is specified.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IRangeProvider.GetColumnNameByIndex(System.Int32)">
      <summary>
        <para>Returns the heading of the column with the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the column whose heading should be returned.</param>
      <returns>The column’s heading in the A1 reference style. Null (Nothing in Visual Basic), if the specified index is negative or exceeds the last available index (a worksheet limits the number of columns to 16384).</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.IRangeProvider.Item(System.String)">
      <summary>
        <para>Gets a cell range by its reference string.</para>
      </summary>
      <param name="reference">A string that specifies the cell range reference in the A1 reference style.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.IRangeProvider.Parse(System.String,DevExpress.Spreadsheet.ReferenceStyle)">
      <summary>
        <para>Returns a cell range by its reference string in the specified reference style.</para>
      </summary>
      <param name="reference">A string that is the cell range reference in the reference style specified by the style parameter.</param>
      <param name="style">A <see cref="T:DevExpress.Spreadsheet.ReferenceStyle"/> enumeration member that specifies the cell reference style.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IRangeProvider.Parse(System.String)">
      <summary>
        <para>Returns a cell range by its reference string in the A1 reference style.</para>
      </summary>
      <param name="reference">A string that specifies the cell range reference in the A1 reference style.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IRangeProvider.Union(DevExpress.Spreadsheet.CellRange[])">
      <summary>
        <para>Creates a complex range that is the union of multiple ranges.</para>
      </summary>
      <param name="ranges">An array of <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> composed of multiple ranges.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IRangeProvider.Union(System.Collections.Generic.IEnumerable{DevExpress.Spreadsheet.CellRange})">
      <summary>
        <para>Creates a complex range that is the union of multiple ranges.</para>
      </summary>
      <param name="enumerable">A list of <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> composed of multiple ranges.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IRangeProvider.ValidateReference(System.String,DevExpress.Spreadsheet.ReferenceStyle)">
      <summary>
        <para>Validates the cell reference in accordance with the specified cell reference style.</para>
      </summary>
      <param name="reference">A cell reference to be validated.</param>
      <param name="style">An enumeration member that specifies the cell reference style.</param>
      <returns>true, if the specified cell reference is valid; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IRangeProvider.ValidateReference(System.String)">
      <summary>
        <para>Validates the cell reference in accordance with the cell reference style used in the workbook.</para>
      </summary>
      <param name="reference">A cell reference to be validated.</param>
      <returns>true, if the specified cell reference is valid; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.ISpreadsheetComponent">
      <summary>
        <para>Exposes the basic functionality to manage workbooks.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ActiveSheetChanged">
      <summary>
        <para>Occurs after an active worksheet in a workbook has been changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ActiveSheetChanging">
      <summary>
        <para>Occurs when an active worksheet in a workbook is about to be changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.BeforeEncodingDetection">
      <summary>
        <para>Occurs before detecting the encoding of the loaded CSV or TXT data.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.BeforeExport">
      <summary>
        <para>Occurs before the document is saved (exported to a certain format).</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.BeforeImport">
      <summary>
        <para>Occurs before a document is loaded (imported from an external source).</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.BeforePrintSheet">
      <summary>
        <para>Occurs before printing a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Clipboard">
      <summary>
        <para>Provides access to the object used for working with the system Clipboard.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Spreadsheet.IClipboardManager"/> interface.</value>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ClipboardDataObtained">
      <summary>
        <para>Occurs after data on the Clipboard is obtained and recognized, but before data is actually pasted.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ClipboardDataPasted">
      <summary>
        <para>Occurs after data has been pasted from the Clipboard onto a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ClipboardDataPasting">
      <summary>
        <para>Occurs before data is pasted from the Clipboard.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ColumnsInserted">
      <summary>
        <para>Occurs after new columns have been added to a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ColumnsInserting">
      <summary>
        <para>Occurs when new columns are about to be inserted into a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ColumnsRemoved">
      <summary>
        <para>Occurs after columns have been deleted from a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ColumnsRemoving">
      <summary>
        <para>Occurs when columns are about to be deleted from a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ColumnWidthChanged">
      <summary>
        <para>Occurs after the column width was changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.CommentInserted">
      <summary>
        <para>Occurs when a comment is inserted.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.CommentInserting">
      <summary>
        <para>Occurs before inserting a comment.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.CommentRemoved">
      <summary>
        <para>Occurs when a comment is deleted.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.CommentRemoving">
      <summary>
        <para>Occurs before deleting a comment.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.CopiedRangePasted">
      <summary>
        <para>Occurs after the range content has been pasted into target cells.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.CopiedRangePasting">
      <summary>
        <para>Occurs before the range content is pasted into target cells.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.CreateNewDocument">
      <summary>
        <para>Creates and loads a new empty workbook.</para>
      </summary>
      <returns>true, if the document is created successfully; otherwise, false.</returns>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.CustomAssemblyLoading">
      <summary>
        <para>Occurs before a custom assembly is loaded for use as the Entity Framework data source during mail merge and allows cancelling loading.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.DefinedNameConflictResolving">
      <summary>
        <para>Occurs when a formula or sheet being moved or copied contains the defined name, which already exists on the destination worksheet or workbook.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.DocumentClosing">
      <summary>
        <para>Occurs when a document that has not yet been saved is about to be closed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.DocumentLoaded">
      <summary>
        <para>Occurs after a document is loaded.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.DocumentSaved">
      <summary>
        <para>Occurs after a document has been saved.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.EmptyDocumentCreated">
      <summary>
        <para>Occurs when a new document is created.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.EncryptedFileIntegrityCheckFailed">
      <summary>
        <para>Raises when the encrypted file did not pass the data integrity verification.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.EncryptedFilePasswordCheckFailed">
      <summary>
        <para>Occurs when the encryption password is empty or invalid.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.EncryptedFilePasswordRequest">
      <summary>
        <para>Raises when the <see cref="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Password"/> property is not set or contains a wrong password.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.InitializeDocument">
      <summary>
        <para>Occurs before a document is loaded. Handle this event to set initial document settings.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.InvalidFormatException">
      <summary>
        <para>Fires when the supplied data could not be recognized as data in the assumed format for import.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.LoadDocument(System.Byte[],DevExpress.Spreadsheet.DocumentFormat)">
      <summary>
        <para>Loads a document from a byte array.</para>
      </summary>
      <param name="buffer">A <see cref="T:System.Byte"/>[] object that is an array of bytes containing document data in the specified format.</param>
      <param name="format">A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration member specifying the format of the document to be loaded.</param>
      <returns>true, if the document is successfully loaded; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.LoadDocument(System.Byte[])">
      <summary>
        <para>Loads the document from a <see cref="T:System.Byte"/>[] array.</para>
      </summary>
      <param name="buffer">A System.Byte[] object that is an array of bytes containing document data.</param>
      <returns>true, if the document is loaded successfully; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.LoadDocument(System.IO.Stream,DevExpress.Spreadsheet.DocumentFormat)">
      <summary>
        <para>Loads a document from a stream, specifying the document format.</para>
      </summary>
      <param name="stream">The stream from which to load a document.</param>
      <param name="format">One of the <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> members.</param>
      <returns>true, if a document is loaded successfully; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.LoadDocument(System.IO.Stream)">
      <summary>
        <para>Loads the document from a stream.</para>
      </summary>
      <param name="stream">An <see cref="T:System.IO.Stream"/> object that is the stream from which the document is loaded.</param>
      <returns>true, if the document is loaded successfully; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.LoadDocument(System.String,DevExpress.Spreadsheet.DocumentFormat)">
      <summary>
        <para>Loads a document from a file, specifying the document format.</para>
      </summary>
      <param name="fileName">A string specifying the file to load (including the full path).</param>
      <param name="format">One of the <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> members.</param>
      <returns>true, if a document is loaded successfully; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.LoadDocument(System.String)">
      <summary>
        <para>Loads a document from a file.</para>
      </summary>
      <param name="fileName">A string specifying the file to load (including the full path).</param>
      <returns>true, if a document is loaded successfully; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Modified">
      <summary>
        <para>Gets or sets whether the document content was modified since it was last saved.</para>
      </summary>
      <value>true if the document’s contents was modified; otherwise, false.</value>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ModifiedChanged">
      <summary>
        <para>Occurs when the value of the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Modified"/> property is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Options">
      <summary>
        <para>Provides access to various options which can be specified for the workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DocumentOptions"/> object containing various workbook options.</value>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.PanesFrozen">
      <summary>
        <para>Occurs after a worksheet area has been frozen.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.PanesUnfrozen">
      <summary>
        <para>Occurs after a frozen worksheet area has been unlocked.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.RangeCopied">
      <summary>
        <para>Occurs after the range content has been copied.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.RangeCopying">
      <summary>
        <para>Occurs before a cell range is copied in a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.RowHeightChanged">
      <summary>
        <para>Occurs after the row height was changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.RowsInserted">
      <summary>
        <para>Occurs after new rows have been added to a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.RowsInserting">
      <summary>
        <para>Occurs when new rows are about to be inserted into a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.RowsRemoved">
      <summary>
        <para>Occurs after rows have been deleted from a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.RowsRemoving">
      <summary>
        <para>Occurs when rows are about to be deleted from a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.SaveDocument(DevExpress.Spreadsheet.DocumentFormat,DevExpress.Spreadsheet.EncryptionSettings)">
      <summary>
        <para>Saves a document to an array of bytes in the specified format with the specified encryption settings.</para>
      </summary>
      <param name="format">A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration member specifying the format of the document to be saved.</param>
      <param name="encryptionSettings">Document encryption options.</param>
      <returns>An array of bytes containing document data in the specified format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.SaveDocument(DevExpress.Spreadsheet.DocumentFormat)">
      <summary>
        <para>Saves a document to an array of bytes in the specified format.</para>
      </summary>
      <param name="format">A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration member specifying the format of the document to be saved.</param>
      <returns>A <see cref="T:System.Byte"/>[] object that is an array of bytes containing document data in the specified format.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.SaveDocument(System.IO.Stream,DevExpress.Spreadsheet.DocumentFormat,DevExpress.Spreadsheet.EncryptionSettings)">
      <summary>
        <para>Saves the document to a stream, specifying the document format anf encryption options.</para>
      </summary>
      <param name="stream">The stream used to output the document.</param>
      <param name="format">A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration member specifying the document format.</param>
      <param name="encryptionSettings">Document encryption options.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.SaveDocument(System.IO.Stream,DevExpress.Spreadsheet.DocumentFormat)">
      <summary>
        <para>Saves the document to a stream, specifying the document format.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream"/> object to output the document to.</param>
      <param name="format">One of the <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration values.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.SaveDocument(System.String,DevExpress.Spreadsheet.DocumentFormat,DevExpress.Spreadsheet.EncryptionSettings)">
      <summary>
        <para>Saves the document to a file, specifying the document format and encryption options.</para>
      </summary>
      <param name="fileName">The file path in which to save the document.</param>
      <param name="format">A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration member specifying the document.</param>
      <param name="encryptionSettings">Document encryption options.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.SaveDocument(System.String,DevExpress.Spreadsheet.DocumentFormat)">
      <summary>
        <para>Saves the document to a file, specifying the document format.</para>
      </summary>
      <param name="fileName">A string value specifying the path to a file in which to save the document.</param>
      <param name="format">One of the <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration values.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.SaveDocument(System.String,DevExpress.Spreadsheet.EncryptionSettings)">
      <summary>
        <para>Saves the document to the specified file with the specified encryption options. The file format is identified by the file extension.</para>
      </summary>
      <param name="fileName">The path to a file in which to save the document.</param>
      <param name="encryptionSettings">Document encryption options.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ISpreadsheetComponent.SaveDocument(System.String)">
      <summary>
        <para>Saves the document to the specified file. The file format is identified by the file extension.</para>
      </summary>
      <param name="fileName">A string value specifying the path to a file in which to save the document.</param>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ScrollPositionChanged">
      <summary>
        <para>Occurs when the scroll position changes in a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.SelectionChanged">
      <summary>
        <para>Fires in response to changing cell selection in a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ShapeInserted">
      <summary>
        <para>Occurs after a drawing object has been inserted into a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ShapeRemoved">
      <summary>
        <para>Occurs after a drawing object has been removed from a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ShapeRemoving">
      <summary>
        <para>Occurs before a drawing object is removed from a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ShapesCopying">
      <summary>
        <para>Occurs before a drawing object is copied in a worksheet.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.SheetInserted">
      <summary>
        <para>Occurs after a new worksheet has been added to a workbook.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.SheetRemoved">
      <summary>
        <para>Occurs after a worksheet has been removed from a workbook.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.SheetRemoving">
      <summary>
        <para>Occurs when a worksheet is about to be removed from a workbook.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.SheetRenamed">
      <summary>
        <para>Occurs after a worksheet has been renamed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.SheetRenaming">
      <summary>
        <para>Occurs when a worksheet is about to be renamed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit">
      <summary>
        <para>Gets or sets a unit of measure used in the workbook.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Office.DocumentUnit"/> enumeration member. It is expected to be set to the <see cref="F:DevExpress.Office.DocumentUnit.Document"/> value by default.</value>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.UnitChanged">
      <summary>
        <para>Fires after a unit of measurement used in the workbook is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Spreadsheet.ISpreadsheetComponent.UnitChanging">
      <summary>
        <para>Fires before a unit of measurement used within the workbook is changed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ISupportsFormatting">
      <summary>
        <para>Contains format characteristics that are applied to cells when the condition of the conditional formatting rule is true.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ISupportsFormatting.Formatting">
      <summary>
        <para>Provides access to a set of formatting properties applied to cells when the condition of the conditional formatting rule is true.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formatting"/> object that provides options used to specify cell format attributes (font, background color, alignment options, etc.).</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.IUsedNameSet">
      <summary>
        <para>A set of table and defined names existing in the destination document into which a formula or worksheet containing a conflict name is pasted.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IUsedNameSet.ContainsDefinedName(System.String)">
      <summary>
        <para>Determines whether the specified name already exists in the destination document.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value specifying the name to check.</param>
      <returns>true, if the specified name is already used in the destination document; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.IUsedNameSet.ExistingDefinedNames">
      <summary>
        <para>Provides access to the collection of defined names which already exist in the destination document.</para>
      </summary>
      <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/>&lt;<see cref="T:System.String"/>,&gt; collection of existing defined names.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IUsedNameSet.TableNames">
      <summary>
        <para>Provides access to the set of names assigned to tables in the destination workbook.</para>
      </summary>
      <value>A set of table names.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.IWorkbook">
      <summary>
        <para>A workbook loaded into the Spreadsheet control (for WinForms, WPF, and ASP.NET).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.Calculate">
      <summary>
        <para>Forces recalculation of the workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.Calculate(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Forces recalculation of the specified cell range in a worksheet.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object containing formulas to be recalculated.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.Calculate(DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Forces recalculation of the specified worksheet in a workbook.</para>
      </summary>
      <param name="sheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object containing formulas to be recalculated.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.CalculateFull">
      <summary>
        <para>Forces a full calculation of the data in a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.CalculateFullRebuild">
      <summary>
        <para>Forces a full calculation of cell formulas in a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.ChartSheets">
      <summary>
        <para>Provides access to a collection of chart sheets contained in the workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ChartSheetCollection"/> object that is a collection of chart sheets.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.ColorPalette">
      <summary>
        <para>Returns a color palette for the spreadsheet document.</para>
      </summary>
      <value>A palette of 56 RGB colors.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.CurrentAuthor">
      <summary>
        <para>Gets the system username.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the username of the person currently logged on the operating system.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.CustomFunctions">
      <summary>
        <para>Provides access to a collection of custom functions in a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Functions.CustomFunctionCollection"/> collection of custom functions.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.CustomXmlParts">
      <summary>
        <para>Provides access to a workbook’s collection of custom XML parts.</para>
      </summary>
      <value>A collection of custom XML parts.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.DefinedNames">
      <summary>
        <para>Gets the collection of defined names whose scope is the current workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DefinedNameCollection"/> collection of a workbook’s defined names.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.DocumentProperties">
      <summary>
        <para>Provides access to the document properties associated with a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DocumentProperties"/> object containing information about a workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.DocumentSettings">
      <summary>
        <para>Provides access to the settings that specify how the calculation is performed and what reference style is used.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DocumentSettings"/> object containing settings for the reference style and calculation options.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.Evaluate(System.String,DevExpress.Spreadsheet.Functions.FormulaEvaluationContext)">
      <summary>
        <para>Evaluates the specified formula in a certain context.</para>
      </summary>
      <param name="formula">A string that represents the formula to be evaluated.</param>
      <param name="context">A <see cref="T:DevExpress.Spreadsheet.Functions.FormulaEvaluationContext"/> object containing information on the row, column and the current culture settings.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the calculation result and may contain a value, a reference or a calculation error.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.Evaluate(System.String)">
      <summary>
        <para>Evaluates the specified formula.</para>
      </summary>
      <param name="formula">A string that represents the formula to be evaluated.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Functions.ParameterValue"/> object that is the calculation result and may contain a value, a reference or a calculation error.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToHtml(System.IO.Stream,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Exports the specified range to the specified stream in HTML format.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> object to which the created HTML file should be sent.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object to be exported to HTML.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToHtml(System.IO.Stream,DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Exports the specified worksheet to the specified stream in HTML format.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> object to which the created HTML file should be sent.</param>
      <param name="sheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object to be exported to HTML.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToHtml(System.IO.Stream,DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions)">
      <summary>
        <para>Exports the document’s data to the specified stream in HTML format using the specified options.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> object to which the created HTML file should be sent.</param>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions"/> instance containing required export options.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToHtml(System.IO.Stream,System.Int32)">
      <summary>
        <para>Exports the specified worksheet to the specified stream in HTML format.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> object to which the created HTML file should be sent.</param>
      <param name="sheetIndex">An integer value that is the index of the worksheet to be exported to HTML.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToHtml(System.String,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Exports the specified range to the specified file in HTML format.</para>
      </summary>
      <param name="fileName">A <see cref="T:System.String"/> value which contains the full path (including the file name and extension) specifying where the HTML file will be created.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object to be exported to HTML.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToHtml(System.String,DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Exports the specified worksheet to the specified file in HTML format.</para>
      </summary>
      <param name="fileName">A <see cref="T:System.String"/> value which contains the full path (including the file name and extension) specifying where the HTML file will be created.</param>
      <param name="sheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object to be exported to HTML.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToHtml(System.String,DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions)">
      <summary>
        <para>Exports the document’s data to the specified file in HTML format using the specified options.</para>
      </summary>
      <param name="fileName">A <see cref="T:System.String"/> value which contains the full path (including the file name and extension) specifying where the HTML file will be created.</param>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions"/> instance containing required export options.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToHtml(System.String,System.Int32)">
      <summary>
        <para>Exports the specified worksheet to the specified file in HTML format.</para>
      </summary>
      <param name="fileName">A <see cref="T:System.String"/> value which contains the full path (including the file name and extension) specifying where the HTML file will be created.</param>
      <param name="sheetIndex">An integer value that is the index of the worksheet to be exported to HTML.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToPdf(System.IO.Stream,DevExpress.XtraPrinting.PdfExportOptions)">
      <summary>
        <para>Exports the workbook to the specified stream in PDF format using the specified options.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> object to which the created PDF file should be sent.</param>
      <param name="options">A <see cref="T:DevExpress.XtraPrinting.PdfExportOptions"/> object specifying export settings.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToPdf(System.IO.Stream)">
      <summary>
        <para>Exports the workbook to the specified stream in PDF format.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> object to which the created PDF file should be sent.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToPdf(System.String,DevExpress.XtraPrinting.PdfExportOptions)">
      <summary>
        <para>Exports the workbook to the specified file path in PDF format using the specified options.</para>
      </summary>
      <param name="fileName">A <see cref="T:System.String"/> which specifies the file name (including the full path) for the created PDF file.</param>
      <param name="options">A <see cref="T:DevExpress.XtraPrinting.PdfExportOptions"/> object specifying export settings.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.ExportToPdf(System.String)">
      <summary>
        <para>Exports the workbook to the specified file path in PDF format.</para>
      </summary>
      <param name="fileName">A <see cref="T:System.String"/> which specifies the file name (including the full path) for the created PDF file.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.ExternalWorkbooks">
      <summary>
        <para>Provides access to the collection of source workbooks used for creating external references in the current workbook.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.ExternalWorkbookCollection"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.FormulaEngine">
      <summary>
        <para>Provides access to a FormulaEngine object to parse or evaluate a formula.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Formulas.FormulaEngine"/> object that serves as a formula calculator and parser.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.Functions">
      <summary>
        <para>Provides access to the built-in functions in a workbook.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Spreadsheet.Functions.WorkbookFunctions"/> interface.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.GenerateMailMergeDocuments">
      <summary>
        <para>Performs the mail merge and returns the collection of resulting workbooks.</para>
      </summary>
      <returns>An IList object that contains workbooks generated after the mail merge is preformed.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.GlobalCustomFunctions">
      <summary>
        <para>Provides access to a collection of custom functions which are not limited in scope to the workbook in which the functions reside.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Functions.CustomFunctionCollection"/> collection of custom functions.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.HasMacros">
      <summary>
        <para>Determines whether the workbook has VBA projects (macros).</para>
      </summary>
      <value>true, if a workbook has macros; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.History">
      <summary>
        <para>Provides access to the history of operations performed in a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetHistory"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.IsDisposed">
      <summary>
        <para>Gets a value indicating whether a workbook has been disposed of.</para>
      </summary>
      <value>true, if the workbook has been disposed of; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.IsProtected">
      <summary>
        <para>Gets whether the workbook is protected.</para>
      </summary>
      <value>true, if the workbook is protected; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.MailMergeDataMember">
      <summary>
        <para>Specifies the member of the mail merge data source.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value specifying the data member name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.MailMergeDataSource">
      <summary>
        <para>Specifies the data source for the mail merge.</para>
      </summary>
      <value>An object that specifies the data source from which the merged data is retrieved.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.MailMergeOptions">
      <summary>
        <para>Provides access to the mail merge options.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetMailMergeOptions"/> object containing the mail merge options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.MailMergeParameters">
      <summary>
        <para>Provides access to a collection of parameters for queries used to obtain data in mail merge.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ParametersCollection"/> collection of the <see cref="T:DevExpress.Spreadsheet.Parameter"/> types.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.Model">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.PivotCaches">
      <summary>
        <para>Provides access to the collection of all the PivotTable caches in the specified workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotCacheCollection"/> object that is the collection of the <see cref="T:DevExpress.Spreadsheet.PivotCache"/> objects defined in the current workbook.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.Protect(System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Protects the structure and windows of a workbook.</para>
      </summary>
      <param name="password">A string that specifies a password for the workbook. If an empty string is specified, the workbook can be unprotected without a password.</param>
      <param name="lockStructure">true, to lock the structure of the workbook (the position of the sheets); otherwise, false.</param>
      <param name="lockWindows">true, to prevent users from changing the position of worksheet windows; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.Range">
      <summary>
        <para>Provides access to the cell range in the worbook.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Spreadsheet.IRangeProvider"/> interface.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.RealTimeData">
      <summary>
        <para>Provides access to an object that is used to manually update real-time data and reconnect to data servers.</para>
      </summary>
      <value>An object with the <see cref="T:DevExpress.Spreadsheet.RealTimeData"/> interface.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.Search(System.String,DevExpress.Spreadsheet.SearchOptions)">
      <summary>
        <para>Performs a search in the current document using specified options.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> representing the search text.</param>
      <param name="options">A <see cref="T:DevExpress.Spreadsheet.SearchOptions"/> instance containing required search options.</param>
      <returns>An object implementing the <see cref="T:System.Collections.IEnumerable"/> interface which is the collection of cells that match the search term.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.Search(System.String)">
      <summary>
        <para>Performs a search in the current document using the default parameters.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> representing the search text.</param>
      <returns>An object implementing the <see cref="T:System.Collections.IEnumerable"/> interface which is the collection of cells that match the search term.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.Sheets">
      <summary>
        <para>Provides access to a collection of all sheets contained in the workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SheetCollection"/> object specifying a sheet collection.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.Styles">
      <summary>
        <para>Provides access to the collection of cell styles in the current workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.StyleCollection"/> collection containing cell styles.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.TableStyles">
      <summary>
        <para>Provides access to the collection of styles to format tables and pivot tables in the workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyleCollection"/> object containing table and pivot table styles.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.Tag">
      <summary>
        <para>Gets or sets the data associated with an <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> object.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> that contains arbitrary data for a workbook. The default is null.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.Theme">
      <summary>
        <para>Returns the theme applied to the workbook.</para>
      </summary>
      <value>The document theme.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.IWorkbook.Unprotect(System.String)">
      <summary>
        <para>Removes protection from a workbook.</para>
      </summary>
      <param name="password">A string that specifies the password with which the workbook is protected.</param>
      <returns>true, if protection is successfully removed; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbook.Worksheets">
      <summary>
        <para>Returns the collection of worksheets in a workbook.</para>
      </summary>
      <value>The collection of <see cref="T:DevExpress.Spreadsheet.Worksheet"/> objects.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.IWorkbookMergeResult">
      <summary>
        <para>Contains a result of merging multiple workbooks.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.IWorkbookMergeResult.Workbook">
      <summary>
        <para>Gets or sets a workbook that is the result of merging multiple workbooks.</para>
      </summary>
      <value>An object exposing the <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> interface.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Margins">
      <summary>
        <para>Provides access to page margins used when a worksheet is printed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Margins.Bottom">
      <summary>
        <para>Gets or sets the bottom margin of a worksheet printed page.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the bottom margin in measure units used in the workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Margins.Footer">
      <summary>
        <para>Gets or sets the space between a footer and bottom edge of a worksheet printed page.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the footer margin in measure units used in the workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Margins.Header">
      <summary>
        <para>Gets or sets the space between a header and top edge of a worksheet printed page.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the header margin in measure units used in the workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Margins.Left">
      <summary>
        <para>Gets or sets the left margin of a worksheet printed page.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the left margin in measure units used in the workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Margins.Right">
      <summary>
        <para>Gets or sets the right margin of a worksheet printed page.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the right margin in measure units used in the workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Margins.Top">
      <summary>
        <para>Gets or sets the top margin of a worksheet printed page.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the top margin in measure units used in the workbook.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.MergeCellsMode">
      <summary>
        <para>Lists available modes to merge cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.MergeCellsMode.ByColumns">
      <summary>
        <para>Each column in the specified cell range is merged.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.MergeCellsMode.ByRows">
      <summary>
        <para>Each row in the specified cell range is merged.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.MergeCellsMode.Default">
      <summary>
        <para>If a cell range to be merged intersects other merged cells, a cell range that includes all the intersecting ranges is merged.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.MergeCellsMode.IgnoreIntersections">
      <summary>
        <para>If a cell range to be merged intersects other merged cells, these intersections are ignored.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PageBreaksCollection">
      <summary>
        <para>A collection of page breaks in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PageBreaksCollection.Add(System.Int32)">
      <summary>
        <para>Inserts a page break at the specified row (or column).</para>
      </summary>
      <param name="position">An integer that is the index of a row or a column starting from 1 and not exceeding 1048576 for rows or 16384 for columns.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PageBreaksCollection.Clear">
      <summary>
        <para>Removes all objects from the <see cref="T:DevExpress.Spreadsheet.PageBreaksCollection"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PageBreaksCollection.Contains(System.Int32)">
      <summary>
        <para>Determines whether the collection contains a page break at the specified position (row or column).</para>
      </summary>
      <param name="position">An integer that is the index of a row or a column starting from 1 and not exceeding 1048576 for rows or 16384 for columns.</param>
      <returns>true, if the collection contains a page break at the specified position; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PageBreaksCollection.IndexOf(System.Int32)">
      <summary>
        <para>Returns the position of the item in the collection.</para>
      </summary>
      <param name="position">An integer that is the row or column index to locate in the collection.</param>
      <returns>A zero-based integer which specifies the page break’s position within the collection. &#0045;1 if the page break doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PageBreaksCollection.Remove(System.Int32)">
      <summary>
        <para>Removes page break at the specified row or column index.</para>
      </summary>
      <param name="position">An integer that is the row or column index at which the page break is set.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PageBreaksCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the item at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the item to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PageOrder">
      <summary>
        <para>Contains the values to specify the order in which worksheet pages are numbered and printed when the worksheet data does not fit onto one page.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PageOrder.DownThenOver">
      <summary>
        <para>Worksheet pages are numbered and printed from the top down and then left to right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PageOrder.OverThenDown">
      <summary>
        <para>Worksheet pages are numbered and printed from left to right and then from the top down.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PageOrientation">
      <summary>
        <para>Lists values used to specify the page orientation applied when a worksheet is being printed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PageOrientation.Default">
      <summary>
        <para>Worksheet page orientation is default.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PageOrientation.Landscape">
      <summary>
        <para>Worksheet page orientation is landscape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PageOrientation.Portrait">
      <summary>
        <para>Worksheet page orientation is portrait.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PanesFrozenEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.PanesFrozen event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PanesFrozenEventArgs.#ctor(System.String,System.Int32,System.Int32,DevExpress.XtraSpreadsheet.Model.CellPosition)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.PanesFrozenEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A <see cref="T:System.String"/> that is the name of the worksheet whose area has been frozen.</param>
      <param name="rowOffset">An integer value that is the zero-based offset of the last frozen row relative to the first row in a worksheet or the row that contains the specified cell (the topLeftCell parameter).</param>
      <param name="columnOffset">An integer value that is the zero-based offset of the last frozen column relative to the first column in a worksheet or the column that contains the specified cell (the topLeftCell parameter).</param>
      <param name="topLeftCell">A CellPosition object specifying the position of the cell from which freezing starts.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.PanesFrozenEventArgs.ColumnOffset">
      <summary>
        <para>Gets the offset of the last frozen column relative to the first column in a worksheet or the left-most column with the specified cell from where freezing starts.</para>
      </summary>
      <value>An integer value that specifies the zero-based offset of the last frozen column relative to the first frozen column. &#0045;1, if no columns have been frozen.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PanesFrozenEventArgs.RowOffset">
      <summary>
        <para>Gets the offset of the last frozen row relative to the first row in a worksheet or the top row with the specified cell from where freezing starts.</para>
      </summary>
      <value>An integer value that specifies the zero-based offset of the last frozen row relative to the first frozen row. &#0045;1, if no rows have been frozen.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PanesFrozenEventArgs.TopLeft">
      <summary>
        <para>Gets the cell contained in a top frozen row and/or left-most frozen column from where freezing starts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell from where freezing starts.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PanesFrozenEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.PanesFrozen"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.PanesFrozenEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PanesUnfrozenEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.PanesUnfrozen event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PanesUnfrozenEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.PanesUnfrozenEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the name of the worksheet whose frozen rows and columns have been unlocked.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PanesUnfrozenEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.PanesUnfrozen"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.PanesUnfrozenEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Parameter">
      <summary>
        <para>A single query parameter.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Parameter.Name">
      <summary>
        <para>Gets or sets the name of the object.</para>
      </summary>
      <value>A string that is the name of the object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Parameter.Type">
      <summary>
        <para>Gets or sets the type of an object used as a parameter.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Parameter.Value">
      <summary>
        <para>Gets or sets the object used as a parameter.</para>
      </summary>
      <value>An <see cref="T:System.Object"/>.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ParametersCollection">
      <summary>
        <para>A collection of parameters for queries used in Mail Merge.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ParametersCollection.AddParameter(System.String,System.Object)">
      <summary>
        <para>Adds a <see cref="T:DevExpress.Spreadsheet.Parameter"/> item to the collection with the specified name and value.</para>
      </summary>
      <param name="name">A string that is the parameter’s name.</param>
      <param name="value">A <see cref="T:System.Object"/> that is the parameter’s value.</param>
      <returns>The newly added <see cref="T:DevExpress.Spreadsheet.Parameter"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ParametersCollection.AddParameter(System.String,System.Type,System.Object)">
      <summary>
        <para>Adds a <see cref="T:DevExpress.Spreadsheet.Parameter"/> item to the collection with the specified name, type and value.</para>
      </summary>
      <param name="name">A string that is the parameter’s name.</param>
      <param name="type">A <see cref="T:System.Type"/> of the value.</param>
      <param name="value">A <see cref="T:System.Object"/> that is the parameter’s value.</param>
      <returns>The newly added <see cref="T:DevExpress.Spreadsheet.Parameter"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ParametersCollection.AddParameter(System.String)">
      <summary>
        <para>Adds a <see cref="T:DevExpress.Spreadsheet.Parameter"/> item to the collection with the specified name.</para>
      </summary>
      <param name="name">A string that is the parameter’s name.</param>
      <returns>The newly added <see cref="T:DevExpress.Spreadsheet.Parameter"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ParametersCollection.Clear">
      <summary>
        <para>Removes all elements from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ParametersCollection.Contains(DevExpress.Spreadsheet.Parameter)">
      <summary>
        <para>Determines whether a <see cref="T:DevExpress.Spreadsheet.Parameter"/> element is in the collection.</para>
      </summary>
      <param name="parameter">A <see cref="T:DevExpress.Spreadsheet.Parameter"/> to locate in the collection.</param>
      <returns>true if the element is found in the collection; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ParametersCollection.IndexOf(DevExpress.Spreadsheet.Parameter)">
      <summary>
        <para>Returns the index of the specified  <see cref="T:DevExpress.Spreadsheet.Parameter"/> in the collection.</para>
      </summary>
      <param name="parameter">A <see cref="T:DevExpress.Spreadsheet.Parameter"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the parameter’s position within the collection. &#0045;1 if the parameter doesn’t belong to the collection.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ParametersCollection.Item(System.String)">
      <summary>
        <para>Gets a <see cref="T:DevExpress.Spreadsheet.Parameter"/> with the specified name from a collection.</para>
      </summary>
      <param name="name">A string that is the name of the parameter.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Parameter"/> object contained in the collection.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ParametersCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes a <see cref="T:DevExpress.Spreadsheet.Parameter"/> at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer that is the index of a parameter in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PasteSpecial">
      <summary>
        <para>Specifies the part of data to paste from copied cells into target cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.All">
      <summary>
        <para>Pastes all cell data (formulas, values, and formatting) except column widths.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.Borders">
      <summary>
        <para>Pastes cell borders only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.ColumnWidths">
      <summary>
        <para>Applies column widths only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.Comments">
      <summary>
        <para>Pastes cell comments only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.DataValidations">
      <summary>
        <para>Pastes only data validation rules applied to copied cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.Formats">
      <summary>
        <para>Pastes cell formatting only (font, background, alignment, number format, and borders).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.Formulas">
      <summary>
        <para>Pastes cell constant values (for example, text, numbers, and so on) and formulas (but not their calculated values).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.Hyperlinks">
      <summary>
        <para>Pastes hyperlinks only (without display text).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.NumberFormats">
      <summary>
        <para>Pastes cell number formats only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PasteSpecial.Values">
      <summary>
        <para>Pastes cell values only (including values calculated from formulas, but not formulas themselves).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PatternType">
      <summary>
        <para>Lists patterns to apply to a cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.DarkDown">
      <summary>
        <para>Specifies a pattern that is a series of thick downward diagonal stripes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.DarkGray">
      <summary>
        <para>Specifies the 75% gray pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.DarkGrid">
      <summary>
        <para>Specifies the thick grid pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.DarkHorizontal">
      <summary>
        <para>Specifies a pattern that is a series of thick horizontal stripes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.DarkTrellis">
      <summary>
        <para>Specifies the thick diagonal trellis pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.DarkUp">
      <summary>
        <para>Specifies a pattern that is a series of thick upward diagonal stripes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.DarkVertical">
      <summary>
        <para>Specifies a pattern that is a series of thick vertical stripes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.Gray0625">
      <summary>
        <para>Specifies the 6.25% gray pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.Gray125">
      <summary>
        <para>Specifies the 12.5% gray pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.LightDown">
      <summary>
        <para>Specifies a pattern that is a series of thin downward diagonal stripes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.LightGray">
      <summary>
        <para>Specifies the 25% gray pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.LightGrid">
      <summary>
        <para>Specifies the thin grid pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.LightHorizontal">
      <summary>
        <para>Specifies a pattern that is a series of thin horizontal stripes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.LightTrellis">
      <summary>
        <para>Specifies the thin diagonal trellis pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.LightUp">
      <summary>
        <para>Specifies a pattern that is a series of thin upward diagonal stripes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.LightVertical">
      <summary>
        <para>Specifies a pattern that is a series of thin vertical stripes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.MediumGray">
      <summary>
        <para>Specifies the 50% gray pattern.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.None">
      <summary>
        <para>No background (solid color or fill pattern) is applied to a cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PatternType.Solid">
      <summary>
        <para>Specifies that a cell is filled with a solid <see cref="P:DevExpress.Spreadsheet.Fill.BackgroundColor"/> color.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Picture">
      <summary>
        <para>An image embedded in a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Picture.BorderColor">
      <summary>
        <para>Gets or sets the color of the picture border.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that is the border color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Picture.BorderWidth">
      <summary>
        <para>Gets or sets the width of the picture border.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the width in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Picture.ChangeImage(DevExpress.Spreadsheet.SpreadsheetImageSource,DevExpress.Spreadsheet.ImageReplacementMode)">
      <summary>
        <para>Replaces the current worksheet image with a different image.</para>
      </summary>
      <param name="imageSource">An object used to load the new image.</param>
      <param name="mode">Specifies how to resize the new image. If omitted, <see cref="F:DevExpress.Spreadsheet.ImageReplacementMode.Stretch"/> mode is used.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Picture.ChangeImage(System.Drawing.Image,DevExpress.Spreadsheet.ImageReplacementMode)">
      <summary>
        <para>Replaces the current worksheet image with a different image.</para>
      </summary>
      <param name="image">The new image to insert.</param>
      <param name="mode">Specifies how to resize the new image. If omitted, <see cref="F:DevExpress.Spreadsheet.ImageReplacementMode.Stretch"/> mode is used.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Picture.ChangeImage(System.String,DevExpress.Spreadsheet.ImageReplacementMode)">
      <summary>
        <para>Replaces the current worksheet image with a different image.</para>
      </summary>
      <param name="fileName">The full path to the new image.</param>
      <param name="mode">Specifies how to resize the new image. If omitted, <see cref="F:DevExpress.Spreadsheet.ImageReplacementMode.Stretch"/> mode is used.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Picture.Image">
      <summary>
        <para>Gets the image which the Picture object contains.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Office.Utils.OfficeImage"/> object that is the image residing in a Picture object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Picture.ImageFormat">
      <summary>
        <para>Gets the format of the image residing in the Picture object.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Office.Utils.OfficeImageFormat"/> enumeration member specifying the image file format.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Picture.OriginalHeight">
      <summary>
        <para>Gets the height of an image residing in the Picture object.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the height of an image in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Picture.OriginalWidth">
      <summary>
        <para>Gets the width of an image residing in the Picture object.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the width of an image in units specified by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Picture.RemoveOutline">
      <summary>
        <para>Removes the outside border of a shape (picture).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PictureCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Spreadsheet.Picture"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(DevExpress.Spreadsheet.SpreadsheetImageSource,DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Inserts a picture from the SpreadsheetImageSource object so that the top left corner of the picture is located at the specified cell.</para>
      </summary>
      <param name="imageSource">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object containing an image to insert.</param>
      <param name="topLeftCell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> where the top left corner of the picture is located.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(DevExpress.Spreadsheet.SpreadsheetImageSource,DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Inserts a picture from the SpreadsheetImageSource object to fit in the specified range allowing you to lock the aspect ratio.</para>
      </summary>
      <param name="imageSource">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object containing an image to insert.</param>
      <param name="targetRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> to which the inserted picture fits.</param>
      <param name="lockAspectRatio">true, to lock the aspect ratio; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(DevExpress.Spreadsheet.SpreadsheetImageSource,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Inserts a picture from the SpreadsheetImageSource object to fit in the specified range.</para>
      </summary>
      <param name="imageSource">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object containing an image to insert.</param>
      <param name="targetRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> to which the inserted picture fits.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(DevExpress.Spreadsheet.SpreadsheetImageSource,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
        <para>Inserts a picture from the SpreadsheetImageSource object at the specified location and resize it to the specified dimensions allowing you to lock the aspect ratio.</para>
      </summary>
      <param name="imageSource">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object containing an image to insert.</param>
      <param name="x">A <see cref="T:System.Single"/> value that is the distance from the left of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="y">A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="width">A <see cref="T:System.Single"/> value that is the desired width of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="height">A <see cref="T:System.Single"/> value that is the desired height of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="lockAspectRatio">true, to lock the aspect ratio; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(DevExpress.Spreadsheet.SpreadsheetImageSource,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Inserts a picture from the SpreadsheetImageSource object at the specified location and resize it to the specified dimensions.</para>
      </summary>
      <param name="imageSource">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object containing an image to insert.</param>
      <param name="x">A <see cref="T:System.Single"/> value that is the distance from the left of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="y">A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="width">A <see cref="T:System.Single"/> value that is the desired width of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="height">A <see cref="T:System.Single"/> value that is the desired height of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(DevExpress.Spreadsheet.SpreadsheetImageSource,System.Single,System.Single)">
      <summary>
        <para>Inserts a picture from the SpreadsheetImageSource object at the specified location.</para>
      </summary>
      <param name="imageSource">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object containing an image to insert.</param>
      <param name="x">A <see cref="T:System.Single"/> value that is the distance from the left of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="y">A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.Drawing.Image,DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Inserts a picture from the Image object so that the top left corner of the picture is located at the specified cell.</para>
      </summary>
      <param name="image">A <see cref="T:System.Drawing.Image"/> object that is the image to insert.</param>
      <param name="topLeftCell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> where the top left corner of the picture is located.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.Drawing.Image,DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Inserts an image to fit in the specified range allowing you to lock the aspect ratio.</para>
      </summary>
      <param name="image">A <see cref="T:System.Drawing.Image"/> object that is the image to insert.</param>
      <param name="targetRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> to which the inserted picture fits.</param>
      <param name="lockAspectRatio">true, to lock the aspect ratio; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.Drawing.Image,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Inserts an image to fit in the specified range.</para>
      </summary>
      <param name="image">A <see cref="T:System.Drawing.Image"/> object that is the image to insert.</param>
      <param name="targetRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> to which the inserted picture fits.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
        <para>Inserts a picture from a file at the specified location and resizes it to the specified dimensions allowing you to lock the aspect ratio.</para>
      </summary>
      <param name="image">A string that specifies a path to the image file.</param>
      <param name="x">A <see cref="T:System.Single"/> value that is the distance from the left of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="y">A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="width">A <see cref="T:System.Single"/> value that is the desired width of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="height">A <see cref="T:System.Single"/> value that is the desired height of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="lockAspectRatio">true, to lock the aspect ratio; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Inserts an image at the specified location and resize it to the specified dimensions.</para>
      </summary>
      <param name="image">A <see cref="T:System.Drawing.Image"/> object that is the image to insert.</param>
      <param name="x">A <see cref="T:System.Single"/> value that is the distance from the left of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="y">A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="width">A <see cref="T:System.Single"/> value that is the desired width of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="height">A <see cref="T:System.Single"/> value that is the desired height of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.Drawing.Image,System.Single,System.Single)">
      <summary>
        <para>Inserts a picture from the Image object at the specified location.</para>
      </summary>
      <param name="image">A <see cref="T:System.Drawing.Image"/> object that is the image to insert.</param>
      <param name="x">A <see cref="T:System.Single"/> value that is the distance from the left of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="y">A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.String,DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Inserts a picture from a file so that the top left corner of the picture is located at the specified cell.</para>
      </summary>
      <param name="filename">A string that specifies a path to the image file.</param>
      <param name="topLeftCell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> where the top left corner of the picture is located.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.String,DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Inserts a picture from a file to fit in the specified range allowing you to lock the aspect ratio.</para>
      </summary>
      <param name="filename">A string that specifies a path to the image file.</param>
      <param name="targetRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> to which the inserted picture fits.</param>
      <param name="lockAspectRatio">true, to lock the aspect ratio; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.String,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Inserts a picture from a file to fit in the specified range.</para>
      </summary>
      <param name="filename">A string that specifies a path to the image file.</param>
      <param name="targetRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> to which the inserted picture fits.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
        <para>Inserts a picture from a file at the specified location and resizes it to the specified dimensions allowing you to lock the aspect ratio.</para>
      </summary>
      <param name="filename">A string that specifies a path to the image file.</param>
      <param name="x">A <see cref="T:System.Single"/> value that is the distance from the left of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="y">A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="width">A <see cref="T:System.Single"/> value that is the desired width of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="height">A <see cref="T:System.Single"/> value that is the desired height of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="lockAspectRatio">true, to lock the aspect ratio; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.String,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Inserts a picture from a file at the specified location and resizes it to the specified dimensions.</para>
      </summary>
      <param name="filename">A string that specifies a path to the image file.</param>
      <param name="x">A <see cref="T:System.Single"/> value that is the distance from the left of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="y">A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="width">A <see cref="T:System.Single"/> value that is the desired width of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="height">A <see cref="T:System.Single"/> value that is the desired height of the picture. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.AddPicture(System.String,System.Single,System.Single)">
      <summary>
        <para>Inserts a picture from a file at the specified location.</para>
      </summary>
      <param name="filename">A string that specifies a path to the image file.</param>
      <param name="x">A <see cref="T:System.Single"/> value that is the distance from the left of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <param name="y">A <see cref="T:System.Single"/> value that is the distance from the top of the worksheet. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property specifies the unit of measurement.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object that is the inserted picture.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.Clear">
      <summary>
        <para>Removes all objects from the <see cref="T:DevExpress.Spreadsheet.PictureCollection"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.Contains(DevExpress.Spreadsheet.Picture)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="picture">A string that is the picture name.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.GetPictureById(System.Int32)">
      <summary>
        <para>Gets a picture by its ID value.</para>
      </summary>
      <param name="id">An integer value specifying the picture’s unique identifier.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object representing the picture with the specified identifier.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.GetPicturesByName(System.String)">
      <summary>
        <para>Gets picture(s) by name.</para>
      </summary>
      <param name="pictureName">A string that is the name of a picture.</param>
      <returns>A collection of pictures with the same name.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.IndexOf(DevExpress.Spreadsheet.Picture)">
      <summary>
        <para>Returns the index of the specified picture in the collection.</para>
      </summary>
      <param name="picture">A <see cref="T:DevExpress.Spreadsheet.Picture"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the picture position within the collection. &#0045;1 if the picture doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PictureCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the element at the specified index of the <see cref="T:DevExpress.Spreadsheet.PictureCollection"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the object to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotAxisType">
      <summary>
        <para>Lists values used to specify areas in the PivotTable report to which a <see cref="T:DevExpress.Spreadsheet.PivotField"/> may belong.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotAxisType.Column">
      <summary>
        <para>Specifies that a field is displayed in the column axis area of a pivot table.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotAxisType.None">
      <summary>
        <para>Specifies that a field is not added to a pivot table.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotAxisType.Page">
      <summary>
        <para>Specifies that a field is displayed in the filter area of a pivot table.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotAxisType.Row">
      <summary>
        <para>Specifies that a field is displayed in the row axis area of a pivot table.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotAxisType.Value">
      <summary>
        <para>Specifies that a field is displayed in the data area of a pivot table.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotBaseItemType">
      <summary>
        <para>Lists types of base items that can be used by the “Show Values As” calculation options.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotBaseItemType.Next">
      <summary>
        <para>Specifies that the value of the next item is used to calculate the value of the current item in the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotBaseItemType.Previous">
      <summary>
        <para>Specifies that the value of the previous item is used to calculate the value of the current item in the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotBaseItemType.Specified">
      <summary>
        <para>Indicates that the value of a specific item is used for a custom calculation.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotBehaviorOptions">
      <summary>
        <para>Contains options that allow you to restrict specific operations in the PivotTable report.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotBehaviorOptions.AllowMultipleFieldFilters">
      <summary>
        <para>Gets or sets a value indicating whether fields in the pivot table can have multiple filters applied to them at the same time.</para>
      </summary>
      <value>true, to use more than one filter for a PivotTable field; otherwise, false.The default value is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotBehaviorOptions.AutoFitColumns">
      <summary>
        <para>Gets or sets a value indicating whether column widths should be automatically resized when the pivot table is recalculated or refreshed.</para>
      </summary>
      <value>true, to automatically adjust column widths each time the pivot table is updated; otherwise, false.The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotBehaviorOptions.EnableFieldList">
      <summary>
        <para>Gets or sets a value indicating whether the PivotTable Field List can be invoked for the current pivot table.</para>
      </summary>
      <value>true, to enable the capability to display the Field List; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotBehaviorOptions.EnableGridDropZones">
      <summary>
        <para>Specifies whether to display in-grid drop zones for a pivot table.</para>
      </summary>
      <value>true to enable in-grid drop zones; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotCache">
      <summary>
        <para>Represents the data cache for a PivotTable report.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCache.CacheType">
      <summary>
        <para>Gets the type of the <see cref="T:DevExpress.Spreadsheet.PivotCache"/> source.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotCacheType"/> enumeration member that specifies the cache type.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCache.Refresh">
      <summary>
        <para>Refreshes the PivotTable cache to get the latest data from the data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCache.RefreshDate">
      <summary>
        <para>Returns the date when the PivotTable cache was last refreshed.</para>
      </summary>
      <value>The last refresh date.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCache.RefreshedBy">
      <summary>
        <para>Returns the name of the user who last refreshed the PivotTable cache.</para>
      </summary>
      <value>The user name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCache.RefreshOnLoad">
      <summary>
        <para>Specifies whether to refresh the PivotTable cache when the document is opened.</para>
      </summary>
      <value>true to refresh the pivot cache when you open the workbook; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCache.SaveData">
      <summary>
        <para>Specifies whether to save the cached source data with a workbook.</para>
      </summary>
      <value>true to save the cached data with the document; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCache.SourceRange">
      <summary>
        <para>Gets the source cell range whose data are stored in the <see cref="T:DevExpress.Spreadsheet.PivotCache"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that represents a cell range containing the source data.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotCacheCollection">
      <summary>
        <para>Represents the collection of data caches from the PivotTable reports in a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCacheCollection.RefreshAll">
      <summary>
        <para>Refreshes all pivot caches in the workbook.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotCacheType">
      <summary>
        <para>Lists values that specify the cache type of the PivotTable report.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotCacheType.Consolidation">
      <summary>
        <para>Indicates that the cache contains data that consolidates ranges.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotCacheType.External">
      <summary>
        <para>Indicates that the cache contains data from an external data source.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotCacheType.Scenario">
      <summary>
        <para>Indicates that the cache contains a scenario summary report.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotCacheType.Worksheet">
      <summary>
        <para>Indicates that the cache contains worksheet data.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotCalculatedFieldCollection">
      <summary>
        <para>A collection of calculated fields in a PivotTable report.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.Add(System.String,System.String)">
      <summary>
        <para>Creates a new calculated field with the specified name and appends this field to the collection.</para>
      </summary>
      <param name="formula">The formula used to calculate field values.</param>
      <param name="name">The field name.</param>
      <returns>The newly created calculated field.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.Add(System.String)">
      <summary>
        <para>Creates a new calculated field and appends it to the collection.</para>
      </summary>
      <param name="formula">The formula used to calculate field values.</param>
      <returns>The newly created calculated field.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.Clear">
      <summary>
        <para>Removes all calculated fields from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.Contains(DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Determines whether the collection contains the specified field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies a calculated field to locate in the collection.</param>
      <returns>true, if the collection contains the specified field; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.First">
      <summary>
        <para>Returns the first calculated field in the <see cref="T:DevExpress.Spreadsheet.PivotCalculatedFieldCollection"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that represents the calculated field at the first position in the collection. null (Nothing in Visual Basic) if the collection is empty.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.IndexOf(DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Returns the index of the specified calculated field in the collection.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies the calculated field to locate in the collection.</param>
      <returns>A zero-based integer which specifies the field’s position within the collection. &#0045;1 if the field doesn’t belong to the collection.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.Item(System.String)">
      <summary>
        <para>Provides access to an individual calculated field in the collection by its name.</para>
      </summary>
      <param name="name">A string that specifies the name of the calculated field to be obtained.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that is a calculated field with the specified name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.Last">
      <summary>
        <para>Returns the last calculated field in the <see cref="T:DevExpress.Spreadsheet.PivotCalculatedFieldCollection"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that represents the calculated field at the last position in the collection. null (Nothing in Visual Basic) if the collection is empty.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.Remove(DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Removes the specified calculated field from the collection.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies the calculated field to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedFieldCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the calculated field at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the calculated field to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotCalculatedItemCollection">
      <summary>
        <para>Represents a collection of calculated items in a PivotTable field.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedItemCollection.Add(System.String,System.String)">
      <summary>
        <para>Creates a new calculated item and appends it to the collection.</para>
      </summary>
      <param name="formula">A <see cref="T:System.String"/> value that specifies the formula for the item.</param>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name of the item.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object that specifies the newly created calculated item.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedItemCollection.Add(System.String)">
      <summary>
        <para>Creates a new calculated item and appends it to the collection.</para>
      </summary>
      <param name="formula">A <see cref="T:System.String"/> value that specifies the formula for the item.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object that specifies the newly created calculated item.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedItemCollection.Clear">
      <summary>
        <para>Removes all calculated items from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedItemCollection.Contains(DevExpress.Spreadsheet.PivotItem)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object that specifies a calculated item to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCalculatedItemCollection.First">
      <summary>
        <para>Returns the first calculated item in the <see cref="T:DevExpress.Spreadsheet.PivotCalculatedItemCollection"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object that represents the calculated item at the first position in the collection. null (Nothing in Visual Basic) if the collection is empty.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedItemCollection.IndexOf(DevExpress.Spreadsheet.PivotItem)">
      <summary>
        <para>Returns the index of the specified calculated item in the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object that specifies the calculated item to locate in the collection.</param>
      <returns>A zero-based integer which specifies the item’s position within the collection. &#0045;1 if the item doesn’t belong to the collection.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotCalculatedItemCollection.Last">
      <summary>
        <para>Returns the last calculated item in the <see cref="T:DevExpress.Spreadsheet.PivotCalculatedItemCollection"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object that represents the calculated item at the last position in the collection. null (Nothing in Visual Basic) if the collection is empty.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedItemCollection.Remove(DevExpress.Spreadsheet.PivotItem)">
      <summary>
        <para>Removes the specified calculated item from the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object that specifies the calculated item to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotCalculatedItemCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the calculated item at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the calculated item to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotDataConsolidationFunction">
      <summary>
        <para>Lists aggregation functions to apply to data fields in a PivotTable report.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.Average">
      <summary>
        <para>The average of the values.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.Count">
      <summary>
        <para>The number of nonempty values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.CountNumbers">
      <summary>
        <para>The number of numeric values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.Max">
      <summary>
        <para>The largest value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.Min">
      <summary>
        <para>The smallest value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.Product">
      <summary>
        <para>The product of the values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.StdDev">
      <summary>
        <para>An estimate of the standard deviation of a population, where the sample is a subset of the entire population.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.StdDevp">
      <summary>
        <para>The standard deviation of a population, where the population is all of the data to be summarized.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.Sum">
      <summary>
        <para>The sum of the values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.Var">
      <summary>
        <para>An estimate of the variance of a population, where the sample is a subset of the entire population.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotDataConsolidationFunction.Varp">
      <summary>
        <para>The variance of a population, where the population is all of the data to be summarized.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotDataField">
      <summary>
        <para>Represents a reference to a <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that is currently shown as a data field.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotDataField.BaseField">
      <summary>
        <para>Returns the base field used by the “Show Values As” calculation option applied to the data field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that represents the base field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotDataField.BaseItem">
      <summary>
        <para>Returns the base item used by the “Show Values As” calculation option applied to the data field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object that represents the base item.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotDataField.BaseItemType">
      <summary>
        <para>Returns the type of the base item used by the “Show Values As” calculation option applied to the data field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotBaseItemType"/> object that specifies the base item type.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataField.GetPivotData(DevExpress.Spreadsheet.PivotItemReference[])">
      <summary>
        <para>Retrieves summary data for the specified items of the pivot table.</para>
      </summary>
      <param name="references">An array of <see cref="T:DevExpress.Spreadsheet.PivotItemReference"/> objects specifying references to the report’s items that describe data to be retrieved.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that represents the retrieved value.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotDataField.Name">
      <summary>
        <para>Gets or sets the name of the data field.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of the data field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotDataField.NumberFormat">
      <summary>
        <para>Specifies a number format (in the invariant culture) used to display summary values within the data field.</para>
      </summary>
      <value>The number format to apply to the data field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotDataField.NumberFormatLocal">
      <summary>
        <para>Specifies a local number format used to display summary values within the data field.</para>
      </summary>
      <value>The number format to apply to the data field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotDataField.ShowValuesAs">
      <summary>
        <para>Gets the type of calculation applied to the data field in addition to the actual value of the field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotShowValuesAsType"/> enumeration member specifying how summary values are displayed within the data field.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataField.ShowValuesWithCalculation(DevExpress.Spreadsheet.PivotShowValuesAsType,DevExpress.Spreadsheet.PivotField,DevExpress.Spreadsheet.PivotBaseItemType)">
      <summary>
        <para>Applies the “Show values as” calculation option to the data field to change the way summary values are displayed within the report.</para>
      </summary>
      <param name="calculationType">A <see cref="T:DevExpress.Spreadsheet.PivotShowValuesAsType"/> enumeration member specifying how summary values should be displayed within the data field.</param>
      <param name="baseField">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies a base field for a custom calculation.</param>
      <param name="baseItemType">A <see cref="T:DevExpress.Spreadsheet.PivotBaseItemType"/> enumeration member specifying whether the previous or next item in the base field should be used as the basis for calculation.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataField.ShowValuesWithCalculation(DevExpress.Spreadsheet.PivotShowValuesAsType,DevExpress.Spreadsheet.PivotField,DevExpress.Spreadsheet.PivotItem)">
      <summary>
        <para>Applies the “Show values as” calculation option to the data field to change the way summary values are displayed within the report.</para>
      </summary>
      <param name="calculationType">A <see cref="T:DevExpress.Spreadsheet.PivotShowValuesAsType"/> enumeration member specifying how summary values should be displayed within the data field.</param>
      <param name="baseField">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies a base field for a custom calculation.</param>
      <param name="baseItem">A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object specifying a base item in the base field that should be used for calculation.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataField.ShowValuesWithCalculation(DevExpress.Spreadsheet.PivotShowValuesAsType,DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Applies the “Show values as” calculation option to the data field to change the way summary values are displayed within the report.</para>
      </summary>
      <param name="calculationType">A <see cref="T:DevExpress.Spreadsheet.PivotShowValuesAsType"/> enumeration member specifying how summary values should be displayed within the data field.</param>
      <param name="baseField">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies a base field for a custom calculation.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataField.ShowValuesWithCalculation(DevExpress.Spreadsheet.PivotShowValuesAsType)">
      <summary>
        <para>Applies the “Show values as” calculation option to the data field to change the way summary values are displayed within the report.</para>
      </summary>
      <param name="calculationType">A <see cref="T:DevExpress.Spreadsheet.PivotShowValuesAsType"/> enumeration member specifying how summary values should be displayed within the data field.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataField.ShowValuesWithoutCalculation">
      <summary>
        <para>Shows summary values in the data field “as-is”, with no additional calculation applied to the actual value of the field.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotDataField.SummarizeValuesBy">
      <summary>
        <para>Gets or sets the summary function used to calculate values in the data field.</para>
      </summary>
      <value>An enumeration value that specifies the summary function used by the data field.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotDataFieldCollection">
      <summary>
        <para>Represents a collection of fields located in the data area of a PivotTable report.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.Add(DevExpress.Spreadsheet.PivotField,System.String,DevExpress.Spreadsheet.PivotDataConsolidationFunction)">
      <summary>
        <para>Adds a field to the data area of a PivotTable report.</para>
      </summary>
      <param name="field">A field that should be added to the data area.</param>
      <param name="name">A name for the data field. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.PivotDataField.Name"/> property.</param>
      <param name="summarizeValuesBy">A summary function used to calculate values in the data field. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.PivotDataField.SummarizeValuesBy"/> property.</param>
      <returns>The data field added to the pivot table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.Add(DevExpress.Spreadsheet.PivotField,System.String)">
      <summary>
        <para>Adds a field to the data area of a PivotTable report.</para>
      </summary>
      <param name="field">A field that should be added to the data area.</param>
      <param name="name">A name for the data field. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.PivotDataField.Name"/> property.</param>
      <returns>The data field added to the pivot table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.Add(DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Adds a field to the data area of a PivotTable report.</para>
      </summary>
      <param name="field">A field that should be added to the data area.</param>
      <returns>The data field added to the pivot table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.Clear">
      <summary>
        <para>Removes all data fields from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.Contains(DevExpress.Spreadsheet.PivotDataField)">
      <summary>
        <para>Determines whether the collection contains the specified data field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotDataField"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified data field; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.IndexOf(DevExpress.Spreadsheet.PivotDataField)">
      <summary>
        <para>Returns the index of the specified data field in the collection.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotDataField"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the field’s position within the collection. &#0045;1 if the field doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.Insert(System.Int32,DevExpress.Spreadsheet.PivotField,System.String,DevExpress.Spreadsheet.PivotDataConsolidationFunction)">
      <summary>
        <para>Inserts a field into the data area of a PivotTable report at the specified position.</para>
      </summary>
      <param name="index">A zero-based index that specifies where to insert the data field.</param>
      <param name="field">A field that should be added to the data area.</param>
      <param name="name">A name for the data field. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.PivotDataField.Name"/> property.</param>
      <param name="summarizeValuesBy">A summary function used to calculate values in the data field. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.PivotDataField.SummarizeValuesBy"/> property.</param>
      <returns>The data field added to the pivot table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.Insert(System.Int32,DevExpress.Spreadsheet.PivotField,System.String)">
      <summary>
        <para>Inserts a field into the data area of a PivotTable report at the specified position.</para>
      </summary>
      <param name="index">A zero-based index that specifies where to insert the data field.</param>
      <param name="field">A field that should be added to the data area.</param>
      <param name="name">A name for the data field. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.PivotDataField.Name"/> property.</param>
      <returns>The data field added to the pivot table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.Insert(System.Int32,DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Inserts a field into the data area of a PivotTable report at the specified position.</para>
      </summary>
      <param name="index">A zero-based index that specifies where to insert the data field.</param>
      <param name="field">A field that should be added to the data area.</param>
      <returns>The data field added to the pivot table.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotDataFieldCollection.Item(System.String)">
      <summary>
        <para>Provides access to an individual data field in the collection by its name.</para>
      </summary>
      <param name="name">A string that specifies the name of the data field to be obtained. This value matches the value of the <see cref="P:DevExpress.Spreadsheet.PivotDataField.Name"/> property.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotDataField"/> object that is a data field with the specified name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.Remove(DevExpress.Spreadsheet.PivotDataField)">
      <summary>
        <para>Removes the specified data field from the collection.</para>
      </summary>
      <param name="dataField">A <see cref="T:DevExpress.Spreadsheet.PivotDataField"/> object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotDataFieldCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the data field at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the data field to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotField">
      <summary>
        <para>Represents a field in a PivotTable report.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.Axis">
      <summary>
        <para>Returns the region of the pivot table where the current field is displayed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotAxisType"/> enumeration value specifying the PivotTable region.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.Behavior">
      <summary>
        <para>Provides access to an object that allows you to restrict operations with the current PivotTable field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFieldBehaviorOptions"/> object containing restriction specifications.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.CalculatedItems">
      <summary>
        <para>Provides access to the collection of calculated items added to the PivotTable field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotCalculatedItemCollection"/> object specifying the PivotField’s collection of calculated items.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.Formula">
      <summary>
        <para>Gets or sets the formula for the calculated field.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that is the calculated field’s formula.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.GroupingInfo">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Spreadsheet.PivotFieldGroupingInfo"/> interface which provides information on grouping applied to the field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFieldGroupingInfo"/> interface.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.GroupItems(DevExpress.Spreadsheet.PivotFieldGroupByType)">
      <summary>
        <para>Performs grouping of the specified type in the current field.</para>
      </summary>
      <param name="groupBy">A <see cref="T:DevExpress.Spreadsheet.PivotFieldGroupByType"/> enumeration member that determines how the field should be grouped.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.GroupItems(DevExpress.Spreadsheet.PivotGroupingValue,DevExpress.Spreadsheet.PivotGroupingValue,System.Double,DevExpress.Spreadsheet.PivotFieldGroupByType)">
      <summary>
        <para>Performs field grouping using the specified grouping properties.</para>
      </summary>
      <param name="startValue">A <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> object that specifies the starting value.</param>
      <param name="endValue">A <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> object that specifies the ending value.</param>
      <param name="interval">A <see cref="T:System.Double"/> value that specifies the grouping interval for numeric range grouping or the number of days
to group by in date range grouping.</param>
      <param name="groupBy">A <see cref="T:DevExpress.Spreadsheet.PivotFieldGroupByType"/> enumeration value or a combination of values that specifies the grouping.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.GroupItems(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
        <para>Groups the specified items in the field.</para>
      </summary>
      <param name="itemIndices">A list containing indices of the items to group.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.GroupItems(System.DateTime,System.DateTime,System.Int32,DevExpress.Spreadsheet.PivotFieldGroupByType)">
      <summary>
        <para>Performs grouping by dates in the specified interval.</para>
      </summary>
      <param name="startValue">A <see cref="T:System.DateTime"/> value that is the start of the time interval to group.</param>
      <param name="endValue">A <see cref="T:System.DateTime"/> value that is the end of the time interval to group.</param>
      <param name="interval">An integer that is the number of days in each group. Applicable if the grouping type is <see cref="F:DevExpress.Spreadsheet.PivotFieldGroupByType.Days"/>.</param>
      <param name="groupBy">A <see cref="T:DevExpress.Spreadsheet.PivotFieldGroupByType"/> enumeration value or a combination of values which specifies how the pivot field is grouped.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.GroupItems(System.Double,System.Double,System.Double)">
      <summary>
        <para>Performs numeric grouping in the current field.</para>
      </summary>
      <param name="startValue">A <see cref="T:System.Double"/> value that is the smallest value to be grouped. If this argument is omitted or null, the smallest value in the field is used.</param>
      <param name="endValue">A <see cref="T:System.Double"/> value that is the largest value to be grouped. If this argument is omitted or null, the largest value in the field is used.</param>
      <param name="interval">A <see cref="T:System.Double"/> value that specifies an interval for each group. If this argument is omitted, the group interval is calculated automatically.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.IncludeNewItemsInFilter">
      <summary>
        <para>Gets or sets a value indicating whether new items should appear in the field when manual filtering is applied to it.</para>
      </summary>
      <value>true, to include new items in a manual filter; otherwise, false. The default is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.Items">
      <summary>
        <para>Provides access to the collection of items in the specified PivotTable field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotItemCollection"/> object specifying the PivotField’s collection of items.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.Layout">
      <summary>
        <para>Provides access to settings used to adjust the layout of the <see cref="T:DevExpress.Spreadsheet.PivotField"/> object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFieldLayout"/> object containing layout settings for a pivot field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.Name">
      <summary>
        <para>Gets or sets the PivotTable field’s name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of the pivot field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.NumberFormat">
      <summary>
        <para>Specifies a number format (in the invariant culture) used to display numeric values (for example, date and time) within the PivotTable field.</para>
      </summary>
      <value>The number format to apply to the pivot field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.NumberFormatLocal">
      <summary>
        <para>Specifies a local number format used to display numeric values (for example, date and time) within the PivotTable field.</para>
      </summary>
      <value>The number format to apply to the pivot field.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.SetSubtotal(DevExpress.Spreadsheet.PivotSubtotalFunctions)">
      <summary>
        <para>Specifies the function(s) to calculate subtotals for the PivotTable field.</para>
      </summary>
      <param name="type">The <see cref="T:DevExpress.Spreadsheet.PivotSubtotalFunctions"/> enumeration members specifying one or more functions used to calculate subtotals for the field.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.SetSubtotalAutomatic">
      <summary>
        <para>Displays automatic subtotals for the PivotTable field.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.ShowAllItems">
      <summary>
        <para>Displays all items in the PivotTable field.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.ShowHeaderDropDown">
      <summary>
        <para>Specifies whether or not to show a drop-down button on the field header.</para>
      </summary>
      <value>true to show the drop-down button for the field; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.ShowSingleItem(System.Int32)">
      <summary>
        <para>Displays the specified item in the PivotTable field.</para>
      </summary>
      <param name="itemIndex">A zero-based integer value that specifies the index of the item to be displayed. If it’s negative or exceeds the number of items in the field, an exception is raised.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.Sort">
      <summary>
        <para>Provides access to the sort options of the PivotTable field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFieldSortOptions"/> object containing the field’s sort options.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.SortItems(DevExpress.Spreadsheet.PivotFieldSortType,System.Int32,DevExpress.Spreadsheet.PivotItemReference[])">
      <summary>
        <para>Sorts items in the current pivot field based on values in the specified data field.</para>
      </summary>
      <param name="sortType">One of the <see cref="T:DevExpress.Spreadsheet.PivotFieldSortType"/> enumeration values specifying the sort order.</param>
      <param name="dataFieldIndex">An integer value that is the zero-based index of the data field in the <see cref="T:DevExpress.Spreadsheet.PivotDataFieldCollection"/> collection to sort by.</param>
      <param name="itemReferences">An array of <see cref="T:DevExpress.Spreadsheet.PivotItemReference"/> objects representing references to the report’s items that specify a row or column in the data area on which to base sorting.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.SortItems(DevExpress.Spreadsheet.PivotFieldSortType,System.Int32,System.Collections.Generic.IEnumerable{DevExpress.Spreadsheet.PivotItemReference})">
      <summary>
        <para>Sorts items in the current pivot field based on values in the specified data field.</para>
      </summary>
      <param name="sortType">One of the <see cref="T:DevExpress.Spreadsheet.PivotFieldSortType"/> enumeration values specifying the sort order.</param>
      <param name="dataFieldIndex">An integer value that is the zero-based index of the data field in the <see cref="T:DevExpress.Spreadsheet.PivotDataFieldCollection"/> collection to sort by.</param>
      <param name="itemReferences">A collection of <see cref="T:DevExpress.Spreadsheet.PivotItemReference"/> objects representing references to the report’s items that specify a row or column in the data area on which to base sorting.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.SortType">
      <summary>
        <para>Gets or sets the type of sort to apply to the PivotTable field.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.PivotFieldSortType"/> enumeration values specifying the sort order.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.SourceName">
      <summary>
        <para>Gets the name of the pivot field as it appears in the PivotTable’s source data.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of the field in the original source data.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.SubtotalCaption">
      <summary>
        <para>Gets or sets the text to be displayed in the field’s subtotal row or column heading.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the custom subtotal label.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.SubtotalFunctions">
      <summary>
        <para>Gets the function(s) used to subtotal the PivotTable field.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Spreadsheet.PivotSubtotalFunctions"/> enumeration members representing one or more functions used to calculate subtotals for the current field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotField.SubtotalType">
      <summary>
        <para>Gets the type of subtotals displayed for the PivotTable field.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotSubtotalType"/> enumeration value specifying the subtotal type.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.UngroupItems">
      <summary>
        <para>Removes grouping for the current field.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotField.UngroupItems(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
        <para>Removes the specified items from grouping.</para>
      </summary>
      <param name="itemIndices">A list of item indices to remove from grouping.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldBehaviorOptions">
      <summary>
        <para>Contains options that allow you to restrict an end-user’s ability to move or remove a PivotTable field.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldBehaviorOptions.DragOffAllowed">
      <summary>
        <para>Gets or sets a value indicating whether the field can be removed from the pivot table.</para>
      </summary>
      <value>true, if the field can be removed from the pivot table; otherwise, false.The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldBehaviorOptions.DragToColumnAxisAllowed">
      <summary>
        <para>Gets or sets a value indicating whether the field can be moved to the column axis area of the pivot table.</para>
      </summary>
      <value>true, if the field can be moved to the column axis area; otherwise, false.The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldBehaviorOptions.DragToDataAllowed">
      <summary>
        <para>Gets or sets a value indicating whether the field can be moved to the data area of the pivot table.</para>
      </summary>
      <value>true, if the field can be moved to the data area; otherwise, false.The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldBehaviorOptions.DragToPageAllowed">
      <summary>
        <para>Gets or sets a value indicating whether the field can be moved to the PivotTable report filter area.</para>
      </summary>
      <value>true, if the field can be moved to the report filter area; otherwise, false.The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldBehaviorOptions.DragToRowAxisAllowed">
      <summary>
        <para>Gets or sets a value indicating whether the field can be moved to the row axis area of the pivot table.</para>
      </summary>
      <value>true, if the field can be moved to the row axis area; otherwise, false.The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldBehaviorOptions.MultipleItemSelectionAllowed">
      <summary>
        <para>Gets or sets a value indicating whether the field can have multiple items selected if it is located in the report filter area.</para>
      </summary>
      <value>true, to enable multiple item selection for the field in the report filter area; otherwise, false.The default value is false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldCollection">
      <summary>
        <para>Represents the collection of all fields in a PivotTable report.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldCollection.Contains(DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Determines whether the collection contains the specified field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified field; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldCollection.IndexOf(DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Returns the index of the specified  <see cref="T:DevExpress.Spreadsheet.PivotField"/> in the collection.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the field’s position within the collection. &#0045;1 if the field doesn’t belong to the collection.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldCollection.Item(System.String)">
      <summary>
        <para>Provides access to an individual field in the collection by its name.</para>
      </summary>
      <param name="name">A string that specifies the name of the field to be obtained. This value matches the value of the <see cref="P:DevExpress.Spreadsheet.PivotField.Name"/> property.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that is a pivot field with the specified name.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldGroupByType">
      <summary>
        <para>Lists values that specify how items of a row or column field are grouped.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldGroupByType.Days">
      <summary>
        <para>Groups items in the date or time field by days.</para>
        <para>The number of days included in each group is defined by the interval parameter of the PivotField.GroupItems method and returned by the <see cref="P:DevExpress.Spreadsheet.PivotFieldGroupingInfo.Interval"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldGroupByType.Hours">
      <summary>
        <para>Groups items in the date or time field by hours, regardless of the date to which the current date/time value belongs.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldGroupByType.Minutes">
      <summary>
        <para>Groups items in the date or time field by minutes, regardless of the date to which the current date/time value belongs.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldGroupByType.Months">
      <summary>
        <para>Groups items in the date or time field by months.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldGroupByType.None">
      <summary>
        <para>Indicates that field items are not grouped.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldGroupByType.NumericRanges">
      <summary>
        <para>Groups items in a numeric field into intervals.</para>
        <para>The interval length is defined by the interval parameter of the PivotField.GroupItems method and returned by <see cref="P:DevExpress.Spreadsheet.PivotFieldGroupingInfo.Interval"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldGroupByType.Quarters">
      <summary>
        <para>Groups items in the date or time field by quarters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldGroupByType.Seconds">
      <summary>
        <para>Groups items in the date or time field by seconds, regardless of the date to which the current date/time value belongs.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldGroupByType.Years">
      <summary>
        <para>Groups items in the date or time field by years.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldGroupingInfo">
      <summary>
        <para>Provides access to range grouping characteristics.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldGroupingInfo.BaseFieldIndex">
      <summary>
        <para>Gets an index of the field in the <see cref="P:DevExpress.Spreadsheet.PivotTable.Fields"/> collection.</para>
      </summary>
      <value>An integer that is the index of the pivot field in the <see cref="T:DevExpress.Spreadsheet.PivotFieldCollection"/>.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldGroupingInfo.DefaultEndValue">
      <summary>
        <para>Gets the default ending range value which is the maximum value of the field data.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> instance containing the maximum value of the current field data which has the <see cref="P:DevExpress.Spreadsheet.PivotGroupingValue.AutoValue"/> set to true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldGroupingInfo.DefaultStartValue">
      <summary>
        <para>Gets the default starting range value which is the minimum value of the field data.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> instance containing the minimum value of the current field data and having the <see cref="P:DevExpress.Spreadsheet.PivotGroupingValue.AutoValue"/> set to true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldGroupingInfo.EndValue">
      <summary>
        <para>Gets the ending value for range grouping.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> instance containing the ending value of the range used for grouping in the current field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldGroupingInfo.GroupBy">
      <summary>
        <para>Gets the grouping type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFieldGroupByType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldGroupingInfo.Interval">
      <summary>
        <para>Gets the grouping interval for numeric range grouping, for date range grouping returns number of days to group by.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that indicates the size of each group.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldGroupingInfo.StartValue">
      <summary>
        <para>Gets the starting value for range grouping.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> instance containing the starting value of the range used for grouping in the current field.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldLayout">
      <summary>
        <para>Contains layout settings for a PivotTable field.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldLayout.Compact">
      <summary>
        <para>Gets or sets a value indicating whether item labels from the next row field should be displayed in the same column as the current row field.</para>
      </summary>
      <value>true, to display the next row field in the same column; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldLayout.InsertBlankRowAfterEachItem">
      <summary>
        <para>Gets or sets a value indicating whether a blank row should be inserted after each item in the current row field.</para>
      </summary>
      <value>true, to insert a blank line after each item label of the current row field; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldLayout.Outline">
      <summary>
        <para>Gets or sets a value indicating whether items of the current row field should be shown in outline form.</para>
      </summary>
      <value>true, to show field items in outline form; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldLayout.RepeatItemLabels">
      <summary>
        <para>Gets or sets a value indicating whether item labels should be repeated in the current outer field.</para>
      </summary>
      <value>true, to repeat item labels for the current outer field; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldLayout.ShowItemsWithNoData">
      <summary>
        <para>Gets or sets a value indicating whether field items that have no data should be displayed in the PivotTable report.</para>
      </summary>
      <value>true, to show field items that have no data; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldLayout.SubtotalOnTop">
      <summary>
        <para>Gets or sets a value indicating whether subtotals for the field should be displayed on top.</para>
      </summary>
      <value>true, to display subtotals for the field on top; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldReference">
      <summary>
        <para>Represents a reference to a <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that is currently shown as a row or column field.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldReference.IsValuesReference">
      <summary>
        <para>Gets a value indicating whether the current <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/> object represents a reference to the virtual “Values” field which appears in a pivot table containing two or more data fields.</para>
      </summary>
      <value>true, if the current field represents the “Values” field in the report; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldReferenceBase">
      <summary>
        <para>Represents a base interface for the <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/>, <see cref="T:DevExpress.Spreadsheet.PivotPageField"/> and <see cref="T:DevExpress.Spreadsheet.PivotDataField"/> interfaces.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldReferenceBase.Field">
      <summary>
        <para>Provides access to the underlying pivot field referenced by the current object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that is the referenced pivot field.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceBase.MoveDown">
      <summary>
        <para>Moves the field to the next position within the collection which represents the PivotTable area where this field is currently shown.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceBase.MoveToBeginning">
      <summary>
        <para>Moves the field to the first position within the collection which represents the PivotTable area where this field is currently shown.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceBase.MoveToEnd">
      <summary>
        <para>Moves the field to the last position within the collection which represents the PivotTable area where this field is currently shown.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceBase.MoveUp">
      <summary>
        <para>Moves the field to the previous position within the collection which represents the PivotTable area where this field is currently shown.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldReferenceBase.Position">
      <summary>
        <para>Returns or specifies the field position in the collection that corresponds to the PivotTable area where this field is located.</para>
      </summary>
      <value>A zero-based index of the field in the collection.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldReferenceCollection">
      <summary>
        <para>Represents the collection of row or column fields in the PivotTable report.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceCollection.Add(DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Adds a field to the row or column area of the pivot table.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object specifying a pivot field that should be added to the row or column area of the PivotTable report.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/> object which represents the inserted row or column field.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceCollection.AddValuesReference">
      <summary>
        <para>Adds the virtual “Values” field to the row or column area of the pivot table.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/> object which represents the “Values” field.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceCollection.Clear">
      <summary>
        <para>Removes all row or column fields from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceCollection.Contains(DevExpress.Spreadsheet.PivotFieldReference)">
      <summary>
        <para>Determines whether the collection contains the specified column or row field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/> object that specifies the row or column field to locate in the collection.</param>
      <returns>true, if the collection contains the specified field; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceCollection.IndexOf(DevExpress.Spreadsheet.PivotFieldReference)">
      <summary>
        <para>Returns the index of the specified row or column field in the collection.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/> object that specifies the row or column field to locate in the collection.</param>
      <returns>A zero-based integer which specifies the field’s position within the collection. &#0045;1 if the field doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceCollection.Insert(System.Int32,DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Inserts a row or column field into the collection at the specified index.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which the field should be inserted.</param>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object representing the field to insert into the collection.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/> object which represents the inserted row or column field.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceCollection.InsertValuesReference(System.Int32)">
      <summary>
        <para>Inserts the virtual “Values” field into the collection at the specified index.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which the “Values” field should be inserted. If it is negative or exceeds the number of elements within the collection, an exception is raised.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/> object which represents a reference to the inserted “Values” field.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldReferenceCollection.Item(System.String)">
      <summary>
        <para>Provides access to an individual row or column field in the collection by its name.</para>
      </summary>
      <param name="name">A string that specifies the name of the field to be obtained.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/> object that is a row or column field with the specified name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceCollection.Remove(DevExpress.Spreadsheet.PivotFieldReference)">
      <summary>
        <para>Removes the specified row or column field from the collection.</para>
      </summary>
      <param name="fieldReference">A <see cref="T:DevExpress.Spreadsheet.PivotFieldReference"/> object that specifies the row or column field to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFieldReferenceCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the row or column field at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the field to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldSortOptions">
      <summary>
        <para>Contains sort options for a PivotTable field.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldSortOptions.AutoSortField">
      <summary>
        <para>Gets the index of the data field used by the sort criteria applied to the pivot field.</para>
      </summary>
      <value>An integer value that is the zero-based index of the data field in the <see cref="T:DevExpress.Spreadsheet.PivotDataFieldCollection"/>.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldSortOptions.ItemReferences">
      <summary>
        <para>Provides access to the collection of <see cref="T:DevExpress.Spreadsheet.PivotItemReference"/> objects used by the sorting criteria applied to the pivot field.</para>
      </summary>
      <value>A collection of the <see cref="T:DevExpress.Spreadsheet.PivotItemReference"/> objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFieldSortOptions.Type">
      <summary>
        <para>Gets or sets the type of sort applied to the PivotTable field.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.PivotFieldSortType"/> enumeration values specifying the sort order.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFieldSortType">
      <summary>
        <para>Lists values that specify the sort order for a PivotTable field.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldSortType.Ascending">
      <summary>
        <para>Sorts the field in ascending order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldSortType.Descending">
      <summary>
        <para>Sorts the field in descending order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFieldSortType.Manual">
      <summary>
        <para>Enables manual sorting of field items by dragging them in the UI.</para>
        <para>Currently, the SpreadsheetControl doesn’t support manual sorting of field items.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFilter">
      <summary>
        <para>Represents a filter applied to a PivotTable field.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilter.Delete">
      <summary>
        <para>Removes the current filter from the <see cref="T:DevExpress.Spreadsheet.PivotFilterCollection"/> collection.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFilter.Description">
      <summary>
        <para>Gets or sets a brief description of the filter.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the description of the pivot filter.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFilter.Field">
      <summary>
        <para>Gets the pivot field to which the current filter is applied.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies the filtered field.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFilter.FilterType">
      <summary>
        <para>Gets the type of the pivot filter.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFilterType"/> enumeration member which indicates the filter type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFilter.MeasureField">
      <summary>
        <para>Gets the data field containing summary values being filtered by a value filter.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotDataField"/> object that is the data field used for filtering.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFilter.Name">
      <summary>
        <para>Gets or sets the name of the pivot filter.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the filter’s name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFilter.SecondValue">
      <summary>
        <para>Gets the second filter criteria value.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies a value used in a filter.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFilter.Top10Type">
      <summary>
        <para>Gets or sets the type of the “Top 10” value filter.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.PivotFilterTop10Type"/> enumeration members.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFilter.UseWholeDay">
      <summary>
        <para>Gets or sets whether the date filter should use whole days in its filtering criteria.</para>
      </summary>
      <value>true, to use whole days in the date filter; otherwise,false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotFilter.Value">
      <summary>
        <para>Gets the first filter criteria value.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies a value used in a filter.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFilterCollection">
      <summary>
        <para>A collection of filters applied to the PivotTable fields.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.Add(DevExpress.Spreadsheet.PivotField,DevExpress.Spreadsheet.PivotDataField,DevExpress.Spreadsheet.PivotFilterType,DevExpress.Spreadsheet.FilterValue,DevExpress.Spreadsheet.FilterValue)">
      <summary>
        <para>Applies a value filter to the specified PivotTable field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies a row or column field to which a filter should be applied.</param>
      <param name="measureField">A <see cref="T:DevExpress.Spreadsheet.PivotDataField"/> object that specifies a data field containing summary values to filter by.</param>
      <param name="filterType">A <see cref="T:DevExpress.Spreadsheet.PivotFilterType"/> enumeration member specifying the type of the value filter to be applied to the field.</param>
      <param name="firstValue">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies the first filter criteria value.</param>
      <param name="secondValue">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies the second filter criteria value.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotFilter"/> object that represents the applied filter.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.Add(DevExpress.Spreadsheet.PivotField,DevExpress.Spreadsheet.PivotDataField,DevExpress.Spreadsheet.PivotFilterType,DevExpress.Spreadsheet.FilterValue)">
      <summary>
        <para>Applies a value filter to the specified PivotTable field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies a row or column field to which a filter should be applied.</param>
      <param name="measureField">A <see cref="T:DevExpress.Spreadsheet.PivotDataField"/> object that specifies a data field containing summary values to filter by.</param>
      <param name="filterType">A <see cref="T:DevExpress.Spreadsheet.PivotFilterType"/> enumeration member specifying the type of value filter to be applied to the field.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies the filter criteria value.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotFilter"/> object that represents the applied filter.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.Add(DevExpress.Spreadsheet.PivotField,DevExpress.Spreadsheet.PivotFilterType,DevExpress.Spreadsheet.FilterValue,DevExpress.Spreadsheet.FilterValue)">
      <summary>
        <para>Applies a label or date filter to the specified PivotTable field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies a row or column field that should be filtered.</param>
      <param name="filterType">A <see cref="T:DevExpress.Spreadsheet.PivotFilterType"/> enumeration member specifying the type of the filter to be applied to the field.</param>
      <param name="firstValue">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies the first filter criteria value.</param>
      <param name="secondValue">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies the second filter criteria value.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotFilter"/> object that represents the applied filter.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.Add(DevExpress.Spreadsheet.PivotField,DevExpress.Spreadsheet.PivotFilterType,DevExpress.Spreadsheet.FilterValue)">
      <summary>
        <para>Applies a label or date filter to the specified PivotTable field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies a row or column field that should be filtered.</param>
      <param name="filterType">A <see cref="T:DevExpress.Spreadsheet.PivotFilterType"/> enumeration member specifying the type of filter to be applied to the field.</param>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.FilterValue"/> object that specifies the filter criteria value.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotFilter"/> object that represents the applied filter.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.Add(DevExpress.Spreadsheet.PivotField,DevExpress.Spreadsheet.PivotFilterType)">
      <summary>
        <para>Applies a date filter to the specified PivotTable field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that specifies a row or column field that should be filtered.</param>
      <param name="filterType">A <see cref="T:DevExpress.Spreadsheet.PivotFilterType"/> enumeration member specifying the type of date filter to be applied to the field.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotFilter"/> object that represents the applied filter.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.Clear">
      <summary>
        <para>Removes all pivot filters from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.Contains(DevExpress.Spreadsheet.PivotFilter)">
      <summary>
        <para>Determines whether the collection contains the specified filter.</para>
      </summary>
      <param name="filter">A <see cref="T:DevExpress.Spreadsheet.PivotFilter"/> object to search for.</param>
      <returns>true, if the collection contains the specified filter; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.IndexOf(DevExpress.Spreadsheet.PivotFilter)">
      <summary>
        <para>Returns the index of the specified item in the collection.</para>
      </summary>
      <param name="filter">A <see cref="T:DevExpress.Spreadsheet.PivotFilter"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the item position within the collection. &#0045;1 if the item doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.Remove(DevExpress.Spreadsheet.PivotFilter)">
      <summary>
        <para>Removes the specified filter from the collection.</para>
      </summary>
      <param name="filter">A <see cref="T:DevExpress.Spreadsheet.PivotFilter"/> object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotFilterCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes a filter at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the filter to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFilterTop10Type">
      <summary>
        <para>Lists values used to specify what items should be included in the “Top 10” filtering results.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterTop10Type.Bottom">
      <summary>
        <para>Specifies that bottom items satisfying the specified “Top 10” filter criteria should be displayed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterTop10Type.None">
      <summary>
        <para>Indicates that the pivot filter is not of the “Top 10” type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterTop10Type.Top">
      <summary>
        <para>Specifies that top items satisfying the specified “Top 10” filter criteria should be displayed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotFilterType">
      <summary>
        <para>Lists values that specify the type of filter to be applied to a PivotTable field.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.April">
      <summary>
        <para>Shows dates occurring in April, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.August">
      <summary>
        <para>Shows dates occurring in August, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionBeginsWith">
      <summary>
        <para>Shows item labels that begin with the specified text string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionBetween">
      <summary>
        <para>Shows item labels that are between a specified range of values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionContains">
      <summary>
        <para>Shows item labels that contain the specified text string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionEndsWith">
      <summary>
        <para>Shows item labels that end with the specified text string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionEqual">
      <summary>
        <para>Shows item labels that match a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionGreaterThan">
      <summary>
        <para>Shows item labels that are greater than a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionGreaterThanOrEqual">
      <summary>
        <para>Shows item labels that are greater than or equal to a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionLessThan">
      <summary>
        <para>Shows item labels that are less than a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionLessThanOrEqual">
      <summary>
        <para>Shows item labels that are less than or equal to a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionNotBeginsWith">
      <summary>
        <para>Shows item labels that do not begin with the specified text string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionNotBetween">
      <summary>
        <para>Shows item labels that are not between a specified range of values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionNotContains">
      <summary>
        <para>Shows item labels that do not contain the specified text string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionNotEndsWith">
      <summary>
        <para>Shows item labels that do not end with the specified text string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.CaptionNotEqual">
      <summary>
        <para>Shows item labels that do not match a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.Count">
      <summary>
        <para>Shows the specified number of items containing top/bottom values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.DateBetween">
      <summary>
        <para>Shows dates that are between a specified range of dates.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.DateEqual">
      <summary>
        <para>Shows dates that match a specified date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.DateNewerThan">
      <summary>
        <para>Shows dates after a specified date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.DateNewerThanOrEqual">
      <summary>
        <para>Shows dates that are after or equal to a specified date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.DateNotBetween">
      <summary>
        <para>Shows dates that are not between a specified range of dates.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.DateNotEqual">
      <summary>
        <para>Shows dates that do not match a specified date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.DateOlderThan">
      <summary>
        <para>Shows dates before a specified date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.DateOlderThanOrEqual">
      <summary>
        <para>Shows dates that are before or equal to a specified date.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.December">
      <summary>
        <para>Shows dates occurring in December, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.February">
      <summary>
        <para>Shows dates occurring in February, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.FirstQuarter">
      <summary>
        <para>Shows dates occurring in the 1st quarter, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.FourthQuarter">
      <summary>
        <para>Shows dates occurring in the 4th quarter, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.January">
      <summary>
        <para>Shows dates occurring in January, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.July">
      <summary>
        <para>Shows dates occurring in July, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.June">
      <summary>
        <para>Shows dates occurring in June, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.LastMonth">
      <summary>
        <para>Shows dates occurring last month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.LastQuarter">
      <summary>
        <para>Shows dates occurring last quarter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.LastWeek">
      <summary>
        <para>Shows dates occurring last week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.LastYear">
      <summary>
        <para>Shows dates occurring last year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.March">
      <summary>
        <para>Shows dates occurring in March, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.May">
      <summary>
        <para>Shows dates occurring in May, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.NextMonth">
      <summary>
        <para>Shows dates occurring next month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.NextQuarter">
      <summary>
        <para>Shows dates occurring next quarter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.NextWeek">
      <summary>
        <para>Shows dates occurring next week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.NextYear">
      <summary>
        <para>Shows dates occurring next year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.November">
      <summary>
        <para>Shows dates occurring in November, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.October">
      <summary>
        <para>Shows dates occurring in October, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.Percent">
      <summary>
        <para>Shows top/bottom items that comprise not less than the specified percent of the total of the field values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.SecondQuarter">
      <summary>
        <para>Shows dates occurring in the 2nd quarter, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.September">
      <summary>
        <para>Shows dates occurring in September, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.Sum">
      <summary>
        <para>Shows top/bottom items that comprise not less than the specified sum of the values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ThirdQuarter">
      <summary>
        <para>Shows dates occurring in the 3rd quarter, regardless of the year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ThisMonth">
      <summary>
        <para>Shows dates occurring this month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ThisQuarter">
      <summary>
        <para>Shows dates occurring this quarter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ThisWeek">
      <summary>
        <para>Shows dates occurring this week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ThisYear">
      <summary>
        <para>Shows dates occurring this year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.Today">
      <summary>
        <para>Shows today’s dates.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.Tomorrow">
      <summary>
        <para>Shows tomorrow’s dates.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ValueBetween">
      <summary>
        <para>Shows values that are between a specified range of values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ValueEqual">
      <summary>
        <para>Shows values that are equal to a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ValueGreaterThan">
      <summary>
        <para>Shows values that are greater than a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ValueGreaterThanOrEqual">
      <summary>
        <para>Shows values that are greater than or equal to a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ValueLessThan">
      <summary>
        <para>Shows values that are less than a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ValueLessThanOrEqual">
      <summary>
        <para>Shows values that are less than or equal to a specified value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ValueNotBetween">
      <summary>
        <para>Shows values that are not between a specified range of values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.ValueNotEqual">
      <summary>
        <para>Shows values that are not equal to a specified value</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.YearToDate">
      <summary>
        <para>Shows dates occurring between the beginning of the current year and today, inclusive.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotFilterType.Yesterday">
      <summary>
        <para>Shows yesterday’s dates.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotGroupingValue">
      <summary>
        <para>Contains data used to specify starting and ending values for the range grouping.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotGroupingValue.#ctor(System.DateTime)">
      <summary>
        <para>Initializes a new instance of the class with the specified DateTime value.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> value to convert to the <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> instance.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotGroupingValue.#ctor(System.Double)">
      <summary>
        <para>Initializes a new instance of the class with the specified number.</para>
      </summary>
      <param name="value">A <see cref="T:System.Double"/> number to convert to the <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> instance.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotGroupingValue.AutoValue">
      <summary>
        <para>Gets or sets whether to calculate the value automatically based on the source data.</para>
      </summary>
      <value>True calculate the value automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotGroupingValue.DateTimeValue">
      <summary>
        <para>Gets or sets the value used for date grouping.</para>
      </summary>
      <value>A <see cref="T:System.DateTime"/> value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotGroupingValue.FromDateTime(System.DateTime,System.Boolean)">
      <summary>
        <para>Converts the <see cref="T:System.DateTime"/> object to a grouping value using the specified date system.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> object that specifies a date and time value to be converted to a grouping value.</param>
      <param name="use1904DateSystem">true, to use the 1904 date system; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> object that specifies a starting or ending value for grouping.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotGroupingValue.IsDateTime">
      <summary>
        <para>Indicates whether the value is intended for date grouping.</para>
      </summary>
      <value>True, if the value is intended for date grouping; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotGroupingValue.NumericValue">
      <summary>
        <para>Gets or sets the value used for numeric grouping.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotGroupingValue.op_Implicit(System.DateTime)~DevExpress.Spreadsheet.PivotGroupingValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.DateTime"/> object to a <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> instance.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotGroupingValue.op_Implicit(System.Double)~DevExpress.Spreadsheet.PivotGroupingValue">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Double"/> value to a <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> instance.</para>
      </summary>
      <param name="value">A <see cref="T:System.Double"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotGroupingValue"/> object that is the result of conversion.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotItem">
      <summary>
        <para>Represents an item in a PivotTable field.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotItem.Caption">
      <summary>
        <para>Gets or sets the label text for the pivot item.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the custom item caption.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotItem.Formula">
      <summary>
        <para>Gets or sets the formula for the calculated item.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that is the calculated item’s formula.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotItem.MoveDown">
      <summary>
        <para>Moves the item to the next position within the field’s item collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotItem.MoveToBeginning">
      <summary>
        <para>Moves the item to the first position within the field’s item collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotItem.MoveToEnd">
      <summary>
        <para>Moves the item to the last position within the field’s item collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotItem.MoveUp">
      <summary>
        <para>Moves the item to the previous position within the field’s item collection.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotItem.Position">
      <summary>
        <para>Returns or specifies the item position within the field’s item collection.</para>
      </summary>
      <value>A zero-based index of the item in the collection.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotItem.ShowDetails">
      <summary>
        <para>Gets or sets a value indicating whether the outline is expanded for the pivot item.</para>
      </summary>
      <value>true, to show details for the current item; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotItem.Value">
      <summary>
        <para>Gets the value of the item in the original source data.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object that represents the item’s value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotItem.Visible">
      <summary>
        <para>Gets or sets a value indicating whether the item should be displayed in the report.</para>
      </summary>
      <value>true, if the item is visible; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotItemCollection">
      <summary>
        <para>Represents a collection of <see cref="T:DevExpress.Spreadsheet.PivotItem"/> objects in a PivotTable field.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotItemCollection.Contains(DevExpress.Spreadsheet.PivotItem)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotItemCollection.IndexOf(DevExpress.Spreadsheet.PivotItem)">
      <summary>
        <para>Returns the index of the specified <see cref="T:DevExpress.Spreadsheet.PivotItem"/> in the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.PivotItem"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the item’s position within the collection. &#0045;1 if the item doesn’t belong to the collection.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotItemReference">
      <summary>
        <para>Represents a reference to a specific item in a pivot table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotItemReference.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.PivotItemReference"/> class with the specified settings.</para>
      </summary>
      <param name="fieldIndex">An integer that is the zero-based index of the field containing the referenced item in the <see cref="T:DevExpress.Spreadsheet.PivotFieldCollection"/> collection.</param>
      <param name="itemIndex">An integer that is the zero-based index of the referenced item in the specified field.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotItemReference.FieldIndex">
      <summary>
        <para>Gets the index of the pivot field containing the referenced item.</para>
      </summary>
      <value>An integer value specifying a zero-based index of the field in the PivotTable’s field collection.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotItemReference.ItemIndex">
      <summary>
        <para>Gets the index of the referenced item.</para>
      </summary>
      <value>An integer value specifying a zero-based index of the item in the item collection of the field to which this item belongs.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotLayout">
      <summary>
        <para>Contains various options used to adjust the layout of the PivotTable report.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.CompactNewFields">
      <summary>
        <para>Gets or sets a value indicating whether new fields should have their <see cref="P:DevExpress.Spreadsheet.PivotFieldLayout.Compact"/> property set to true.</para>
      </summary>
      <value>true, to create new fields with the compact mode equal to true; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.DataOnRows">
      <summary>
        <para>Gets or sets a value indicating whether multiple data fields in a pivot table should be displayed in rows down the report.</para>
      </summary>
      <value>true, to arrange multiple data fields as a row field; otherwise, false.The default value is false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotLayout.HideAllSubtotals">
      <summary>
        <para>Hides all subtotals in the PivotTable report.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.IndentInCompactForm">
      <summary>
        <para>Gets or sets the indent increment for items from different row fields when a pivot table is shown in compact form.</para>
      </summary>
      <value>An integer value that specifies the amount by which items from different row fields are indented. This value must be between 0 and 127. Otherwise, a <see cref="T:System.ArgumentOutOfRangeException"/> will be thrown.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotLayout.InsertBlankRows">
      <summary>
        <para>Inserts a blank row after each outer row field item in a pivot table.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.MergeTitles">
      <summary>
        <para>Gets or sets a value indicating whether to merge and center cells containing item labels for the outer row and column fields, subtotal and grand total captions.</para>
      </summary>
      <value>true, to merge cells containing the outer row and column field items, subtotal and grand total labels; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.OutlineNewFields">
      <summary>
        <para>Gets or sets a value indicating whether new fields should have their <see cref="P:DevExpress.Spreadsheet.PivotFieldLayout.Outline"/> property set to true.</para>
      </summary>
      <value>true, to create new fields with the outline mode equal to true; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.PageOrder">
      <summary>
        <para>Gets or sets the order in which multiple page fields are displayed in the PivotTable report filter area.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotPageOrder"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.PageWrap">
      <summary>
        <para>Gets or sets the number of page fields to display before starting another column or row based on the <see cref="P:DevExpress.Spreadsheet.PivotLayout.PageOrder"/> property value.</para>
      </summary>
      <value>An integer value that specifies the number of page fields per column or row.This value must be between 0 and 255. Otherwise, a <see cref="T:System.ArgumentOutOfRangeException"/> will be thrown.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotLayout.RemoveBlankRows">
      <summary>
        <para>Removes blank rows after items of the outer row fields in a pivot table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotLayout.RepeatAllItemLabels(System.Boolean)">
      <summary>
        <para>Specifies whether to repeat item labels for all outer row and column fields in a pivot table.</para>
      </summary>
      <param name="repeat">true, to repeat item labels in the outer fields; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotLayout.SetReportLayout(DevExpress.Spreadsheet.PivotReportLayout)">
      <summary>
        <para>Applies the specified report layout to a pivot table.</para>
      </summary>
      <param name="layout">One of the <see cref="T:DevExpress.Spreadsheet.PivotReportLayout"/> enumeration members specifying the report layout.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotLayout.ShowAllSubtotals(System.Boolean)">
      <summary>
        <para>Displays all subtotals in the PivotTable report.</para>
      </summary>
      <param name="topOfGroup">true, to display subtotals for the outer row fields on top; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.ShowColumnGrandTotals">
      <summary>
        <para>Gets or sets a value indicating whether grand totals should be displayed for columns in the PivotTable report.</para>
      </summary>
      <value>true, to display grand totals for columns; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.ShowRowGrandTotals">
      <summary>
        <para>Gets or sets a value indicating whether grand totals should be displayed for rows in the PivotTable report.</para>
      </summary>
      <value>true, to display grand totals for rows; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLayout.SubtotalIncludeHiddenItems">
      <summary>
        <para>Gets or sets a value indicating whether hidden page field items in a pivot table should be included in subtotals and grand totals.</para>
      </summary>
      <value>true, to include hidden page field items in subtotals and grand totals; otherwise, false.The default value is false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotLocation">
      <summary>
        <para>Contains information about the location of a pivot table and its areas.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLocation.ColumnRange">
      <summary>
        <para>Gets the cell range that contains the column area of the PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLocation.DataRange">
      <summary>
        <para>Gets the cell range that contains the data area of the PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLocation.PageRange">
      <summary>
        <para>Gets the cell range that contains the page area of the PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the contiguous or noncontiguous (union) range of cells occupied by the page fields.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLocation.Range">
      <summary>
        <para>Gets the cell range that contains the entire PivotTable report except for the page area.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range occupied by the pivot table disregarding the page fields.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLocation.RowRange">
      <summary>
        <para>Gets the cell range that contains the row area of the PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotLocation.WholeRange">
      <summary>
        <para>Gets the cell range that contains the entire PivotTable report including the page area.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a noncontiguous (union) range of cells occupied by the PivotTable report along with the page area.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotPageField">
      <summary>
        <para>Represents a reference to a <see cref="T:DevExpress.Spreadsheet.PivotField"/> object that is currently shown as a page field.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotPageFieldCollection">
      <summary>
        <para>Represents a collection of fields located in the report filter area of a pivot table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotPageFieldCollection.Add(DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Adds a field to the report filter area of the pivot table.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object specifying a pivot field that should be added to the page area of the PivotTable report.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotPageField"/> object which represents the inserted page field.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotPageFieldCollection.Clear">
      <summary>
        <para>Removes all page fields from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotPageFieldCollection.Contains(DevExpress.Spreadsheet.PivotPageField)">
      <summary>
        <para>Determines whether the collection contains the specified page field.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotPageField"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified page field; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotPageFieldCollection.IndexOf(DevExpress.Spreadsheet.PivotPageField)">
      <summary>
        <para>Returns the index of the specified page field in the collection.</para>
      </summary>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotPageField"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the field’s position within the collection. &#0045;1 if the field doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotPageFieldCollection.Insert(System.Int32,DevExpress.Spreadsheet.PivotField)">
      <summary>
        <para>Inserts a page field into the <see cref="T:DevExpress.Spreadsheet.PivotPageFieldCollection"/> collection at the specified index.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which the field should be inserted.</param>
      <param name="field">A <see cref="T:DevExpress.Spreadsheet.PivotField"/> object representing the field to insert into the collection.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotPageField"/> object which represents the inserted page field.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotPageFieldCollection.Item(System.String)">
      <summary>
        <para>Provides access to an individual page field in the collection by its name.</para>
      </summary>
      <param name="name">A string that specifies the name of the page field to be obtained.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotPageField"/> object that is a page field with the specified name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotPageFieldCollection.Remove(DevExpress.Spreadsheet.PivotPageField)">
      <summary>
        <para>Removes the specified page field from the collection.</para>
      </summary>
      <param name="pageField">A <see cref="T:DevExpress.Spreadsheet.PivotPageField"/> object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotPageFieldCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the page field at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the page field to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotPageOrder">
      <summary>
        <para>Lists values used to specify the orientation of multiple page fields in the PivotTable report filter area.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotPageOrder.DownThenOver">
      <summary>
        <para>Specifies that page fields should be first displayed from the top to the bottom (in the order they are added) before another column starts.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotPageOrder.OverThenDown">
      <summary>
        <para>Specifies that page fields should be first displayed from left to right (in the order they are added) before another row starts.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotReportLayout">
      <summary>
        <para>Lists values used to specify the type of the PivotTable report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotReportLayout.Compact">
      <summary>
        <para>Specifies that a pivot table should be displayed in compact form.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotReportLayout.Outline">
      <summary>
        <para>Specifies that a pivot table should be displayed in outline form.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotReportLayout.Tabular">
      <summary>
        <para>Specifies that a pivot table should be displayed in tabular form.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotShowValuesAsType">
      <summary>
        <para>Lists options that specify how summary values are displayed within a data field.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.Difference">
      <summary>
        <para>Displays values in a data field as the difference from the value of the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseItem"/> in the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.Index">
      <summary>
        <para>Calculates the relative importance of each summary value by using the following formula:</para>
        <para>((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total))</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.NoCalculation">
      <summary>
        <para>Displays summary values for a data field “as-is”, with no additional calculation applied.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.Percent">
      <summary>
        <para>Displays values in a data field as the percentage of the value of the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseItem"/> in the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.PercentDifference">
      <summary>
        <para>Displays values in a data field as the percentage difference from the value of the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseItem"/> in the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.PercentOfColumn">
      <summary>
        <para>Displays values in each column as the percentage of the total value of the column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.PercentOfParent">
      <summary>
        <para>Displays values in a data field as the percentage of the value of the parent item of the specified <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.PercentOfParentColumn">
      <summary>
        <para>Displays values in each inner column as the percentage of the total of the parent item in the outer column. The parent column for the item values of the outermost column field is the grand total column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.PercentOfParentRow">
      <summary>
        <para>Displays values in each inner row as the percentage of the total of the parent item in the outer row. The parent row for the item values of the outermost row field is the grand total row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.PercentOfRow">
      <summary>
        <para>Displays values in each row as the percentage of the total value of the row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.PercentOfRunningTotal">
      <summary>
        <para>Calculates a running total for successive items in the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/> as a percentage of the grand total value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.PercentOfTotal">
      <summary>
        <para>Displays values as the percentage of the grand total of all values in the PivotTable report.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.RankAscending">
      <summary>
        <para>Displays the rank of values for a specific <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/>, listing the smallest item in the field as 1, and each larger value with a higher rank value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.RankDescending">
      <summary>
        <para>Displays the rank of values for a specific <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/>, listing the largest item in the field as 1, and each smaller value with a higher rank value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotShowValuesAsType.RunningTotal">
      <summary>
        <para>Displays values for successive items in the <see cref="P:DevExpress.Spreadsheet.PivotDataField.BaseField"/> as a running total.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotSubtotalFunctions">
      <summary>
        <para>Lists functions used to calculate subtotals for the PivotTable fields.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.Average">
      <summary>
        <para>The average of the values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.Count">
      <summary>
        <para>The number of nonempty values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.CountNumbers">
      <summary>
        <para>The number of numeric values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.Max">
      <summary>
        <para>The largest value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.Min">
      <summary>
        <para>The smallest value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.None">
      <summary>
        <para>Specifies that subtotals for a field are not calculated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.Product">
      <summary>
        <para>The product of the values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.StdDev">
      <summary>
        <para>An estimate of the standard deviation of a population, where the sample is a subset of the entire population.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.StdDevp">
      <summary>
        <para>The standard deviation of a population, where the population is all of the data to be summarized.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.Sum">
      <summary>
        <para>The sum of the values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.Var">
      <summary>
        <para>An estimate of the variance of a population, where the sample is a subset of the entire population.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalFunctions.Varp">
      <summary>
        <para>The variance of a population, where the population is all of the data to be summarized.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotSubtotalType">
      <summary>
        <para>Lists values that specify how subtotals are calculated for a PivotTable field.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalType.Automatic">
      <summary>
        <para>Indicates that the default summary function is used to calculate subtotals for a field.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalType.Custom">
      <summary>
        <para>Indicates that a custom function from the <see cref="T:DevExpress.Spreadsheet.PivotSubtotalFunctions"/> enumeration is used to calculate subtotals.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.PivotSubtotalType.None">
      <summary>
        <para>Indicates that subtotals are not calculated for a field.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotTable">
      <summary>
        <para>Represents a PivotTable report on a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.BandedColumns">
      <summary>
        <para>Gets or sets a value indicating whether alternate shading should be applied to the pivot table columns.</para>
      </summary>
      <value>true, to apply banded column formatting to the pivot table; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.BandedRows">
      <summary>
        <para>Gets or sets a value indicating whether alternate shading should be applied to the pivot table rows.</para>
      </summary>
      <value>true, to apply banded row formatting to the pivot table; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTable.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.Spreadsheet.PivotTable"></see> object by preventing visual updates until the EndUpdate method is called.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.Behavior">
      <summary>
        <para>Provides access to an object that allows you to apply restrictions on different PivotTable operations.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotBehaviorOptions"/> object containing the PivotTable behavior options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.Cache">
      <summary>
        <para>Returns the data cache for the specified PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotCache"/> object that represents the data cache for the pivot table.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.CalculatedFields">
      <summary>
        <para>Provides access to the collection of calculated fields in the specified PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotCalculatedFieldCollection"/> object specifying the PivotTable’s collection of calculated fields.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTable.ChangeDataSource(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Changes the data source for the PivotTable report.</para>
      </summary>
      <param name="sourceRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range containing new source data for the pivot table.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTable.ChangeDataSource(DevExpress.Spreadsheet.PivotCache)">
      <summary>
        <para>Changes the data source for the PivotTable report.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Spreadsheet.PivotCache"/> object containing new data on which the pivot table should be based.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTable.Clear">
      <summary>
        <para>Removes all fields, formatting and report filters from the PivotTable report.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.ColumnFields">
      <summary>
        <para>Provides access to the collection of fields located in the column axis area of the PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFieldReferenceCollection"/> object that represents the collection of column fields.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.DataFields">
      <summary>
        <para>Provides access to the collection of fields located in the data area of the PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotDataFieldCollection"/> object that represents the collection of data fields.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTable.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Spreadsheet.PivotTable"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.Fields">
      <summary>
        <para>Provides access to the collection of all fields in the PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFieldCollection"/> object that is a collection of PivotTable fields.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.Filters">
      <summary>
        <para>Provides access to the collection of filters applied to the current pivot table.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFilterCollection"/> object that is a collection of pivot filters.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.Layout">
      <summary>
        <para>Provides access to options used to adjust the PivotTable report layout.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotLayout"/> object containing layout settings for a pivot table.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.Location">
      <summary>
        <para>Provides access to an object that contains information about the location of a pivot table and its regions.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotLocation"/> object containing location information for a PivotTable report.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTable.MoveTo(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Moves a pivot table to the specified location.</para>
      </summary>
      <param name="location">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range in the upper-left corner of the PivotTable report’s destination range.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object that represents the moved pivot table.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.Name">
      <summary>
        <para>Gets or sets the PivotTable name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of the pivot table.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.PageFields">
      <summary>
        <para>Provides access to the collection of fields located in the PivotTable’s report filter area.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotPageFieldCollection"/> object that represents the collection of page fields.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.RowFields">
      <summary>
        <para>Provides access to the collection of fields located in the row axis area of the PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotFieldReferenceCollection"/> object that represents the collection of row fields.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.ShowColumnHeaders">
      <summary>
        <para>Gets or sets a value indicating whether to apply the style formatting to column headers.</para>
      </summary>
      <value>true, to format column headers; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.ShowRowHeaders">
      <summary>
        <para>Gets or sets a value indicating whether to apply the style formatting to row headers.</para>
      </summary>
      <value>true, to format row headers; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.Style">
      <summary>
        <para>Gets or sets the style applied to the pivot table.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyle"/> object that specifies the pivot table style.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.Tag">
      <summary>
        <para>Gets or sets custom information associated with a pivot table.</para>
      </summary>
      <value>Data associated with the PivotTable report.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTable.View">
      <summary>
        <para>Provides access to the display settings of a PivotTable report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotViewOptions"/> object containing the PivotTable’s display settings.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotTableCollection">
      <summary>
        <para>A collection of all <see cref="T:DevExpress.Spreadsheet.PivotTable"/> objects in the worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTableCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CellRange,System.String)">
      <summary>
        <para>Creates a pivot table with a custom name based on data in the specified cell range and returns the newly created <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object.</para>
      </summary>
      <param name="sourceRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range containing the source data for the pivot table.</param>
      <param name="location">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range in the upper-left corner of the PivotTable report’s destination range.</param>
      <param name="name">A <see cref="T:System.String"/> value that specifies the pivot table name. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.PivotTable.Name"/> property.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object that specifies the newly created pivot table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTableCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a pivot table with the default name based on data in the specified cell range and returns the newly created <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object.</para>
      </summary>
      <param name="sourceRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range containing the source data for the pivot table.</param>
      <param name="location">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range in the upper-left corner of the PivotTable report’s destination range.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object that specifies the newly created pivot table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTableCollection.Add(DevExpress.Spreadsheet.PivotCache,DevExpress.Spreadsheet.CellRange,System.String)">
      <summary>
        <para>Creates a new pivot table with a custom name using the specified data cache and returns the newly created <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Spreadsheet.PivotCache"/> object that specifies the pivot cache on which the pivot table is based.</param>
      <param name="location">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range in the upper-left corner of the PivotTable report’s destination range.</param>
      <param name="name">A <see cref="T:System.String"/> value that specifies the pivot table name. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.PivotTable.Name"/> property.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object that specifies the newly created pivot table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTableCollection.Add(DevExpress.Spreadsheet.PivotCache,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a new pivot table with the default name using the specified data cache and returns the newly created <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object.</para>
      </summary>
      <param name="cache">A <see cref="T:DevExpress.Spreadsheet.PivotCache"/> object that specifies the pivot cache on which the pivot table is based.</param>
      <param name="location">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell or cell range in the upper-left corner of the PivotTable report’s destination range.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object that specifies the newly created pivot table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTableCollection.Clear">
      <summary>
        <para>Removes all pivot tables from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTableCollection.Contains(DevExpress.Spreadsheet.PivotTable)">
      <summary>
        <para>Indicates whether the collection contains the specified pivot table.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the pivot table; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTableCollection.First">
      <summary>
        <para>Returns the first pivot table in the <see cref="T:DevExpress.Spreadsheet.PivotTableCollection"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object that represents the first pivot table in the collection. null (Nothing in Visual Basic) if the collection is empty.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTableCollection.IndexOf(DevExpress.Spreadsheet.PivotTable)">
      <summary>
        <para>Returns the index of the specified pivot table in the collection.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the pivot table position within the collection. &#0045;1 if the pivot table doesn’t belong to the collection.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTableCollection.Item(System.String)">
      <summary>
        <para>Provides access to an individual pivot table in the collection by its name.</para>
      </summary>
      <param name="name">A string that specifies the name of the pivot table to be obtained. This value matches the value of the <see cref="P:DevExpress.Spreadsheet.PivotTable.Name"/> property.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object that is a pivot table with the specified name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotTableCollection.Last">
      <summary>
        <para>Returns the last pivot table in the <see cref="T:DevExpress.Spreadsheet.PivotTableCollection"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object that represents the pivot table at the last position in the collection. null (Nothing in Visual Basic) if the collection is empty.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTableCollection.Remove(DevExpress.Spreadsheet.PivotTable)">
      <summary>
        <para>Removes the specified pivot table from the collection.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Spreadsheet.PivotTable"/> object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.PivotTableCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the pivot table at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the pivot table to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.PivotViewOptions">
      <summary>
        <para>Contains display settings for a pivot table.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.AltTextDescription">
      <summary>
        <para>Gets or sets the alternative description of the information in a PivotTable report.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the detailed explanation of the PivotTable content.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.AltTextTitle">
      <summary>
        <para>Gets or sets the alternative text for a PivotTable report.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the descriptive title for a pivot table.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.ColumnHeaderCaption">
      <summary>
        <para>Gets or sets the text to be displayed in the column header of a pivot table shown in compact form.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the column header caption.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.DataCaption">
      <summary>
        <para>Gets or sets the caption for a virtual field named Data (Values in the UI) which appears in a pivot table containing two or more data fields.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the Data field caption. The value cannot be null or String.Empty.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.ErrorCaption">
      <summary>
        <para>Gets or sets the text to be displayed in cells that contain errors.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the custom string to be displayed for error cells.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.GrandTotalCaption">
      <summary>
        <para>Gets or sets the text to be displayed in grand totals for rows and columns in a pivot table.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text label to be displayed in the grand total column and grand total row.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.MissingCaption">
      <summary>
        <para>Gets or sets the text to be displayed in cells with no values.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the custom string to be displayed in empty cells.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.RowHeaderCaption">
      <summary>
        <para>Gets or sets the text to be displayed in the row header of a pivot table shown in compact form.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the row header caption.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.ShowDrillIndicators">
      <summary>
        <para>Gets or sets a value indicating whether the expand/collapse buttons should be displayed in a pivot table.</para>
      </summary>
      <value>true, to display drill indicators; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.ShowError">
      <summary>
        <para>Gets or sets a value indicating whether to show custom error messages in cells.</para>
      </summary>
      <value>true, to show a custom error string in cells containing errors; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.ShowFieldHeaders">
      <summary>
        <para>Gets or sets a value indicating whether to display the row and column field captions and filter drop-down arrows in a pivot table.</para>
      </summary>
      <value>true, to display the row and column field captions along with the filter drop-down arrows; otherwise, false. The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.ShowMissing">
      <summary>
        <para>Gets or sets a value indicating whether to display a custom string in cells that contain no values.</para>
      </summary>
      <value>true, to show a custom message in empty cells; otherwise, false.The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.ShowMultipleLabels">
      <summary>
        <para>Gets or sets a value indicating whether to display the “(Multiple Items)” string in the report filter area when multiple items, but not all, are selected in a page field.</para>
      </summary>
      <value>true, to display “(Multiple Items)” instead of “(All)” for a page field with multiple selected items; otherwise, false.The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.PivotViewOptions.ShowValuesRow">
      <summary>
        <para>Gets or sets a value indicating whether to display the Values row that may appear when there are multiple fields in the PivotTable data area.</para>
      </summary>
      <value>true, to display the Values row; otherwise, false.The default is true.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Placement">
      <summary>
        <para>Lists the ways the object is attached to the cells below it.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Placement.FreeFloating">
      <summary>
        <para>The object (picture) does not move or size with cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Placement.Move">
      <summary>
        <para>The object (picture) moves with the underlying cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Placement.MoveAndSize">
      <summary>
        <para>The object (picture) moves and sizes with the underlying cells.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ProtectedRange">
      <summary>
        <para>An association of a worksheet range and credentials required to unlock it for editing.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRange.CreateSecurityDescriptor(System.Collections.Generic.IEnumerable{DevExpress.Spreadsheet.EditRangePermission})">
      <summary>
        <para>Creates a security descriptor for the current protected range.</para>
      </summary>
      <param name="permissions">A collection of <see cref="T:DevExpress.Spreadsheet.EditRangePermission"/> objects specifying user and access rights.</param>
      <returns>A string that stores information about a security descriptor in SDDL (Security Descriptor Definition Language) format.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ProtectedRange.Name">
      <summary>
        <para>Gets or sets the name of the protected range.</para>
      </summary>
      <value>A string that specifies the name associated with the protected range.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ProtectedRange.Range">
      <summary>
        <para>Gets or sets the worksheet cell or range associated with the current protected range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the worksheet cell or cell range.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ProtectedRange.Ranges">
      <summary>
        <para>Gets or sets worksheet ranges for the current <see cref="T:DevExpress.Spreadsheet.ProtectedRange"/> object.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ProtectedRange.RefersTo">
      <summary>
        <para>Gets or sets a string that specifies a worksheet cell or cell range with which the protected range is associated.</para>
      </summary>
      <value>A string that specifies a cell reference. The string format depends on the current culture.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ProtectedRange.RefersToInvariant">
      <summary>
        <para>Gets or sets a culture-independent string that specifies a worksheet cell or cell range with which the protected range is associated.</para>
      </summary>
      <value>A string that specifies a cell reference for the invariant culture.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ProtectedRange.SecurityDescriptor">
      <summary>
        <para>Gets or sets a security descriptor that defines users and their access rights for the current protected range.</para>
      </summary>
      <value>A string that stores information about a security descriptor in SDDL (Security Descriptor Definition Language) format.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRange.SetPassword(System.String)">
      <summary>
        <para>Specifies the password that unlocks a range on a protected worksheet.</para>
      </summary>
      <param name="password">A string that is the password that the end-user must enter to edit the protected range.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ProtectedRangeCollection">
      <summary>
        <para>A collection of items which associate worksheet ranges and security information required to unlock them for editing.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRangeCollection.Add(System.String,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a new protected range and adds it to the collection.</para>
      </summary>
      <param name="name">A string that is the name of the new protected range.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> which can be edited in a protected sheet.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ProtectedRange"/> object that is the newly added element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRangeCollection.Add(System.String,System.Collections.Generic.IList{DevExpress.Spreadsheet.CellRange})">
      <summary>
        <para>Creates a protected range and adds it to a worksheet collection of protected ranges.</para>
      </summary>
      <param name="name">A string that is the name of the newly created range.</param>
      <param name="ranges">A list of worksheet <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects to include in a protected range.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ProtectedRange"/> object that combines ranges with identical protection options.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRangeCollection.Add(System.String,System.String)">
      <summary>
        <para>Creates a new protected range and adds it to the collection.</para>
      </summary>
      <param name="name">A string that is the name of the new protected range.</param>
      <param name="refersTo">A string that specifies a reference to a cell or cell range which can be edited in a protected sheet.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ProtectedRange"/> object that is the newly added element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRangeCollection.Clear">
      <summary>
        <para>Removes all items from a collection thus clearing protection ranges in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRangeCollection.Contains(DevExpress.Spreadsheet.ProtectedRange)">
      <summary>
        <para>Determines whether the collection contains the specified protected range.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.ProtectedRange"/> to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRangeCollection.Contains(System.String)">
      <summary>
        <para>Determines whether the collection contains the protected range with the specified name.</para>
      </summary>
      <param name="name">A string that is the name to search for in a collection.</param>
      <returns>true, if the collection contains range with the specified name; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRangeCollection.Remove(DevExpress.Spreadsheet.ProtectedRange)">
      <summary>
        <para>Removes the specified protected range from a collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.ProtectedRange"/> object to remove.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRangeCollection.Remove(System.String)">
      <summary>
        <para>Removes the specified protected range from a collection.</para>
      </summary>
      <param name="name">A string that is the name of the protected range to remove.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ProtectedRangeCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the element at the specified index of the <see cref="T:DevExpress.Spreadsheet.ProtectedRangeCollection"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the object to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Protection">
      <summary>
        <para>Contains various options in effect when the worksheet is protected.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Protection.Hidden">
      <summary>
        <para>Gets or sets whether the cell formula is hidden if the worksheet is protected.</para>
      </summary>
      <value>true, to hide formula in a protected sheet; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Protection.Locked">
      <summary>
        <para>Specifies whether the cell is locked in the protected worksheet. Users cannot edit or delete content in the locked cell, enter new data, or move or resize the cell.</para>
      </summary>
      <value>true to lock the cell if the worksheet is protected; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RangeConditionalFormatting">
      <summary>
        <para>Represents a conditional formatting rule that formats cells which are between or not between two values.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeConditionalFormatting.Condition">
      <summary>
        <para>Gets or sets the type of the conditional format operator used in the conditional formatting rule.</para>
      </summary>
      <value>One of <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingRangeCondition"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeConditionalFormatting.HighBound">
      <summary>
        <para>Gets or sets a value used as a high bound in the conditional formatting rule.</para>
      </summary>
      <value>The <see cref="T:System.String"/> value that represents a high bound of the data subset inside or outside of which, formatted cells are located.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeConditionalFormatting.LowBound">
      <summary>
        <para>Gets or sets a value used as a low bound in the conditional formatting rule.</para>
      </summary>
      <value>The <see cref="T:System.String"/> value that represents a low bound of the data subset inside or outside of which, formatted cells are located.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RangeCopiedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.RangeCopied"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeCopiedEventArgs.IsCut">
      <summary>
        <para>Gets or sets a value indicating whether the copied data is cut from the source range.</para>
      </summary>
      <value>true, if data is cut from the source range; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeCopiedEventArgs.RangeReference">
      <summary>
        <para>Gets the reference to the cell range from which data has been copied.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a cell reference to the copied cell range.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RangeCopiedEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.RangeCopied"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.RangeCopiedEventArgs"/> object that contains the event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.RangeCopyingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.RangeCopying"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeCopyingEventArgs.Cancel">
      <summary>
        <para>Gets or sets a value indicating whether the copy operation should be canceled.</para>
      </summary>
      <value>true, to cancel copying; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeCopyingEventArgs.IsCut">
      <summary>
        <para>Gets or sets a value indicating whether data is being cut from the source range.</para>
      </summary>
      <value>true, if data is cut from the source range; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeCopyingEventArgs.Range">
      <summary>
        <para>Gets or sets a cell range from which data is being copied.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the cell range to be copied.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RangeCopyingEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.RangeCopying"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.RangeCopyingEventArgs"/> object that contains the event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.RangeDataSourceOptions">
      <summary>
        <para>Contains various options for a data source created from a cell range.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeDataSourceOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.RangeDataSourceOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeDataSourceOptions.CellValueComparer">
      <summary>
        <para>Gets or sets the comparer used to sort cell values in the data source columns.</para>
      </summary>
      <value>An <see cref="T:System.Collections.Generic.IComparer`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CellValue"/>,&gt; object that performs the comparison.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeDataSourceOptions.DataSourceColumnTypeDetector">
      <summary>
        <para>Gets or sets the detector used to identify the name and type of each column in the resulting data source.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Spreadsheet.IDataSourceColumnTypeDetector"/> interface.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeDataSourceOptions.EditingOptions">
      <summary>
        <para>Gets or sets the editing options for the data source range.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.DataSourceEditingOptions"/> enumeration values indicating the available editing options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeDataSourceOptions.PreserveFormulas">
      <summary>
        <para>Gets or sets whether to preserve formulas in the data source range.</para>
      </summary>
      <value>True, if the formulas cannot be modified; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeDataSourceOptions.UseFirstRowAsHeader">
      <summary>
        <para>Specifies whether to use the text contained in the first row cells of the data source range as column headers.</para>
      </summary>
      <value>true, to retrieve the column names from the corresponding cells of the first row; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RangeExtensions">
      <summary>
        <para>Defines extension methods for the <see cref="T:DevExpress.Spreadsheet.CellRange"/> interface.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.AutoFitColumns(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Adjusts the width of columns that comprise the cell range to accommodate the cell content of this range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range that belongs to columns to be automatically resized.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.AutoFitRows(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Adjusts the height of rows that comprise the cell range to accommodate the cell content of this range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range comprising rows to be automatically resized.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Average(DevExpress.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
      <summary>
        <para>Returns the average of numerical values in the current cell range.</para>
      </summary>
      <param name="range">A cell range for which the average is calculated.</param>
      <param name="ignoreHiddenRows">true to exclude hidden rows from calculation; otherwise, false.</param>
      <param name="ignoreHiddenColumns">true to exclude hidden columns from calculation; otherwise, false.</param>
      <returns>The average value. If cells are empty or don’t contain numeric values, this method returns 0.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Clear(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell content, formatting, hyperlinks and comments.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.ClearComments(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell comments.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.ClearContents(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell content.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.ClearFormats(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell formatting.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.ClearHyperlinks(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell hyperlinks.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.ClearOutline(DevExpress.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
      <summary>
        <para>Clears the outline for the specified range of cells.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells for which the outline should be removed.</param>
      <param name="rows">true, to remove an outline of rows comprising the range; otherwise, false.</param>
      <param name="columns">true, to remove an outline of columns comprising the range; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Count(DevExpress.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
      <summary>
        <para>Returns the number of cells in the current cell range that contain data.</para>
      </summary>
      <param name="range">A cell range for which the count is calculated.</param>
      <param name="ignoreHiddenRows">true to exclude hidden rows from calculation; otherwise, false.</param>
      <param name="ignoreHiddenColumns">true to exclude hidden columns from calculation; otherwise, false.</param>
      <returns>The number of cells with data.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Delete(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.DeleteMode)">
      <summary>
        <para>Deletes the cell range from the worksheet.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range to be deleted from the worksheet.</param>
      <param name="mode">A <see cref="T:DevExpress.Spreadsheet.DeleteMode"/> enumeration member specifying in which direction to shift other cells.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Delete(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Deletes the cell range from the worksheet, shifting other cells in the same row to the left.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range to be deleted.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.GroupColumns(DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Groups columns that comprise the cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range that belongs to columns to be grouped.</param>
      <param name="collapse">true, if the created group is collapsed; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.GroupRows(DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Groups rows that comprise the cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range that belongs to rows to be grouped.</param>
      <param name="collapse">true, if the created group is collapsed; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Insert(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.InsertCellsMode)">
      <summary>
        <para>Inserts the cell range in the worksheet.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range where new cells should be inserted.</param>
      <param name="mode">An <see cref="T:DevExpress.Spreadsheet.InsertCellsMode"/> enumeration member specifying in which direction to shift other cells.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Insert(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Inserts the cell range in the worksheet, shifting other cells in the same column down.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range where new cells should be inserted.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Max(DevExpress.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
      <summary>
        <para>Returns the maximum numerical value in the current cell range.</para>
      </summary>
      <param name="range">A cell range for which the maximum value is calculated.</param>
      <param name="ignoreHiddenRows">true to exclude hidden rows from calculation; otherwise, false.</param>
      <param name="ignoreHiddenColumns">true to exclude hidden columns from calculation; otherwise, false.</param>
      <returns>The maximum cell value. Null (Nothing in Visual Basic), if the cell range doesn’t contain numeric values.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Merge(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.MergeCellsMode)">
      <summary>
        <para>Merge cells in the specified mode.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the range of cells to be merged.</param>
      <param name="mode">A <see cref="T:DevExpress.Spreadsheet.MergeCellsMode"/> enumeration member that specifies how to merge cells.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Merge(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Merges cells.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the range of cells to be merged.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Min(DevExpress.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
      <summary>
        <para>Returns the minimum numerical value in the current cell range.</para>
      </summary>
      <param name="range">A cell range for which the minimum value is calculated.</param>
      <param name="ignoreHiddenRows">true to exclude hidden rows from calculation; otherwise, false.</param>
      <param name="ignoreHiddenColumns">true to exclude hidden columns from calculation; otherwise, false.</param>
      <returns>The minimum cell value. Null (Nothing in Visual Basic), if the cell range doesn’t contain numeric values.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.NumericalCount(DevExpress.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
      <summary>
        <para>Returns the number of cells in the current cell range that contain numerical data.</para>
      </summary>
      <param name="range">A cell range for which the numerical count is calculated.</param>
      <param name="ignoreHiddenRows">true to exclude hidden rows from calculation; otherwise, false.</param>
      <param name="ignoreHiddenColumns">true to exclude hidden columns from calculation; otherwise, false.</param>
      <returns>The number of cells with numerical values.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.RemoveSubtotal(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes subtotals for the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells for which the subtotals should be removed.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Select(DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Selects the cell range and specifies whether to expand cell selection to include merged cells.</para>
      </summary>
      <param name="range">The cell range to select.</param>
      <param name="expandToMergedCells">true to include merged cells in the selected range; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Select(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Selects the cell range.</para>
      </summary>
      <param name="range">The cell range to select.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Subtotal(DevExpress.Spreadsheet.CellRange,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32,System.String)">
      <summary>
        <para>Creates subtotals for the specified range of cells.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells for which the subtotals should be created.</param>
      <param name="groupByColumn">An integer that specifies the zero-based index of a column containing related data for grouping.</param>
      <param name="subtotalColumnList">A list of column indexes in a worksheet that defines columns for which the subtotals should be calculated.</param>
      <param name="functionCode">An integer that specifies the code of the function to be used in calculating subtotals.</param>
      <param name="functionText">A string that defines the text to be displayed in the summary rows.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.Sum(DevExpress.Spreadsheet.CellRange,System.Boolean,System.Boolean)">
      <summary>
        <para>Returns the sum of numerical values in the current cell range.</para>
      </summary>
      <param name="range">A cell range for which the sum is calculated.</param>
      <param name="ignoreHiddenRows">true to exclude hidden rows from calculation; otherwise, false.</param>
      <param name="ignoreHiddenColumns">true to exclude hidden columns from calculation; otherwise, false.</param>
      <returns>The sum value. If cells are empty or don’t contain numeric values, this method returns 0.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.UnGroupColumns(DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Ungroups the grouped columns that comprise the cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range that belongs to columns to be ungrouped.</param>
      <param name="unhideCollapsed">true, if the collapsed columns are displayed after ungrouping; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.UnGroupRows(DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Ungroups the grouped rows that comprise the cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range that belongs to rows to be ungrouped.</param>
      <param name="unhideCollapsed">true, if the collapsed rows are displayed after ungrouping; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeExtensions.UnMerge(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Unmerges cells that have been merged.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the range of cells to be unmerged.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.RangeImageOptions">
      <summary>
        <para>Contains options used to export a cell range to an image.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RangeImageOptions.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Spreadsheet.RangeImageOptions"/> class instance.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeImageOptions.BackgroundColor">
      <summary>
        <para>Specifies the background color for the output image.</para>
      </summary>
      <value>The background color. The default color is white.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeImageOptions.BlackAndWhite">
      <summary>
        <para>Specifies whether to save a cell range as a black and white image.</para>
      </summary>
      <value>true to generate a black and white image; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeImageOptions.ExportDrawingObjects">
      <summary>
        <para>Specifies whether to include drawing objects (charts, shapes, and pictures) in the output image.</para>
      </summary>
      <value>true to export drawing objects; otherwise, false. The default value is true.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeImageOptions.ExportGridlines">
      <summary>
        <para>Specifies whether to include cell gridlines in the output image.</para>
      </summary>
      <value>true to export gridlines; otherwise, false. The default value is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeImageOptions.ExportHeadings">
      <summary>
        <para>Specifies whether to include row and column headings in the output image.</para>
      </summary>
      <value>true to export headings; otherwise, false. The default value is false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeImageOptions.GridlineColor">
      <summary>
        <para>Specifies the color of cell gridlines if they are included in the output image.</para>
      </summary>
      <value>The gridline color. The default color is black.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeImageOptions.Resolution">
      <summary>
        <para>Specifies the image resolution (in DPI).</para>
      </summary>
      <value>A positive DPI value. The default value is 96.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RangeImageOptions.Scale">
      <summary>
        <para>Specifies how to scale worksheet content before it is exported to an image.</para>
      </summary>
      <value>A scale percentage between 10% and 400%. The default value is 100%.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RankConditionalFormatting">
      <summary>
        <para>Represents a &quot;top/bottom N&quot; conditional formatting rule.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.RankConditionalFormatting.Condition">
      <summary>
        <para>Gets or sets the type of the conditional format operator used in the &quot;top/bottom N&quot; conditional formatting rule.</para>
      </summary>
      <value>One of <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingRankCondition"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RankConditionalFormatting.Rank">
      <summary>
        <para>Gets or sets a rank value used in the &quot;top/bottom N&quot; conditional formatting rule.</para>
      </summary>
      <value>A positive integer that is a number or percentage of the rank value.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ReadOnlyDocumentCustomProperties">
      <summary>
        <para>Stores custom document properties associated with a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentCustomProperties.Count">
      <summary>
        <para>Returns the number of custom document properties associated with a workbook.</para>
      </summary>
      <value>The number of custom properties defined in the document.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentCustomProperties.Item(System.String)">
      <summary>
        <para>Returns a value of the custom document property with the given name.</para>
      </summary>
      <param name="name">The name of the custom property whose value should be returned.</param>
      <value>The custom property’s value.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentCustomProperties.Names">
      <summary>
        <para>Returns a collection of custom property names.</para>
      </summary>
      <value>An enumerator that supports iteration over the collection.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ReadOnlyDocumentProperties">
      <summary>
        <para>Stores document properties retrieved from a workbook by the Workbook.LoadDocumentProperties method.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Application">
      <summary>
        <para>Returns the name of the application used to create or modify the document.</para>
      </summary>
      <value>The application name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Author">
      <summary>
        <para>Returns the name of the document’s author.</para>
      </summary>
      <value>The author’s name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Category">
      <summary>
        <para>Returns the document content category.</para>
      </summary>
      <value>The category name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Company">
      <summary>
        <para>Returns the name of the company associated with the document.</para>
      </summary>
      <value>The company name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.ContentStatus">
      <summary>
        <para>Returns the status of document content (e.g., “Draft”, “Reviewed”, or “Final”).</para>
      </summary>
      <value>The content status.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Created">
      <summary>
        <para>Returns the date and time when the document was created.</para>
      </summary>
      <value>The date and time when the document was created.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Custom">
      <summary>
        <para>Returns custom document properties associated with a workbook.</para>
      </summary>
      <value>An object that stores custom document properties.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Description">
      <summary>
        <para>Returns the document content description.</para>
      </summary>
      <value>The document’s description.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.DocumentRevision">
      <summary>
        <para>Returns the number of document revisions.</para>
      </summary>
      <value>The number of document saves or revisions.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.DocumentVersion">
      <summary>
        <para>Returns the document’s version.</para>
      </summary>
      <value>The version number.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Keywords">
      <summary>
        <para>Returns the delimited set of keywords used for search and indexing.</para>
      </summary>
      <value>The document keywords.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.LastModifiedBy">
      <summary>
        <para>Returns the name of the user who last modified and saved the document.</para>
      </summary>
      <value>The user name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Manager">
      <summary>
        <para>Returns the manager name.</para>
      </summary>
      <value>The manager name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Modified">
      <summary>
        <para>Returns the date and time when the document was last saved.</para>
      </summary>
      <value>The date and time of the last modification.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Printed">
      <summary>
        <para>Returns the date and time when the document was last printed.</para>
      </summary>
      <value>The date and time of the last print operation.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Security">
      <summary>
        <para>Returns the security level of the document.</para>
      </summary>
      <value>An enumeration member that defines the security level.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Subject">
      <summary>
        <para>Returns the document’s subject.</para>
      </summary>
      <value>The document’s subject.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Title">
      <summary>
        <para>Returns the document’s title.</para>
      </summary>
      <value>The document’s title</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ReadOnlyDocumentProperties.Version">
      <summary>
        <para>Returns the version of the application used to create or modify the document.</para>
      </summary>
      <value>The version number.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RealTimeData">
      <summary>
        <para>Defines a real-time data object for use with the Real Time Data (RTD) function.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RealTimeData.RefreshData">
      <summary>
        <para>Retrieves data from the server and updates the Real Time Data (RTD) function result.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RealTimeData.RestartServers">
      <summary>
        <para>Reconnects to a real-time data server and updates the data.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ReferenceElement">
      <summary>
        <para>Contains values to specify the type of a cell reference to be obtained.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ReferenceElement.ColumnAbsolute">
      <summary>
        <para>The cell reference has the absolute column reference.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ReferenceElement.IncludeSheetName">
      <summary>
        <para>The cell reference includes the worksheet name.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ReferenceElement.RowAbsolute">
      <summary>
        <para>The cell reference has the absolute row reference.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ReferenceStyle">
      <summary>
        <para>Specifies the cell reference style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ReferenceStyle.A1">
      <summary>
        <para>The cell range reference is in the A1 reference style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ReferenceStyle.R1C1">
      <summary>
        <para>The cell range reference is in the R1C1 reference style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ReferenceStyle.UseDocumentSettings">
      <summary>
        <para>The cell range reference is in the reference style used in the workbook.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.RichTextRange">
      <summary>
        <para>A range of characters within a cell’s rich text.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRange.Font">
      <summary>
        <para>Provides access to font settings for the current region of the cell text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFontProperties"/> object that contains font attributes applied to the current region of the cell text.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextRange.SetFont(DevExpress.Spreadsheet.SpreadsheetFont)">
      <summary>
        <para>Applies the specified font settings to the current region of the cell text.</para>
      </summary>
      <param name="font">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFont"/> object or its descendant, a <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> object, containing the necessary font settings.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRange.Text">
      <summary>
        <para>Gets or sets a text string for the current region of the cell text.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text associated with the current cell region.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RichTextRun">
      <summary>
        <para>A region of the cell text with its own set of font characteristics.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRun.Font">
      <summary>
        <para>Provides access to font settings of the current rich text run.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> object that contains font attributes applied to the current rich text region.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRun.Text">
      <summary>
        <para>Gets the text of the current rich text run.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text associated with the current rich text region.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RichTextRunFont">
      <summary>
        <para>Contains font attributes for a rich text run.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextRunFont.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextRunFont.#ctor(DevExpress.Spreadsheet.SpreadsheetFont)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> class with the specified settings.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFont"/> object containing the necessary font settings.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextRunFont.#ctor(System.String,System.Double,System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the font name.</param>
      <param name="size">A <see cref="T:System.Double"/> value that specifies the font size in points.</param>
      <param name="color">A <see cref="T:System.Drawing.Color"/> object that specifies the font color.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextRunFont.#ctor(System.String,System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the font name.</param>
      <param name="size">A <see cref="T:System.Double"/> value that specifies the font size in points.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.Bold">
      <summary>
        <para>Gets or sets a value indicating whether the current text run is formatted as bold.</para>
      </summary>
      <value>true, if a text region is bold; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.Color">
      <summary>
        <para>Gets or sets the color of the font applied to the current text run.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure that specifies the font color.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextRunFont.Equals(DevExpress.Spreadsheet.SpreadsheetFont,DevExpress.Spreadsheet.SpreadsheetFont)">
      <summary>
        <para>Determines whether the specified objects are considered equal.</para>
      </summary>
      <param name="font1">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFont"/> or <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> object that is the first object to compare.</param>
      <param name="font2">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFont"/> or <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> object that is the second object to compare.</param>
      <returns>true, if the objects are considered equal; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextRunFont.Equals(DevExpress.Spreadsheet.SpreadsheetFont)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> instance.</para>
      </summary>
      <param name="other">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFont"/> or <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> object to compare with the current object.</param>
      <returns>true, if the specified object is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.FontStyle">
      <summary>
        <para>Gets or sets the font style (bold, italic, etc.) applied to the current text run.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFontStyle"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.Italic">
      <summary>
        <para>Gets or sets a value indicating whether the current text run is formatted as italic.</para>
      </summary>
      <value>true, if a text region is italic; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.Name">
      <summary>
        <para>Gets or sets the name of the font applied to the current text run.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value specifying the font name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.SchemeStyle">
      <summary>
        <para>Gets or sets the scheme of the font applied to the current text run.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FontSchemeStyles"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.Script">
      <summary>
        <para>Gets or sets whether the current text run is formatted as subscript, superscript, or neither.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ScriptType"/> enumerator member indicating whether a text region is subscript or superscript.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.Size">
      <summary>
        <para>Gets or sets the size of the font applied to the current text run.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value specifying the font size in points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.Strikethrough">
      <summary>
        <para>Gets or sets a value indicating whether the current text run is formatted as strikethrough.</para>
      </summary>
      <value>true, if the strikethrough format is applied to a text region; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextRunFont.UnderlineType">
      <summary>
        <para>Gets or sets the underline type applied to the current text run.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.UnderlineType"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RichTextString">
      <summary>
        <para>Rich formatted text in a cell.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextString.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.RichTextString"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextString.AddTextRun(System.String,DevExpress.Spreadsheet.RichTextRunFont)">
      <summary>
        <para>Appends a new text run to the current rich text string.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value that specifies the current run’s text.</param>
      <param name="font">A <see cref="T:DevExpress.Spreadsheet.RichTextRunFont"/> object that specifies font attributes to be applied to the text.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.RichTextString"/> object that specifies rich text contained in a cell.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextString.Characters">
      <summary>
        <para>Returns a range of all characters in the current rich text string.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.RichTextRange"/> object that contains the entire rich text string.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextString.Characters(System.Int32,System.Int32)">
      <summary>
        <para>Returns a range of characters that starts at the specified position and has the specified length.</para>
      </summary>
      <param name="start">An integer that is the zero-based character position from which the required text range starts.</param>
      <param name="count">An integer that is the number of characters in the required text range.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.RichTextRange"/> object that represents a range of characters within the cell text.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextString.Characters(System.Int32)">
      <summary>
        <para>Returns a range of characters that starts at the specified position and continues to the end of the rich text string.</para>
      </summary>
      <param name="start">An integer that is the zero-based character position from which the required text range starts.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.RichTextRange"/> object that represents a range of characters within the cell text.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.RichTextString.Equals(DevExpress.Spreadsheet.RichTextString)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.RichTextString"/> instance.</para>
      </summary>
      <param name="other">The object to compare with the current object.</param>
      <returns>true, if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.RichTextString"/> instance; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextString.IsEmpty">
      <summary>
        <para>Gets a value indicating whether the rich text in a cell is an empty string.</para>
      </summary>
      <value>true, if the rich text is a zero-length string (“”); otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextString.IsPlainText">
      <summary>
        <para>Gets a value indicating whether the rich text in a cell is a plain rather than a formatted text.</para>
      </summary>
      <value>true, if the rich text is empty or not formatted; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextString.Length">
      <summary>
        <para>Returns the number of characters in a rich text string.</para>
      </summary>
      <value>An integer that is the rich text length. 0, if the rich text string is empty.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextString.Runs">
      <summary>
        <para>Provides access to a collection of text runs that compose rich text in a cell.</para>
      </summary>
      <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.RichTextRun"/>,&gt; collection.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RichTextString.Text">
      <summary>
        <para>Gets or sets the full text of a cell.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text displayed in a cell.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Row">
      <summary>
        <para>A row in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Row.AutoFit">
      <summary>
        <para>Adjusts the row height to accommodate cell content.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Row.Delete">
      <summary>
        <para>Deletes a row from a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Row.GroupLevel">
      <summary>
        <para>Gets the grouping level of the affected row.</para>
      </summary>
      <value>An integer that specifies the grouping level of the row. This value is between 0 and 7.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Row.Heading">
      <summary>
        <para>Gets the heading of the individual row on a worksheet.</para>
      </summary>
      <value>A string value that is a number representing the row heading.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Row.Height">
      <summary>
        <para>Gets or sets the row height.</para>
      </summary>
      <value>The row height in measurement units defined by the Workbook.Unit property.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Row.Index">
      <summary>
        <para>Gets the zero-based index of the row within the worksheet’s <see cref="T:DevExpress.Spreadsheet.RowCollection"/>.</para>
      </summary>
      <value>An integer specifying the position of the row in the worksheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Row.Insert">
      <summary>
        <para>Inserts a new row into the worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Row.IsFiltered">
      <summary>
        <para>Gets a value indicting whether the current row belongs to a table or cell range to which filtering is applied.</para>
      </summary>
      <value>true, if the current row belongs to the filtered range; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Row.Item(System.Int32)">
      <summary>
        <para>Provides access to an individual cell located at the intersection of the current row and the specified column.</para>
      </summary>
      <param name="columnIndex">An integer that is the zero-based index of the column.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the cell at the specified column.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Row.Item(System.String)">
      <summary>
        <para>Provides access to an individual cell located at the intersection of the current row and the specified column.</para>
      </summary>
      <param name="columnHeading">A string that specifies the column heading in the A1 reference style (the letter or combination of letters, for example, “A”, “B”, “C”,…,”XFD”).</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that is the cell at the specified column.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Row.Visible">
      <summary>
        <para>Gets or sets whether the row is visible or hidden.</para>
      </summary>
      <value>true if the row is visible; otherwise false</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RowCollection">
      <summary>
        <para>A collection of all rows in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.AutoFit(System.Int32,System.Int32)">
      <summary>
        <para>Adjusts the height of rows to accommodate cell content.</para>
      </summary>
      <param name="first">An integer value specifying the zero-based index of the first row to be automatically resized.</param>
      <param name="last">An integer value specifying the zero-based index of the last row to be automatically resized.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.AutoOutline">
      <summary>
        <para>Automatically creates an outline for the specified rows.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.ClearOutline">
      <summary>
        <para>Removes an outline of rows.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.ClearOutline(System.Int32,System.Int32)">
      <summary>
        <para>Clears the outline for the specified rows.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first row to be ungrouped.</param>
      <param name="last">A zero-based integer representing the index of the last row to be ungrouped.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.CollapseAllGroups">
      <summary>
        <para>Collapses all the row groups in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.CollapseGroups(System.Int32)">
      <summary>
        <para>Collapses all row groups starting from the specified level.</para>
      </summary>
      <param name="level">A <see cref="T:System.Int32"/> value that specifies the grouping level starting from which row groups should be collapsed.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.ExpandAllGroups">
      <summary>
        <para>Expands all the row groups in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Group(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Groups the specified rows on a worksheet.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first row to be grouped.</param>
      <param name="last">A zero-based integer representing the index of the last row to be grouped.</param>
      <param name="collapse">true, if the created group is collapsed; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Hide(System.Int32,System.Int32)">
      <summary>
        <para>Hides the specified rows in a worksheet.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first row to be hidden.</param>
      <param name="last">A zero-based integer representing the index of the last row to be hidden.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Insert(System.Int32,System.Int32,DevExpress.Spreadsheet.RowFormatMode)">
      <summary>
        <para>Inserts multiple rows and specifies how to format these rows.</para>
      </summary>
      <param name="index">A zero-based index of the first row to insert. If the index is negative or exceeds the last available index (1048575), an exception occurs.</param>
      <param name="count">The number of rows to insert.</param>
      <param name="formatMode">An enumeration member that specifies how to format inserted rows.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Insert(System.Int32,System.Int32)">
      <summary>
        <para>Inserts multiple rows into the worksheet.</para>
      </summary>
      <param name="index">A zero-based index of the first row to insert. If the index is negative or exceeds the last available index (1048575), an exception occurs.</param>
      <param name="count">The number of rows to insert.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Insert(System.Int32)">
      <summary>
        <para>Inserts a new row into the worksheet at the specified position.</para>
      </summary>
      <param name="index">A zero-based index of the row to insert. If it is negative or exceeds the last available index (1048575), an exception occurs.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.RowCollection.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to individual rows in the collection.</para>
      </summary>
      <param name="rowIndex">A zero-based integer specifying the desired row’s position within the collection. If it’s negative or exceeds the last available index (a worksheet limits the number of rows to 1048576), an exception is raised.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Row"/> object which specifies the row at the specified position.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RowCollection.Item(System.String)">
      <summary>
        <para>Provides access to individual rows in the collection by their headings.</para>
      </summary>
      <param name="rowHeading">A string that specifies the heading of the row to be obtained (for example, “1”, “2”, “3”, etc.). This value matches the value of the row’s <see cref="P:DevExpress.Spreadsheet.Row.Heading"/> property.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Row"/> object that is a row with the specified heading.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RowCollection.LastUsedIndex">
      <summary>
        <para>Gets the index of the last edited row on a worksheet.</para>
      </summary>
      <value>A zero-based integer representing the index of the last modified row on a worksheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Remove(System.Func{System.Int32,System.Boolean})">
      <summary>
        <para>Removes rows that match the specified condition from the worksheet.</para>
      </summary>
      <param name="predicate">A delegate that is the function to check for a condition in each row.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Remove(System.Int32,System.Func{System.Int32,System.Boolean})">
      <summary>
        <para>Removes rows that match the specified condition from the worksheet.</para>
      </summary>
      <param name="first">An integer that specifies the index of a row from which the check should start.</param>
      <param name="predicate">A delegate that is the function to check for a condition in each row.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Remove(System.Int32,System.Int32,System.Func{System.Int32,System.Boolean})">
      <summary>
        <para>Removes rows that match the specified condition from the worksheet.</para>
      </summary>
      <param name="first">An integer that specifies the index of a row from which the check should start.</param>
      <param name="last">An integer that specifies the index of a row on which the check should end.</param>
      <param name="predicate">A delegate that is the function to check for a condition in each row.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Remove(System.Int32,System.Int32)">
      <summary>
        <para>Removes multiple rows from the worksheet.</para>
      </summary>
      <param name="index">A zero-based index of the first row to remove. If it is negative or exceeds the last available index (1048575), an exception occurs.</param>
      <param name="count">Specifies the number of rows to remove.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Remove(System.Int32)">
      <summary>
        <para>Removes the row at the specified position from the worksheet.</para>
      </summary>
      <param name="index">A zero-based index of the row to remove. If it is negative or exceeds the last available index (1048575), an exception occurs.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.UnGroup(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Ungroups the grouped rows on a worksheet.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first row to be ungrouped.</param>
      <param name="last">A zero-based integer representing the index of the last row to be ungrouped.</param>
      <param name="unhideCollapsed">true, if the collapsed rows are displayed after ungrouping; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowCollection.Unhide(System.Int32,System.Int32)">
      <summary>
        <para>Displays the hidden rows on a worksheet.</para>
      </summary>
      <param name="first">A zero-based integer representing the index of the first row to be unhidden.</param>
      <param name="last">A zero-based integer representing the index of the last row to be unhidden.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.RowFormatMode">
      <summary>
        <para>Lists values that specify how to format inserted rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.RowFormatMode.FormatAsNext">
      <summary>
        <para>Specifies that inserted rows should have the same formatting as the row below.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.RowFormatMode.FormatAsPrevious">
      <summary>
        <para>Specifies that inserted rows should have the same formatting as the row above.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.RowFormatMode.None">
      <summary>
        <para>Specifies that inserted rows should have no formatting applied.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.RowHeightChangedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.RowHeightChanged event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowHeightChangedEventArgs.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.RowHeightChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A name of the worksheet that contains the modified row.</param>
      <param name="index">A zero-based index of the row whose width was changed.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.RowHeightChangedEventArgs.Index">
      <summary>
        <para>Returns the index of the row whose height was changed.</para>
      </summary>
      <value>A zero-based row index.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RowHeightChangedEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl.RowHeightChanged event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.RowsChangedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.RowsInserted and the SpreadsheetControl.RowsRemoved events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowsChangedEventArgs.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.RowsChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the name of the sheet being modified.</param>
      <param name="startIndex">An integer specifying the index of the row with which the operation starts.</param>
      <param name="count">An integer specifying the number of rows affected.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.RowsChangingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.RowsInserting"/> and <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.RowsRemoving"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.RowsChangingEventArgs.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.RowsChangingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the name of the worksheet being modified.</param>
      <param name="startIndex">An integer specifying the index of the row from which the operation starts.</param>
      <param name="count">An integer specifying the number of rows affected.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.RowsColumnsChangingEventArgsBase">
      <summary>
        <para>Serves as the base for classes which provide data for the events which occur on inserting or removing rows and columns via the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/>‘s UI.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.RowsColumnsChangingEventArgsBase.Count">
      <summary>
        <para>Gets the number of rows/columns that will be inserted or removed.</para>
      </summary>
      <value>An integer that is the number of affected rows/columns.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.RowsColumnsChangingEventArgsBase.StartIndex">
      <summary>
        <para>Gets the index of the first row/column after which rows/columns will be inserted or removed.</para>
      </summary>
      <value>A zero-based integer that is the index of the row/column from which insertion or removal should start.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.RowsInsertedEventHandler">
      <summary>
        <para>A method that will handle the RowsInserted event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.RowsChangedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.RowsRemovedEventHandler">
      <summary>
        <para>A method that will handle the RowsRemoved event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.RowsChangedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ScriptType">
      <summary>
        <para>Contains the values used to make the text in a cell superscript or subscript.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ScriptType.None">
      <summary>
        <para>Specifies that the text is not formatted as subscript or as superscript.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ScriptType.Subscript">
      <summary>
        <para>Formats text as subscript.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ScriptType.Superscript">
      <summary>
        <para>Formats text as superscript.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ScrollPositionChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ScrollPositionChanged"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ScrollPositionChangedEventArgs.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ScrollPositionChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the name of the worksheet being scrolled.</param>
      <param name="columnIndex">An integer value that specifies the zero-based index of the left-most column of the currently visible area.</param>
      <param name="rowIndex">An integer value that specifies the zero-based index of the top row of the currently visible area.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ScrollPositionChangedEventArgs.ColumnIndex">
      <summary>
        <para>Gets the index of the left-most column of the currently visible area.</para>
      </summary>
      <value>An integer that is the zero-based index of the column to which the worksheet is scrolled.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ScrollPositionChangedEventArgs.RowIndex">
      <summary>
        <para>Gets the index of the top row of the currently visible area.</para>
      </summary>
      <value>An integer that is the zero-based index of the row to which the worksheet is scrolled.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SearchBy">
      <summary>
        <para>Lists values that specify the direction of the search.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SearchBy.Columns">
      <summary>
        <para>Searches each column from top to bottom. All the cells in the current column will be traversed before moving to the next column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SearchBy.Rows">
      <summary>
        <para>Searches each row from left to right. All the cells in the current row will be traversed from left to right before moving to the next row.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.SearchIn">
      <summary>
        <para>Lists values that specify what to examine in each cell while searching.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SearchIn.Formulas">
      <summary>
        <para>Searches cell values and formula expressions only, excluding the calculated results.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SearchIn.Values">
      <summary>
        <para>Searches cell values only (including values calculated from formulas).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SearchIn.ValuesAndFormulas">
      <summary>
        <para>Searches both cell values (including values calculated from formulas) and underlying formulas.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.SearchOptions">
      <summary>
        <para>Contains options affecting search in a document.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SearchOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SearchOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SearchOptions.MatchCase">
      <summary>
        <para>Gets or sets a value indicating whether the search is case-sensitive.</para>
      </summary>
      <value>true, to perform a case-sensitive search; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SearchOptions.MatchEntireCellContents">
      <summary>
        <para>Gets or sets a value indicating whether or not to search for cells whose contents are exactly alike.</para>
      </summary>
      <value>true, to restrict the search to the entire cell content; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SearchOptions.SearchBy">
      <summary>
        <para>Gets or sets the direction of the search.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.SearchBy"/> enumeration values indicating whether to search by rows or by columns.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SearchOptions.SearchIn">
      <summary>
        <para>Specifies whether to search cell values only or extend search to include underlying formulas.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.SearchIn"/> enumeration values indicating what to examine in each cell.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Shape">
      <summary>
        <para>A common interface for drawing objects in a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.AlternativeText">
      <summary>
        <para>Gets or sets the descriptive (alternative) text for a drawing object.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value specifying the alternative text.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.ConnectorFormat">
      <summary>
        <para>Provides access to the shape connector settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ConnectorFormat"/> object containing the shape connector options.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Shape.Delete">
      <summary>
        <para>Deletes a drawing object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Shape.ExportToImage">
      <summary>
        <para>Saves the drawing object as an image.</para>
      </summary>
      <returns>The resulting image.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Shape.ExportToImage(System.IO.Stream,DevExpress.Spreadsheet.ImageFileFormat)">
      <summary>
        <para>Saves the drawing object as an image in the specified format.</para>
      </summary>
      <param name="stream">A stream used to save the output image.</param>
      <param name="format">The output image format.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Shape.ExportToImage(System.String,DevExpress.Spreadsheet.ImageFileFormat)">
      <summary>
        <para>Saves the drawing object as an image in the specified format.</para>
      </summary>
      <param name="fileName">The file name (including the full path) for the output image.</param>
      <param name="format">The output image format.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Shape.GetChildren">
      <summary>
        <para>Retrieves the list of nested shapes and shape groups.</para>
      </summary>
      <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.Shape"/>,&gt; object that is the list of nested shapes and shape groups.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.Hyperlink">
      <summary>
        <para>Gets the hyperlink associated with a drawing object (picture).</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeHyperlink"/> object that is the hyperlink associated with the drawing object in a workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.Id">
      <summary>
        <para>Gets the drawing object identifier.</para>
      </summary>
      <value>An integer that is the drawing object’s unique identifier.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Shape.IncrementRotation(System.Int32)">
      <summary>
        <para>Increments the rotation angle of the drawing object by the specified number of degrees.</para>
      </summary>
      <param name="degrees">An integer that specifies how the drawing object is to be rotated, in degrees. A positive value rotates the drawing object clockwise, a negative value rotates it counterclockwise.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Shape.InsertHyperlink(System.String,System.Boolean)">
      <summary>
        <para>Associates a hyperlink with the drawing object.</para>
      </summary>
      <param name="uri">A string that is the URI of the hyperlink.</param>
      <param name="isExternal">true, if the hyperlink points to external location; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ShapeHyperlink"/> object that is a hyperlink associated with the drawing object in a worksheet.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.Name">
      <summary>
        <para>Gets or sets the name of the drawing object.</para>
      </summary>
      <value>A string that is the drawing object’s name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.ParentGroup">
      <summary>
        <para>Retrieves the group in which the current shape is contained.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Shape"/> object that is the target shape group.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Shape.RemoveHyperlink">
      <summary>
        <para>Removes the hyperlink associated with the current drawing object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.Rotation">
      <summary>
        <para>Gets or sets the rotation of the drawing object, in degrees.</para>
      </summary>
      <value>An integer that is the degree of rotation.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.ShapeGeometry">
      <summary>
        <para>Provides access to the shape’s geometry options.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeGeometry"/> object containing the shape’s geometry options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.ShapeText">
      <summary>
        <para>Provides access to the shape’s text options.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeText"/> object containing the shape’s text options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.ShapeType">
      <summary>
        <para>Returns the type of the drawing object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeType"/> enumeration value specifying the drawing object’s type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Shape.ZOrderPosition">
      <summary>
        <para>Gets the position of the current drawing object in the z-order.</para>
      </summary>
      <value>An integer that indicates the position in the z-order.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ShapeInserted"/> and <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ShapeRemoved"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeChangedEventArgs.#ctor(System.String,System.Int32,System.String,DevExpress.Spreadsheet.ShapeType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ShapeChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string specifying the name of the worksheet to/from which the drawing object has been inserted or removed.</param>
      <param name="shapeId">An integer specifying the ID of the drawing object that has been inserted or removed.</param>
      <param name="shapeName">A string specifying the name of the drawing object that has been inserted or removed.</param>
      <param name="shapeType">A <see cref="T:DevExpress.Spreadsheet.ShapeType"/> enumeration member specifying the type of the drawing object for which the event has been raised.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeChangedEventArgs.ShapeId">
      <summary>
        <para>Gets the ID value of the drawing object that has been inserted or removed.</para>
      </summary>
      <value>An integer value specifying the drawing object’s unique identifier.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeChangedEventArgs.ShapeName">
      <summary>
        <para>Gets the name of the drawing object that has been inserted or removed.</para>
      </summary>
      <value>A string value specifying the drawing object name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeChangedEventArgs.ShapeType">
      <summary>
        <para>Gets the type of the drawing object that has been inserted or removed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeType"/> enumeration member.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeChangingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ShapeRemoving"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeChangingEventArgs.#ctor(System.String,System.Int32,DevExpress.Spreadsheet.ShapeType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ShapeChangingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheetName">A string that is the name of the worksheet from which the drawing object is being removed.</param>
      <param name="shapeId">An integer specifying the ID of the drawing object that is about to be removed.</param>
      <param name="shapeType">A <see cref="T:DevExpress.Spreadsheet.ShapeType"/> enumeration member specifying the type of the drawing object for which the event has been raised.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeChangingEventArgs.ShapeId">
      <summary>
        <para>Gets the ID value of the drawing object being removed.</para>
      </summary>
      <value>An integer value specifying the drawing object’s unique identifier.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeChangingEventArgs.ShapeType">
      <summary>
        <para>Gets the type of the drawing object being removed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeType"/> enumeration member.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeCollection">
      <summary>
        <para>A collection of drawing objects (shapes, pictures, and charts).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.AddConnector(DevExpress.Spreadsheet.ConnectorType,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates an unbound shape connector.</para>
      </summary>
      <param name="connectorType">One of the <see cref="T:DevExpress.Spreadsheet.ConnectorType"/> enumeration values indicating the connector’s type.</param>
      <param name="startX">A <see cref="T:System.Single"/> value indicating the starting point’s distance from the left of the worksheet.</param>
      <param name="startY">A <see cref="T:System.Single"/> value indicating the staring point’s distance from the top of the worksheet.</param>
      <param name="endX">A <see cref="T:System.Single"/> value indicating the end point’s distance from the left of the worksheet.</param>
      <param name="endY">A <see cref="T:System.Single"/> value indicating the end point’s distance from the top of the worksheet.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Shape"/> object that is the resulting shape connector.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.AddShape(DevExpress.Spreadsheet.ShapeGeometryPreset,DevExpress.Spreadsheet.Cell,System.Single,System.Single)">
      <summary>
        <para>Inserts a shape so that its top left corner is located at the specified cell.</para>
      </summary>
      <param name="shapePreset">An enumeration member that specifies the shape’s geometry.</param>
      <param name="topLeftCell">A cell where the top left corner of the shape should be located.</param>
      <param name="width">The shape’s width. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property determines the unit of measurement.</param>
      <param name="height">The shape’s height. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property determines the unit of measurement.</param>
      <returns>The resulting shape.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.AddShape(DevExpress.Spreadsheet.ShapeGeometryPreset,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Inserts a shape to fit in the specified range.</para>
      </summary>
      <param name="shapePreset">An enumeration member that specifies the shape’s geometry.</param>
      <param name="targetRange">A cell range to which the inserted shape should fit.</param>
      <returns>The resulting shape.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.AddShape(DevExpress.Spreadsheet.ShapeGeometryPreset,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Inserts a shape with a specific geometry type.</para>
      </summary>
      <param name="shapePreset">One of the <see cref="T:DevExpress.Spreadsheet.ShapeGeometryPreset"/> enumeration values indicating the shape’s geometry type.</param>
      <param name="x">A <see cref="T:System.Single"/> value indicating the distance from the left of the worksheet.</param>
      <param name="y">A <see cref="T:System.Single"/> value indicating the distance from the top of the worksheet.</param>
      <param name="width">A <see cref="T:System.Single"/> value that is shape’s width.</param>
      <param name="height">A <see cref="T:System.Single"/> value that is the shape’s height.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Shape"/> object that is the resulting shape.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.AddTextBox(DevExpress.Spreadsheet.Cell,System.Single,System.Single,System.String)">
      <summary>
        <para>Inserts a text box so that its top left corner is located at the specified cell.</para>
      </summary>
      <param name="topLeftCell">A cell where the top left corner of the text box should be located.</param>
      <param name="width">The text box’s width. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property determines the unit of measurement.</param>
      <param name="height">The text box’s height. The <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property determines the unit of measurement.</param>
      <param name="text">The text box’s content.</param>
      <returns>The resulting text box.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.AddTextBox(DevExpress.Spreadsheet.CellRange,System.String)">
      <summary>
        <para>Inserts a text box to fit in the specified range.</para>
      </summary>
      <param name="targetRange">A cell range to which the inserted text box should fit.</param>
      <param name="text">The text box’s content.</param>
      <returns>The resulting text box.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.AddTextBox(System.Single,System.Single,System.Single,System.Single,System.String)">
      <summary>
        <para>Inserts a text box.</para>
      </summary>
      <param name="x">A <see cref="T:System.Single"/> value indicating the distance from the left of the worksheet.</param>
      <param name="y">A <see cref="T:System.Single"/> value indicating the distance from the top of the worksheet.</param>
      <param name="width">A <see cref="T:System.Single"/> value that is the text box’s width.</param>
      <param name="height">A <see cref="T:System.Single"/>value that is the text box’s height.</param>
      <param name="text">A string value that is the text box’s content.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Shape"/> object that is the resulting text box.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.Clear">
      <summary>
        <para>Removes all objects from the <see cref="T:DevExpress.Spreadsheet.ShapeCollection"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.Contains(System.String)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="shapeName">A string that is the drawing object’s name.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.Flatten">
      <summary>
        <para>Converts a shape collection into a flattened collection that contains all drawing objects in a worksheet, including items of shape groups.</para>
      </summary>
      <returns>A flattened collection of drawing objects in a worksheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.GetShapeById(System.Int32)">
      <summary>
        <para>Gets a drawing object by its ID value.</para>
      </summary>
      <param name="id">An integer value specifying the drawing object’s unique identifier.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Shape"/> object representing the drawing object with the specified identifier.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.GetShapesByName(System.String)">
      <summary>
        <para>Gets a drawing object(s) by name.</para>
      </summary>
      <param name="shapeName">A string that is the name of a drawing object.</param>
      <returns>A collection of drawing objects with the same name.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.GroupShapes(System.Collections.Generic.IList{DevExpress.Spreadsheet.Shape})">
      <summary>
        <para>Groups shapes into a shape group.</para>
      </summary>
      <param name="shapes">A collection of shapes to be grouped.</param>
      <returns>A shape group.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.NormalizeZOrder">
      <summary>
        <para>Recalculates z-order values for drawing objects, so that they are consecutive integers.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes an element at the specified index from the <see cref="T:DevExpress.Spreadsheet.ShapeCollection"/> collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the object to remove. If it’s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeCollection.UngroupShapes(DevExpress.Spreadsheet.Shape)">
      <summary>
        <para>Splits a shape group into individual shapes.</para>
      </summary>
      <param name="groupShape">A <see cref="T:DevExpress.Spreadsheet.Shape"/> object that is a shape group to be ungrouped.</param>
      <returns>An <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.Shape"/>,&gt; object that is a list of shapes from a shape group.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeFormatBase">
      <summary>
        <para>Contains properties used to format drawing objects (shapes, pictures, and charts).</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeFormatBase.Fill">
      <summary>
        <para>Provides access to fill options for the specified drawing object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeFill"/> object that contains shape fill options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeFormatBase.Outline">
      <summary>
        <para>Provides access to the options used to format an outline of the specified drawing object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeOutline"/> object containing line style options.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeGeometry">
      <summary>
        <para>Contains the shape geometry information.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeGeometry.ConnectionSiteCount">
      <summary>
        <para>Returns the number of a shape’s connection sites.</para>
      </summary>
      <value>A <see cref="T:System.Int32"/> value that is the connection sites’ number.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeGeometry.Preset">
      <summary>
        <para>Gets or sets the shape’s geometry type.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ShapeGeometryPreset"/> enumeration values indicating the shape’s geometry preset.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeGeometryPreset">
      <summary>
        <para>Lists values that specify the shape geometry type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.AccentBorderLineCallout1">
      <summary>
        <para>A callout with a border, accent bar, and a straight callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.AccentBorderLineCallout2">
      <summary>
        <para>A callout with a border, accent bar, and a two-segment callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.AccentBorderLineCallout3">
      <summary>
        <para>A callout with a border, accent bar, and a three-segment callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.AccentLineCallout1">
      <summary>
        <para>A callout with an accent bar and a straight callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.AccentLineCallout2">
      <summary>
        <para>A callout with an accent bar and a two-segment callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.AccentLineCallout3">
      <summary>
        <para>A callout with an accent bar and a three-segment callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonBackPrevious">
      <summary>
        <para>The Back or Previous button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonBeginning">
      <summary>
        <para>The Beginning button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonBlank">
      <summary>
        <para>An empty button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonDocument">
      <summary>
        <para>The Document button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonEnd">
      <summary>
        <para>The End button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonForwardNext">
      <summary>
        <para>The Forward or Next button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonHelp">
      <summary>
        <para>The Help button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonHome">
      <summary>
        <para>The Home button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonInformation">
      <summary>
        <para>The Information button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonMovie">
      <summary>
        <para>The Movie button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonReturn">
      <summary>
        <para>The Return button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ActionButtonSound">
      <summary>
        <para>The Sound button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Arc">
      <summary>
        <para>An arc.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.BentArrow">
      <summary>
        <para>A block arrow that follows a curved 90-degree angle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.BentUpArrow">
      <summary>
        <para>A block arrow that follows a sharp 90-degree angle and points up by default.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Bevel">
      <summary>
        <para>A bevel.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.BlockArc">
      <summary>
        <para>A block arc.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.BorderLineCallout1">
      <summary>
        <para>A callout with a border and a straight callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.BorderLineCallout2">
      <summary>
        <para>A callout with a border and a two-segment callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.BorderLineCallout3">
      <summary>
        <para>A callout with a border and a three-segment callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Can">
      <summary>
        <para>A can.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ChartPlus">
      <summary>
        <para>A rectangle divided vertically and horizontally into four quarters.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ChartStar">
      <summary>
        <para>A rectangle divided into six parts along a vertical line and diagonal lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.ChartX">
      <summary>
        <para>A rectangle divided into four parts along diagonal lines.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Chevron">
      <summary>
        <para>A chevron.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Chord">
      <summary>
        <para>A circle with a chord.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.CircularArrow">
      <summary>
        <para>A block arrow that follows a curved 180-degree angle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Cloud">
      <summary>
        <para>A cloud shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.CloudCallout">
      <summary>
        <para>A cloud callout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.CornerTabs">
      <summary>
        <para>Four right triangles that define a rectangular shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Cross">
      <summary>
        <para>A cross.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Cube">
      <summary>
        <para>A cube.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.CurvedDownArrow">
      <summary>
        <para>A block arrow that curves down.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.CurvedDownRibbon">
      <summary>
        <para>A curved down ribbon banner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.CurvedLeftArrow">
      <summary>
        <para>A block arrow that curves left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.CurvedRightArrow">
      <summary>
        <para>A block arrow that curves right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.CurvedUpArrow">
      <summary>
        <para>A block arrow that curves up.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.CurvedUpRibbon">
      <summary>
        <para>A curved up ribbon banner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Custom">
      <summary>
        <para>A custom shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Decagon">
      <summary>
        <para>A decagon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.DiagonalStripe">
      <summary>
        <para>A diagonal stripe.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Diamond">
      <summary>
        <para>A diamond.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Division">
      <summary>
        <para>A division sign.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Dodecagon">
      <summary>
        <para>A dodecagon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Donut">
      <summary>
        <para>A donut.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.DoubleBrace">
      <summary>
        <para>A pair of braces.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.DoubleBracket">
      <summary>
        <para>A pair of brackets.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.DoubleWave">
      <summary>
        <para>A double wave.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.DownArrow">
      <summary>
        <para>A block arrow that points down.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.DownArrowCallout">
      <summary>
        <para>A callout with an arrow that points down.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.DownRibbon">
      <summary>
        <para>A ribbon banner with its center area below the ribbon ends.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Equal">
      <summary>
        <para>An equal sign.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Explosion1">
      <summary>
        <para>An explosion shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Explosion2">
      <summary>
        <para>An explosion shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartAlternateProcess">
      <summary>
        <para>The Alternate Process flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartCollate">
      <summary>
        <para>The Collate flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartConnector">
      <summary>
        <para>The Connector flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartDecision">
      <summary>
        <para>The Decision flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartDelay">
      <summary>
        <para>The Delay flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartDirectAccessStorage">
      <summary>
        <para>The Direct Access Storage flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartDisplay">
      <summary>
        <para>The Display flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartDocument">
      <summary>
        <para>The Document flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartExtract">
      <summary>
        <para>The Extract flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartInputOutput">
      <summary>
        <para>The Input/Output (Data) flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartInternalStorage">
      <summary>
        <para>The Internal Storage flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartMagneticDisk">
      <summary>
        <para>The Magnetic Disk flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartMagneticTape">
      <summary>
        <para>The Magnetic Tape (Sequential Access Storage) flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartManualInput">
      <summary>
        <para>The Manual Input flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartManualOperation">
      <summary>
        <para>The Manual Operation flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartMerge">
      <summary>
        <para>The Merge flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartMultidocument">
      <summary>
        <para>The Multi-document flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartOfflineStorage">
      <summary>
        <para>The Offline Storage flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartOffpageConnector">
      <summary>
        <para>The Off-page Connector flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartOr">
      <summary>
        <para>The Or flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartPredefinedProcess">
      <summary>
        <para>The Predefined Process flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartPreparation">
      <summary>
        <para>The Preparation flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartProcess">
      <summary>
        <para>The Process flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartPunchedCard">
      <summary>
        <para>The Card flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartPunchedTape">
      <summary>
        <para>The Punched Tape flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartSort">
      <summary>
        <para>The Sort flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartStoredData">
      <summary>
        <para>The Stored Data flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartSummingJunction">
      <summary>
        <para>The Summing Junction flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FlowChartTerminator">
      <summary>
        <para>The Terminator flowchart symbol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.FoldedCorner">
      <summary>
        <para>A rectangle with a folded corner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Frame">
      <summary>
        <para>A rectangular picture frame.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Funnel">
      <summary>
        <para>A funnel.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Gear6">
      <summary>
        <para>A gear with six teeth.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Gear9">
      <summary>
        <para>A gear with nine teeth.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.HalfFrame">
      <summary>
        <para>Half of a rectangular picture frame.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Heart">
      <summary>
        <para>A heart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Heptagon">
      <summary>
        <para>A heptagon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Hexagon">
      <summary>
        <para>A hexagon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.HorizontalScroll">
      <summary>
        <para>A horizontal scroll.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftArrow">
      <summary>
        <para>A block arrow that points left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftArrowCallout">
      <summary>
        <para>A callout with an arrow that points left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftBrace">
      <summary>
        <para>An opening brace.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftBracket">
      <summary>
        <para>An opening bracket.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftCircularArrow">
      <summary>
        <para>A circular arrow pointing counter-clockwise.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftRightArrow">
      <summary>
        <para>A block arrow that points left and right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftRightArrowCallout">
      <summary>
        <para>A callout with arrows that point both left and right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftRightCircularArrow">
      <summary>
        <para>A circular arrow pointing both clockwise and counter-clockwise.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftRightRibbon">
      <summary>
        <para>A ribbon with an arrow at both ends.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftRightUpArrow">
      <summary>
        <para>A block arrow that points left, right, and up.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LeftUpArrow">
      <summary>
        <para>A block arrow that points left and up.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LightningBolt">
      <summary>
        <para>A lightning bolt.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LineCallout1">
      <summary>
        <para>A callout with no border and a straight callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LineCallout2">
      <summary>
        <para>A callout with no border and a two-segment callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LineCallout3">
      <summary>
        <para>A callout with no border and a three-segment callout line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LineInverse">
      <summary>
        <para>An inverse line shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.LShape">
      <summary>
        <para>An L-shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Minus">
      <summary>
        <para>A minus sign.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Moon">
      <summary>
        <para>A moon shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Multiply">
      <summary>
        <para>A multiplication sign.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.NonIsoscelesTrapezoid">
      <summary>
        <para>A non-isosceles trapezoid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.NoSymbol">
      <summary>
        <para>A prohibition sign.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.NotchedRightArrow">
      <summary>
        <para>A notched block arrow that points right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.NotEqual">
      <summary>
        <para>A not-equal sign.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Octagon">
      <summary>
        <para>An octagon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Oval">
      <summary>
        <para>An oval.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.OvalCallout">
      <summary>
        <para>An oval-shaped callout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Parallelogram">
      <summary>
        <para>A parallelogram.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Pentagon">
      <summary>
        <para>A pentagon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Pie">
      <summary>
        <para>A circle with a portion missing.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.PieWedge">
      <summary>
        <para>A quarter of a circular shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Plaque">
      <summary>
        <para>A plaque.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.PlaqueTabs">
      <summary>
        <para>Four quarter circles that define a rectangular shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Plus">
      <summary>
        <para>A plus sign.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.QuadArrow">
      <summary>
        <para>A block arrow that points up, down, left, and right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.QuadArrowCallout">
      <summary>
        <para>A callout with arrows that point up, down, left, and right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Rectangle">
      <summary>
        <para>A rectangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RectangularCallout">
      <summary>
        <para>A rectangular callout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RegularPentagon">
      <summary>
        <para>A regular pentagon.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RightArrow">
      <summary>
        <para>A block arrow that points right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RightArrowCallout">
      <summary>
        <para>A callout with an arrow that points right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RightBrace">
      <summary>
        <para>A closing brace.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RightBracket">
      <summary>
        <para>A closing bracket.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RightTriangle">
      <summary>
        <para>A right triangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RoundDiagonalCornerRectangle">
      <summary>
        <para>A rectangle with two rounded corners, diagonally-opposed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RoundedRectangle">
      <summary>
        <para>A rounded rectangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RoundedRectangularCallout">
      <summary>
        <para>A rectangular callout with rounded corners.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RoundSameSideCornerRectangle">
      <summary>
        <para>A rectangle with two-rounded corners that share a side.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.RoundSingleCornerRectangle">
      <summary>
        <para>A rectangle with one rounded corner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.SmileyFace">
      <summary>
        <para>A smiley face.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.SnipAndRoundSingleCornerRectangle">
      <summary>
        <para>A rectangle with one snipped corner and one rounded corner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.SnipDiagonalCornerRectangle">
      <summary>
        <para>A rectangle with two snipped corners, diagonally-opposed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.SnipSameSideCornerRectangle">
      <summary>
        <para>A rectangle with two snipped corners that share a side.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.SnipSingleCornerRectangle">
      <summary>
        <para>A rectangle with one snipped corner.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.SquareTabs">
      <summary>
        <para>Four small squares that define a rectangular shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star10">
      <summary>
        <para>A 10-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star12">
      <summary>
        <para>A 12-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star16">
      <summary>
        <para>A 16-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star24">
      <summary>
        <para>A 24-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star32">
      <summary>
        <para>A 32-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star4">
      <summary>
        <para>A 4-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star5">
      <summary>
        <para>A 5-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star6">
      <summary>
        <para>A 6-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star7">
      <summary>
        <para>A 7-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Star8">
      <summary>
        <para>An 8-point star.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.StripedRightArrow">
      <summary>
        <para>A block arrow that points right and has stripes on the tail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Sun">
      <summary>
        <para>A sun shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.SwooshArrow">
      <summary>
        <para>A curved arrow.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Teardrop">
      <summary>
        <para>A water droplet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Trapezoid">
      <summary>
        <para>A trapezoid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Triangle">
      <summary>
        <para>An isosceles triangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.UpArrow">
      <summary>
        <para>A block arrow that points up.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.UpArrowCallout">
      <summary>
        <para>A callout with an arrow that points up.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.UpDownArrow">
      <summary>
        <para>A block arrow that points up and down.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.UpDownArrowCallout">
      <summary>
        <para>A callout with arrows that point up and down.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.UpRibbon">
      <summary>
        <para>A ribbon banner with its center area above the ribbon ends.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.UTurnArrow">
      <summary>
        <para>A block arrow that forms a U-shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.VerticalScroll">
      <summary>
        <para>A vertical scroll.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeGeometryPreset.Wave">
      <summary>
        <para>A wave.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeHyperlink">
      <summary>
        <para>A hyperlink associated with a drawing object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeHyperlink.Remove">
      <summary>
        <para>Removes a hyperlink.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapesCopyingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ShapesCopying"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapesCopyingEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.ShapesCopyingEventArgs"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapesCopyingEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.ShapesCopying"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.ShapesCopyingEventArgs"/> object that contains the event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeText">
      <summary>
        <para>Provides access to a shape’s text format settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.AutoSize">
      <summary>
        <para>Gets or sets a value indicating whether a shape or its text should be resized to fit the text within the shape’s bounds.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeTextAutoSizeType"/> enumeration member that specifies the auto-size mode.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeText.Characters">
      <summary>
        <para>Returns a range of all characters in the current shape text string.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ShapeTextRange"/> object containing all shape text strings.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeText.Characters(System.Int32,System.Int32)">
      <summary>
        <para>Returns a range of characters that starts at the specified position and has the specified length.</para>
      </summary>
      <param name="start">An integer that is the zero-based character position from which the required text range starts.</param>
      <param name="count">An integer that is the number of characters in the required text range.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ShapeTextRange"/> object that represents a range of characters within the shape text.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeText.Characters(System.Int32)">
      <summary>
        <para>Returns a range of characters that starts at the specified position and continues to the end of the shape text string.</para>
      </summary>
      <param name="start">An integer that is the zero-based character position from which the required text range starts.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ShapeTextRange"/> object that represents a range of characters within the shape text.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.ColumnsCount">
      <summary>
        <para>Gets or sets the number of columns in the text range.</para>
      </summary>
      <value>An integer, representing the number of columns in the text range.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.ColumnSpacing">
      <summary>
        <para>Specifies the space between columns in the text range.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value specifying the column spacing.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.Formula">
      <summary>
        <para>Specifies a formula that refers to a cell whose value should appear in the shape.</para>
      </summary>
      <value>A formula that links shape text to the target cell.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.HasText">
      <summary>
        <para>Gets whether the shape already contains text.</para>
      </summary>
      <value>true, if the shape has text; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.HorizontalAnchor">
      <summary>
        <para>Specifies the horizontal alignment of a shape text.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ShapeTextHorizontalAnchorType"/> enumeration values indicating the text’s horizontal alignment.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.HorizontalOverflow">
      <summary>
        <para>Gets or sets the horizontal overflow type for shape text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeTextHorizontalOverflowType"/> enumeration member that specifies the horizontal overflow type.
The default is Clip.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.IsLinked">
      <summary>
        <para>Indicates whether shape text is linked to a cell.</para>
      </summary>
      <value>true if shape text is linked to a cell; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.Length">
      <summary>
        <para>Retrieves the shape text’s length.</para>
      </summary>
      <value>An integer that is the text’s length.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.MarginBottom">
      <summary>
        <para>Gets or sets the bottom margin of a shape text.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the bottom margin in measure units used in the workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.MarginLeft">
      <summary>
        <para>Gets or sets the left margin of a shape text.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the left  margin in measure units used in the workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.MarginRight">
      <summary>
        <para>Gets or sets the right margin of a shape text.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the right margin in measure units used in the workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.MarginTop">
      <summary>
        <para>Gets or sets the top margin of a shape text.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that specifies the top margin in measure units used in the workbook.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.Orientation">
      <summary>
        <para>Gets or sets the shape text’s orientation.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ShapeTextOrientationType"/> enumeration values indicating the text orientation.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.RotateWithShape">
      <summary>
        <para>Gets or sets a value indicating whether text should be rotated together with a shape.</para>
      </summary>
      <value>true, to rotate text with a shape; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.Shape">
      <summary>
        <para>Provides access to the shape to which the text is related.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Shape"/> object that is the target shape.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.TextWarpFormat">
      <summary>
        <para>Gets or sets the transformation effect applied to shape text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeTextWarpFormat"/> enumeration member that specifies the text warp type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.VerticalAnchor">
      <summary>
        <para>Gets or sets the vertical alignment of a shape text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeTextVerticalAnchorType"/> enumeration values indicating the text’s vertical alignment.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.VerticalOverflow">
      <summary>
        <para>Gets or sets the vertical overflow type for shape text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeTextVerticalOverflowType"/> enumeration member that specifies the vertical overflow type.
The default is Clip.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeText.WordWrap">
      <summary>
        <para>Gets or sets whether to wrap text in a shape.</para>
      </summary>
      <value>true, to wrap the shape text; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextAutoSizeType">
      <summary>
        <para>Lists values used to specify the auto-size mode for shape text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextAutoSizeType.Automatic">
      <summary>
        <para>Auto-size mode is defined automatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextAutoSizeType.None">
      <summary>
        <para>No auto-size applied.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextAutoSizeType.Normal">
      <summary>
        <para>Text is scaled to fit the shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextAutoSizeType.Shape">
      <summary>
        <para>A shape is resized to fit the text.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextHorizontalAnchorType">
      <summary>
        <para>Lists values used to specify the shape text’s horizontal alignment.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextHorizontalAnchorType.Center">
      <summary>
        <para>Specifies a center-aligned shape text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextHorizontalAnchorType.None">
      <summary>
        <para>No horizontal alignment is specified.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextHorizontalOverflowType">
      <summary>
        <para>Lists values used to specify how to display text that overflows the shape horizontally.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextHorizontalOverflowType.Clip">
      <summary>
        <para>Hides text that does not fit horizontally within the shape’s bounds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextHorizontalOverflowType.Overflow">
      <summary>
        <para>Allows text to overflow the shape horizontally.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextOrientationType">
      <summary>
        <para>Lists values used to specify the type of a shape text’s orientation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextOrientationType.Downward">
      <summary>
        <para>The text orientation is downward.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextOrientationType.Horizontal">
      <summary>
        <para>The text orientation is horizontal.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextOrientationType.HorizontalRotatedFarEast">
      <summary>
        <para>The text orientation is horizontal, and the text is rotated as required for Asian languages.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextOrientationType.Upward">
      <summary>
        <para>The text orientation is upward.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextOrientationType.Vertical">
      <summary>
        <para>The text orientation is vertical.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextOrientationType.VerticalFarEast">
      <summary>
        <para>The text orientation is vertical, and the text is rotated as required for Asian languages.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextOrientationType.VerticalRightToLeft">
      <summary>
        <para>The text orientation is vertical, and the text direction is right-to-left.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextParagraphAlignment">
      <summary>
        <para>Lists values used to specify the paragraph alignment for a shape text range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextParagraphAlignment.Center">
      <summary>
        <para>Specifies a center-aligned paragraph.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextParagraphAlignment.Distributed">
      <summary>
        <para>Specifies that paragraph characters are distributed to fill the entire paragraph width.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextParagraphAlignment.Justified">
      <summary>
        <para>Specifies a fully justified paragraph.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextParagraphAlignment.JustifiedLow">
      <summary>
        <para>Specifies that a paragraph uses the small length kashida for Arabic text. For other languages, paragraph text is justified with a low character compression ratio.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextParagraphAlignment.Left">
      <summary>
        <para>Specifies a left-aligned paragraph.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextParagraphAlignment.Right">
      <summary>
        <para>Specifies a right-aligned paragraph.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextParagraphAlignment.ThaiDistributed">
      <summary>
        <para>Specifies that paragraph text is justified using Thai distributed justification for the Thai language.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextParagraphFormat">
      <summary>
        <para>Contains paragraph settings for a shape text range.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextParagraphFormat.Alignment">
      <summary>
        <para>Gets or sets the alignment of a shape text paragraph.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ShapeTextParagraphAlignment"/> enumeration values indicating the paragraph alignment.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextParagraphFormat.FirstLineIndent">
      <summary>
        <para>Gets or sets the indent for the first line in a paragraph.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value representing the left indent in points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextParagraphFormat.IndentLevel">
      <summary>
        <para>Gets or sets the indent level of a bulleted list item.</para>
      </summary>
      <value>An integer from 0 to 8 that is the paragraph’s indent level.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextParagraphFormat.LeftIndent">
      <summary>
        <para>Gets or sets a paragraph’s left indent.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value representing the left indent in points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextParagraphFormat.LineSpacing">
      <summary>
        <para>Gets or sets a paragraph’s line spacing value.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is line spacing in points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextParagraphFormat.ReadingOrder">
      <summary>
        <para>Gets or sets the shape text paragraph’s reading order.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ShapeTextReadingOrderType"/> enumeration values indicating the reading order.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextParagraphFormat.RightIndent">
      <summary>
        <para>Gets or sets a paragraph’s right indent.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value representing the right indent in points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextParagraphFormat.SpacingAfter">
      <summary>
        <para>Gets or sets the spacing after the current paragraph.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the spacing after the paragraph, in points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextParagraphFormat.SpacingBefore">
      <summary>
        <para>Gets or sets the spacing before the current paragraph.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value that is the spacing before the paragraph, in points.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextRange">
      <summary>
        <para>Represents a text range within a shape.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeTextRange.AddAfter(System.String)">
      <summary>
        <para>Inserts a new text range after the current <see cref="T:DevExpress.Spreadsheet.ShapeTextRange"/> object.</para>
      </summary>
      <param name="text">A string value that is the range’s content.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ShapeTextRange"/> object that is the new text range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeTextRange.AddBefore(System.String)">
      <summary>
        <para>Inserts a new text range before the current <see cref="T:DevExpress.Spreadsheet.ShapeTextRange"/> object.</para>
      </summary>
      <param name="text">A string value that is the range’s content.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ShapeTextRange"/> object that is the new text range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeTextRange.Delete">
      <summary>
        <para>Deletes the current <see cref="T:DevExpress.Spreadsheet.ShapeTextRange"/> object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextRange.Font">
      <summary>
        <para>Provides access to the text range’s font settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Drawings.ShapeTextFont"/> object containing font settings for a shape text range.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeTextRange.GetParagraphs">
      <summary>
        <para>Returns an array of all paragraphs that compose a shape’s text.</para>
      </summary>
      <returns>A DevExpress.Spreadsheet.ShapeTextRange[] object that is an array of paragraph ranges.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ShapeTextRange.GetRuns">
      <summary>
        <para>Returns an array of all text runs that compose a shape’s text.</para>
      </summary>
      <returns>An array of <see cref="T:DevExpress.Spreadsheet.ShapeTextRange"/> objects.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextRange.IsMixedFill">
      <summary>
        <para>Gets a value indicating whether the current range of a shape’s text has different fill settings applied.</para>
      </summary>
      <value>true, if a shape’s text range contains mixed fill settings; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextRange.IsMixedFont">
      <summary>
        <para>Gets a value indicating whether the current range of a shape’s text has different fonts applied.</para>
      </summary>
      <value>true, if a shape’s text range has mixed fonts applied; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextRange.IsMixedOutline">
      <summary>
        <para>Gets a value indicating whether the current range of a shape’s text has different outline settings applied.</para>
      </summary>
      <value>true, if a shape’s text range contains mixed outline settings; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextRange.IsMixedParagraph">
      <summary>
        <para>Gets a value indicating whether the current range of a shape’s text contains multiple paragraphs with mixed properties.</para>
      </summary>
      <value>true, if a shape’s text range contains mixed paragraphs; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextRange.ParagraphFormat">
      <summary>
        <para>Provides access to the text range’s paragraph options.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeTextParagraphFormat"/> object containing paragraph options for a shape text range.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextRange.Start">
      <summary>
        <para>Gets the position from which the shape text range starts.</para>
      </summary>
      <value>An integer that is the text range’s start position.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ShapeTextRange.Text">
      <summary>
        <para>Gets or sets the text in a text range.</para>
      </summary>
      <value>A string value that is the content for a shape.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextReadingOrderType">
      <summary>
        <para>Lists values used to specify the reading order of a shape’s text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextReadingOrderType.LeftToRight">
      <summary>
        <para>Specifies that the reading order is left-to-right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextReadingOrderType.RightToLeft">
      <summary>
        <para>Specifies that the reading order is right-to-left.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextVerticalAnchorType">
      <summary>
        <para>Lists values used to specify the shape text’s vertical alignment.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextVerticalAnchorType.Bottom">
      <summary>
        <para>Specifies a bottom-aligned shape text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextVerticalAnchorType.Center">
      <summary>
        <para>Specifies a center-aligned shape text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextVerticalAnchorType.Distributed">
      <summary>
        <para>Specifies that the shape text is distributed to fill the entire text frame.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextVerticalAnchorType.Justified">
      <summary>
        <para>Specifies a fully justified shape text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextVerticalAnchorType.Top">
      <summary>
        <para>Specifies a top-aligned shape text.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextVerticalOverflowType">
      <summary>
        <para>Lists values used to specify how to display text that overflows the shape vertically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextVerticalOverflowType.Clip">
      <summary>
        <para>Hides text that does not fit vertically within the shape’s bounds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextVerticalOverflowType.Ellipsis">
      <summary>
        <para>Hides text that does not fit vertically within the shape’s bounds and adds an ellipsis (…) at the end of the visible text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextVerticalOverflowType.Overflow">
      <summary>
        <para>Allows text to overflow the shape vertically.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeTextWarpFormat">
      <summary>
        <para>Lists warp types for shape text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.ArchDown">
      <summary>
        <para>The downward arch text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.ArchDownPour">
      <summary>
        <para>The downward pour arch text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.ArchUp">
      <summary>
        <para>The upward arch text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.ArchUpPour">
      <summary>
        <para>The upward pour arch text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.ButtonCurve">
      <summary>
        <para>The button text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.ButtonPour">
      <summary>
        <para>The button pour text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.CanDown">
      <summary>
        <para>The downward can text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.CanUp">
      <summary>
        <para>The upward can text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.CascadeDown">
      <summary>
        <para>The downward cascade text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.CascadeUp">
      <summary>
        <para>The upward cascade text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.ChevronDown">
      <summary>
        <para>The downward chevron text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.ChevronUp">
      <summary>
        <para>The upward chevron text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.CircleCurve">
      <summary>
        <para>The circle text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.CirclePour">
      <summary>
        <para>The circle pour text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.CurveDown">
      <summary>
        <para>The downward curve text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.CurveUp">
      <summary>
        <para>The upward curve text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.Deflate">
      <summary>
        <para>The deflate text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.DeflateBottom">
      <summary>
        <para>The bottom deflate text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.DeflateInflate">
      <summary>
        <para>The deflate-inflate text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.DeflateInflateDeflate">
      <summary>
        <para>The deflate-inflate-deflate text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.DeflateTop">
      <summary>
        <para>The top deflate text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.DoubleWave1">
      <summary>
        <para>The double wave 1 text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.DoubleWave2">
      <summary>
        <para>The double wave 2 text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.FadeDown">
      <summary>
        <para>The downward fade text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.FadeLeft">
      <summary>
        <para>The left fade text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.FadeRight">
      <summary>
        <para>The right fade text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.FadeUp">
      <summary>
        <para>The upward fade text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.Inflate">
      <summary>
        <para>The inflate text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.InflateBottom">
      <summary>
        <para>The bottom inflate text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.InflateTop">
      <summary>
        <para>The top inflate text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.NoWarp">
      <summary>
        <para>Shape text is not warped.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.PlainText">
      <summary>
        <para>The plain text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.RingInside">
      <summary>
        <para>The inside ring text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.RingOutside">
      <summary>
        <para>The outside ring text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.SlantDown">
      <summary>
        <para>The downward slant text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.SlantUp">
      <summary>
        <para>The upward slant text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.Stop">
      <summary>
        <para>The stop sign text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.TriangleDown">
      <summary>
        <para>The downward triangle text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.TriangleUp">
      <summary>
        <para>The upward triangle text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.Wave1">
      <summary>
        <para>The wave 1 text shape.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeTextWarpFormat.Wave2">
      <summary>
        <para>The wave 2 text shape.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ShapeType">
      <summary>
        <para>Lists types of graphical objects a worksheet can contain.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeType.Chart">
      <summary>
        <para>A chart.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeType.Connector">
      <summary>
        <para>A connector used to connect two shapes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeType.Group">
      <summary>
        <para>A group of shapes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeType.Picture">
      <summary>
        <para>A picture.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ShapeType.Shape">
      <summary>
        <para>A shape.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Sheet">
      <summary>
        <para>An individual sheet in a workbook and a base interface for <see cref="T:DevExpress.Spreadsheet.Worksheet"/> and <see cref="T:DevExpress.Spreadsheet.ChartSheet"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Sheet.ActiveView">
      <summary>
        <para>Returns an object that contains options used to display and print a sheet.</para>
      </summary>
      <value>An object that contains display and print settings for a sheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Sheet.Id">
      <summary>
        <para>Returns the sheet’s unique identifier.</para>
      </summary>
      <value>An integer value that uniquely identifies this sheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Sheet.MoveAfter(System.String)">
      <summary>
        <para>Moves the current sheet after the specified sheet in a workbook.</para>
      </summary>
      <param name="sheetName">A string specifying the name of the sheet after which the current sheet should be inserted. If a sheet under the specified name is not found, an exception occurs.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Sheet.MoveBefore(System.String)">
      <summary>
        <para>Moves the current sheet before the specified sheet in a workbook.</para>
      </summary>
      <param name="sheetName">A string specifying the name of the sheet before which the current sheet should be inserted. If a sheet under the specified name is not found, an exception occurs.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Sheet.MoveToBeginning">
      <summary>
        <para>Moves the current sheet to the first position in a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Sheet.MoveToEnd">
      <summary>
        <para>Moves the current sheet to the last position in a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Sheet.Name">
      <summary>
        <para>Returns the sheet name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the sheet name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Sheet.Print">
      <summary>
        <para>Prints the current sheet using the default printer settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Sheet.Print(System.Drawing.Printing.PrinterSettings)">
      <summary>
        <para>Prints the current sheet using the specified printer settings.</para>
      </summary>
      <param name="printerSettings">A <see cref="T:System.Drawing.Printing.PrinterSettings"/> object that contains printer settings.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Sheet.SheetType">
      <summary>
        <para>Returns the type of the sheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SheetType"/> enumeration value specifying the sheet type.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetAutoFilter">
      <summary>
        <para>An object implementing the filtering functionality for the specified worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetAutoFilter.AllowExpand">
      <summary>
        <para>Gets whether the auto filtering is expanded to the worksheet’s data range.</para>
      </summary>
      <value>true, if the filtered range is expanded to include data in affected columns; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetAutoFilter.Apply(DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Enables the filtering functionality for the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the cell range to which the filter is applied.</param>
      <param name="allowExpand">true, to expand the filtered range downwards to include data in affected columns; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetAutoFilter.Apply(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Enables the filtering functionality for the specified range of cells.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the cell range to which the filter is applied.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetCollection">
      <summary>
        <para>A collection of all sheets (worksheets and chart sheets) contained in a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetCollection.ActiveSheet">
      <summary>
        <para>Gets or sets the currently active sheet within a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Sheet"/> descendant that specifies the active worksheet or chart sheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetCollection.Contains(DevExpress.Spreadsheet.Sheet)">
      <summary>
        <para>Determines whether the collection contains the specified sheet.</para>
      </summary>
      <param name="sheet">A worksheet or chart sheet to locate in the collection.</param>
      <returns>true, if the collection contains the specified sheet; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetCollection.Contains(System.String)">
      <summary>
        <para>Determines whether the collection contains a sheet under the specified name.</para>
      </summary>
      <param name="name">A string specifying the name of the sheet to locate in the collection.</param>
      <returns>true, if the collection contains the sheet under the specified name; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetCollection.IndexOf(DevExpress.Spreadsheet.Sheet)">
      <summary>
        <para>Returns the index of the specified sheet in the collection.</para>
      </summary>
      <param name="sheet">A worksheet or chart sheet to locate in the collection.</param>
      <returns>A zero-based integer which specifies the sheet’s position within the collection. &#0045;1 if the sheet doesn’t belong to the collection.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetCollection.Item(System.String)">
      <summary>
        <para>Provides access to an individual sheet in the collection by its name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name of the sheet to obtain.</param>
      <value>A worksheet or chart sheet with the specified name.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetInsertedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.SheetInserted event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetInsertedEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SheetInsertedEventArgs"/> class with the specified name of the worksheet.</para>
      </summary>
      <param name="sheetName">A string that is the name of the inserted worksheet.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetInsertedEventHandler">
      <summary>
        <para>A method that will handle the SheetInserted event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SheetInsertedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetRemovedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.SheetRemoved event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetRemovedEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SheetRemovedEventArgs"/> class with the specified name of the worksheet.</para>
      </summary>
      <param name="sheetName">A string that is the name of the removed worksheet.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetRemovedEventHandler">
      <summary>
        <para>A method that will handle the SheetRemoved event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SheetRemovedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetRemovingEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.SheetRemoving event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetRemovingEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SheetRemovingEventArgs"/> class with the specified name of the worksheet.</para>
      </summary>
      <param name="sheetName">A string that is the name of the worksheet to be removed.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetRemovingEventHandler">
      <summary>
        <para>A method that will handle the SheetRemoving event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SheetRemovingEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetRenamedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.SheetRenamed event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetRenamedEventArgs.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SheetRenamedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="oldName">A string that is the former name of the worksheet.</param>
      <param name="newName">A string that is the current name of the worksheet.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetRenamedEventArgs.NewName">
      <summary>
        <para>Gets the new name of the renamed worksheet.</para>
      </summary>
      <value>A string that is the new name of the worksheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetRenamedEventArgs.OldName">
      <summary>
        <para>Gets the former name of the renamed worksheet.</para>
      </summary>
      <value>A string that is the name of the worksheet before it was renamed.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetRenamedEventHandler">
      <summary>
        <para>A method that will handle the SheetRenamed event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SheetRenamedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetRenamingEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.SheetRenaming event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetRenamingEventArgs.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SheetRenamingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="oldName">A string that is the name of the worksheet to be renamed.</param>
      <param name="newName">A string that is the new name of the worksheet.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetRenamingEventArgs.NewName">
      <summary>
        <para>Gets or sets the new name of the renamed worksheet.</para>
      </summary>
      <value>A string that is the new name of a renamed worksheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetRenamingEventArgs.OldName">
      <summary>
        <para>Gets the name of the worksheet being renamed.</para>
      </summary>
      <value>A string that is the current name of the worksheet.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetRenamingEventHandler">
      <summary>
        <para>A method that will handle the SheetRenaming event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SheetRenamingEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetThumbnailOptions">
      <summary>
        <para>Contains options used to generate a thumbnail from a worksheet or chart sheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetThumbnailOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SheetThumbnailOptions"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetThumbnailOptions.BackgroundColor">
      <summary>
        <para>Specifies the background color for the output image.</para>
      </summary>
      <value>The background color. The default color is white.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetThumbnailOptions.Resolution">
      <summary>
        <para>Specifies the image resolution (in DPI).</para>
      </summary>
      <value>A positive DPI value. The default value is 96.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetThumbnailOptions.Scale">
      <summary>
        <para>Specifies how to scale content of a worksheet or chart sheet before it is saved as an image.</para>
      </summary>
      <value>A scale percentage between 10% and 400%. The default value is 100%.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetThumbnailOptions.Stretch">
      <summary>
        <para>Specifies whether a worksheet area or chart sheet is stretched to fit the output image size.</para>
      </summary>
      <value>true to stretch the worksheet area or chart sheet; otherwise, false. The default value is false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetType">
      <summary>
        <para>Lists values used to specify the sheet type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SheetType.ChartSheet">
      <summary>
        <para>A chart sheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SheetType.Worksheet">
      <summary>
        <para>A worksheet.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.SheetView">
      <summary>
        <para>Contains display and print settings for a sheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetView.CustomPaperHeight">
      <summary>
        <para>Returns the custom paper height.</para>
      </summary>
      <value>The paper height in measurement units defined by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property. 0 if custom paper size is not specified.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetView.CustomPaperWidth">
      <summary>
        <para>Returns the custom paper width.</para>
      </summary>
      <value>The paper width in measurement units defined by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property. 0 if custom paper size is not specified.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetView.IsSelected">
      <summary>
        <para>Returns or specifies whether a sheet is selected in a workbook.</para>
      </summary>
      <value>true if the sheet is selected; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetView.Margins">
      <summary>
        <para>Returns an object that defines page margins for a printed sheet.</para>
      </summary>
      <value>An object used to specify margin settings.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetView.Orientation">
      <summary>
        <para>Returns or specifies page orientation for a printed sheet.</para>
      </summary>
      <value>An enumeration member that specifies page orientation.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetView.PaperKind">
      <summary>
        <para>Returns or specifies paper size for a printed sheet.</para>
      </summary>
      <value>An enumeration member that specifies paper size.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.SheetView.SetCustomPaperSize(System.Single,System.Single)">
      <summary>
        <para>Specifies custom paper size for a worksheet or chart sheet.</para>
      </summary>
      <param name="width">The paper width in measurement units defined by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</param>
      <param name="height">The paper height in measurement units defined by the <see cref="P:DevExpress.Spreadsheet.ISpreadsheetComponent.Unit"/> property.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetView.TabColor">
      <summary>
        <para>Gets or sets the color of the sheet tab.</para>
      </summary>
      <value>The sheet tab color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SheetView.Zoom">
      <summary>
        <para>Returns or specifies the zoom percentage for a sheet.</para>
      </summary>
      <value>The zoom percentage.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SortCondition">
      <summary>
        <para>Combines the column index and the specification of the direction in which column values should be sorted.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SortCondition.#ctor(System.Int32,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SortCondition"/> class with the specified settings.</para>
      </summary>
      <param name="columnIndex">An integer that is the index of a column to sort.</param>
      <param name="descendingOrder">true to sort in descending order; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.SortCondition.ColumnIndex">
      <summary>
        <para>Gets the index of a column by which to sort.</para>
      </summary>
      <value>An integer that is the zero-based index of a column in the range to which the AutoFilter is applied.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SortCondition.Descending">
      <summary>
        <para>Gets the sorting order.</para>
      </summary>
      <value>true for the descending sorting order; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SortField">
      <summary>
        <para>Specifies the field by which to sort, and the comparer used for sorting.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SortField.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SortField"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SortField.ColumnOffset">
      <summary>
        <para>Gets or sets the offset within the range for the column by which the range will be sorted.</para>
      </summary>
      <value>An integer that is the position of the column within the range referenced to the first column.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SortField.Comparer">
      <summary>
        <para>Gets or sets the comparer used to sort the column.</para>
      </summary>
      <value>A <see cref="T:System.Collections.Generic.IComparer`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CellValue"/>,&gt; object used to compare cell values in a column.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SortState">
      <summary>
        <para>Contains sort conditions and allows you to perform sorting.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SortState.Clear">
      <summary>
        <para>Clears sorting applied to the columns of the filtered range.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SortState.Conditions">
      <summary>
        <para>Provides access to a collection of sort conditions.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Spreadsheet.SortCondition"/> objects.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.SortState.Sort(System.Collections.Generic.IList{DevExpress.Spreadsheet.SortCondition})">
      <summary>
        <para>Sort columns as specified in sort conditions.</para>
      </summary>
      <param name="conditions">A collection of <see cref="T:DevExpress.Spreadsheet.SortCondition"/> objects.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.SortState.Sort(System.Int32,System.Boolean)">
      <summary>
        <para>Sort a specified column in the specified order.</para>
      </summary>
      <param name="columnIndex">An index of the column to sort. This is zero-based index of columns to which AutoFilter is applied.</param>
      <param name="descendingOrder">true to sort in descending order; otherwise, false.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Sparkline">
      <summary>
        <para>Represents a single sparkline in the sparkline group.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Sparkline.DataRange">
      <summary>
        <para>Gets or sets the cell range that contains the source data for a single sparkline.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that contains values for a sparkline.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Sparkline.Delete">
      <summary>
        <para>Removes an individual sparkline from the sparkline group.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Sparkline.MoveTo(DevExpress.Spreadsheet.SparklineGroup)">
      <summary>
        <para>Moves the sparkline to the specified sparkline group.</para>
      </summary>
      <param name="sparklineGroup">A <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> object that specifies an existing sparkline group to which the sparkline should be moved.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Sparkline.Position">
      <summary>
        <para>Returns the position of an individual sparkline in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the cell in which the sparkline is located.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Sparkline.SetPosition(System.Int32,System.Int32)">
      <summary>
        <para>Moves a sparkline to a new location.</para>
      </summary>
      <param name="columnIndex">An integer that is the zero-based index of the row to which the sparkline should be moved.</param>
      <param name="rowIndex">An integer that is the zero-based index of the column to which the sparkline should be moved.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SparklineAxisScaling">
      <summary>
        <para>Lists values used to specify how to calculate the minimum and maximum values for the vertical axis of a sparkline group.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SparklineAxisScaling.Custom">
      <summary>
        <para>Specifies that the minimum or maximum value for the sparkline vertical axis should be set to the custom value defined by the <see cref="P:DevExpress.Spreadsheet.SparklineVerticalAxis.MinCustomValue"/> or <see cref="P:DevExpress.Spreadsheet.SparklineVerticalAxis.MaxCustomValue"/> property, respectively.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SparklineAxisScaling.Group">
      <summary>
        <para>Specifies that the minimum or maximum value for the sparkline vertical axis should be calculated automatically and shared across all the sparklines in the group.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SparklineAxisScaling.Individual">
      <summary>
        <para>Specifies that the minimum or maximum value for the sparkline vertical axis should be automatically set to the lowest or highest value calculated individually for each sparkline in the group.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.SparklineCollection">
      <summary>
        <para>A collection that stores the <see cref="T:DevExpress.Spreadsheet.Sparkline"/> objects for the specified sparkline group.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineCollection.Add(System.Int32,System.Int32,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a new sparkline and adds it to the collection.</para>
      </summary>
      <param name="rowIndex">An integer that is the zero-based index of the row where the new sparkline should be located.</param>
      <param name="columnIndex">An integer that is the zero-based index of the column where the new sparkline should be located.</param>
      <param name="dataRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that contains the source data for the sparkline.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Sparkline"/> object that specifies the new sparkline.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineCollection.Contains(DevExpress.Spreadsheet.Sparkline)">
      <summary>
        <para>Indicates whether the collection contains the specified sparkline.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.Sparkline"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineCollection.GetSparkline(DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Returns a <see cref="T:DevExpress.Spreadsheet.Sparkline"/> object located in the specified cell.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object specifying a cell that contains a sparkline to be returned.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Sparkline"/> object that is a sparkline residing in the specified cell. Null (Nothing in VB), if the cell contains no sparkline or the sparkline in this cell doesn’t belong to the <see cref="T:DevExpress.Spreadsheet.SparklineCollection"/> that this method is called from.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineCollection.GetSparklines(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Returns sparklines located in the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object containing the sparklines to be returned.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.Sparkline"/>,&gt; collection of sparklines residing in the specified cell range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineCollection.IndexOf(DevExpress.Spreadsheet.Sparkline)">
      <summary>
        <para>Returns the index of the specified sparkline in the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.Sparkline"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the sparkline position within the collection. &#0045;1 if the sparkline doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineCollection.Remove(DevExpress.Spreadsheet.Sparkline)">
      <summary>
        <para>Removes the specified sparkline from the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.Sparkline"/> object to be removed from the collection.</param>
      <returns>true, if the specified sparkline contained in the collection was successfully removed; otherwise, false</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes a sparkline at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the sparkline to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SparklineColor">
      <summary>
        <para>Contains display options for the horizontal axis and data markers of a sparkline group.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineColor.Color">
      <summary>
        <para>Gets or sets the color of the horizontal axis and data markers for the sparkline group.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that is the color of a sparkline element.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineColor.IsVisible">
      <summary>
        <para>Gets or sets the visibility of the horizontal axis and data markers on each sparkline in the sparkline group.</para>
      </summary>
      <value>true, to display a sparkline element; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SparklineGroup">
      <summary>
        <para>Represents a sparkline group on a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.DateRange">
      <summary>
        <para>Gets or sets the date range for the sparkline group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that contains the date values for the sparkline data.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroup.Delete">
      <summary>
        <para>Removes the sparkline group from the worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.DisplayBlanksAs">
      <summary>
        <para>Gets or sets a value that specifies how empty cells should be plotted on the sparklines in the current sparkline group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.DisplayBlanksAs"/> enumeration value that determines how blank values should be displayed on a sparkline.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.HorizontalAxis">
      <summary>
        <para>Provides access to the settings for the horizontal axis of the sparkline group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineHorizontalAxis"/> object containing horizontal axis options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.LineWeight">
      <summary>
        <para>Gets or sets a line weight for the specified group of line sparklines.</para>
      </summary>
      <value>A System.Double value that is the line weight in points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.Points">
      <summary>
        <para>Provides access to the settings that control the visual appearance of sparkline data points.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklinePoints"/> object that contains the marker options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.Position">
      <summary>
        <para>Returns the position of a sparkline group in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the data range where the sparkline group is located.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.SeriesColor">
      <summary>
        <para>Gets or sets the color for each sparkline in the sparkline group.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> object that specifies the sparkline color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.ShowHidden">
      <summary>
        <para>Gets or sets a value indicating whether data in hidden cells should be displayed on the sparklines in the current sparkline group.</para>
      </summary>
      <value>true, to plot data in hidden cells; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.Sparklines">
      <summary>
        <para>Provides access to the collection of sparklines contained in the sparkline group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineCollection"/> object that is a collection of sparklines.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.Type">
      <summary>
        <para>Gets or sets the type of a sparkline group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineGroupType"/> enumeration value specifying the sparkline group type.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroup.UnGroup">
      <summary>
        <para>Splits the sparkline group into individual sparklines.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineGroup.VerticalAxis">
      <summary>
        <para>Provides access to the settings for the vertical axis of the sparkline group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineVerticalAxis"/> object containing vertical axis options.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SparklineGroupCollection">
      <summary>
        <para>A collection of the <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> objects in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroupCollection.Add(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.SparklineGroupType)">
      <summary>
        <para>Creates a sparkline group of the specified type and adds it to the collection.</para>
      </summary>
      <param name="position">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the cell range where the sparkline group should be located.</param>
      <param name="dataRange">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the cell range containing the source data for the group.</param>
      <param name="type">A <see cref="T:DevExpress.Spreadsheet.SparklineGroupType"/> enumeration member specifying the type of the group to be created.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> object that is the newly created group of sparklines.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroupCollection.Add(System.Collections.Generic.IList{DevExpress.Spreadsheet.Sparkline},DevExpress.Spreadsheet.SparklineGroupType)">
      <summary>
        <para>Creates a new sparkline group from the existing sparklines and returns the <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> object.</para>
      </summary>
      <param name="sparklines">A list of the <see cref="T:DevExpress.Spreadsheet.Sparkline"/> objects to form a group.</param>
      <param name="type">A <see cref="T:DevExpress.Spreadsheet.SparklineGroupType"/> enumeration member specifying the type of the group to be created.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> object that is the newly created group of sparklines.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroupCollection.Clear">
      <summary>
        <para>Removes all sparkline groups from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroupCollection.Contains(DevExpress.Spreadsheet.SparklineGroup)">
      <summary>
        <para>Indicates whether the collection contains the specified sparkline group.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroupCollection.GetSparklineGroup(DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Returns a <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> object that occupies the specified cell.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> object specifying a cell occupied by the sparkline group to be returned.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> object that is a sparkline group occupying the specified cell. Null (Nothing in VB), if the cell doesn’t contain any sparkline.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroupCollection.GetSparklineGroups(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Returns the sparkline groups located in the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range occupied by the sparkline groups to be returned.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.SparklineGroup"/>,&gt; collection of sparkline groups occupying the specified cell range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroupCollection.IndexOf(DevExpress.Spreadsheet.SparklineGroup)">
      <summary>
        <para>Returns the index of the specified sparkline group in the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the group position within the collection. &#0045;1 if the sparkline group doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroupCollection.Remove(DevExpress.Spreadsheet.SparklineGroup)">
      <summary>
        <para>Removes the specified sparkline group from the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.SparklineGroup"/> object to be removed from the collection.</param>
      <returns>true, if the specified sparkline group contained in the collection was successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SparklineGroupCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes a sparkline group at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the sparkline group to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SparklineGroupType">
      <summary>
        <para>Lists sparkline group types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SparklineGroupType.Column">
      <summary>
        <para>Sparkline data points are shown as vertical bars.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SparklineGroupType.Line">
      <summary>
        <para>Sparkline data points are shown as a line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SparklineGroupType.Stacked">
      <summary>
        <para>Sparkline data points are shown as win and loss squares.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.SparklineHorizontalAxis">
      <summary>
        <para>Contains settings for the horizontal axis of a sparkline group.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineHorizontalAxis.IsDateAxis">
      <summary>
        <para>Indicates whether the specified sparkline group uses a date axis.</para>
      </summary>
      <value>true, if the horizontal axis is of the date axis type; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineHorizontalAxis.RightToLeft">
      <summary>
        <para>Gets or sets a value indicating whether the data points on the horizontal axis are plotted in right-to-left order.</para>
      </summary>
      <value>true, to plot values right-to-left; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SparklinePoints">
      <summary>
        <para>Contains marker options for data points on the sparklines in a sparkline group.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklinePoints.First">
      <summary>
        <para>Provides access to the settings that control the color and visibility of the first data point for each sparkline in the group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineColor"/> object that specifies the marker color and visibility.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklinePoints.Highest">
      <summary>
        <para>Provides access to the settings that control the color and visibility of the marker for the highest data value on a sparkline.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineColor"/> object that specifies the marker color and visibility.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklinePoints.Last">
      <summary>
        <para>Provides access to the settings that control the color and visibility of the last data point for each sparkline in the group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineColor"/> object that specifies the marker color and visibility.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklinePoints.Lowest">
      <summary>
        <para>Provides access to the settings that control the color and visibility of the marker for the lowest data value on a sparkline.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineColor"/> object that specifies the marker color and visibility.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklinePoints.Markers">
      <summary>
        <para>Provides access to the settings that control the color and visibility of the data markers for each sparkline in the line sparkline group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineColor"/> object that specifies the marker color and visibility.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklinePoints.Negative">
      <summary>
        <para>Provides access to the settings that control the color and visibility of the negative data points for each sparkline in the group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineColor"/> object that specifies the marker color and visibility.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SparklineVerticalAxis">
      <summary>
        <para>Contains scaling options for the vertical axis of a sparkline group.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineVerticalAxis.MaxCustomValue">
      <summary>
        <para>Gets or sets the maximum custom value for the sparkline vertical axis.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the maximum value for the vertical axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineVerticalAxis.MaxScaleType">
      <summary>
        <para>Gets or sets a value that specifies the way to calculate the maximum value of the vertical axis for the sparkline group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineAxisScaling"/> enumeration value that specifies how to evaluate the maximum value of the axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineVerticalAxis.MinCustomValue">
      <summary>
        <para>Gets or sets the minimum custom value for the sparkline vertical axis.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that specifies the minimum value for the vertical axis.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SparklineVerticalAxis.MinScaleType">
      <summary>
        <para>Gets or sets a value that specifies the way to calculate the minimum value of the vertical axis for the sparkline group.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineAxisScaling"/> enumeration value that specifies how to evaluate the minimum value of the axis.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpecialConditionalFormatting">
      <summary>
        <para>Represents a conditional formatting rule that formats cells with specific values.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpecialConditionalFormatting.Condition">
      <summary>
        <para>Gets or sets the type of the conditional format operator used in the conditional formatting rule.</para>
      </summary>
      <value>One of <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingSpecialCondition"/> enumeration values.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetBeforeExportEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.BeforeExport"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetBeforeExportEventArgs.#ctor(DevExpress.Spreadsheet.DocumentFormat,DevExpress.Office.Export.IExporterOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SpreadsheetBeforeExportEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="documentFormat">A <see cref="T:DevExpress.XtraRichEdit.DocumentFormat"/> enumeration member specifying the destination format of the worksheet being exported.</param>
      <param name="options">An <see cref="T:DevExpress.Office.Export.IExporterOptions"/> object containing export options.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetBeforeExportEventArgs.DocumentFormat">
      <summary>
        <para>Gets the format of the document to which the worksheet will be exported.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration member that is the format of the exported document.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetBeforeExportEventArgs.Options">
      <summary>
        <para>Provides access to the options specific to export.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Office.Export.IExporterOptions"/> descendant containing options specific to export.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetBeforeImportEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.BeforeImport"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetBeforeImportEventArgs.#ctor(DevExpress.Spreadsheet.DocumentFormat,DevExpress.Office.Import.IImporterOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SpreadsheetBeforeImportEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="documentFormat">A <see cref="T:DevExpress.XtraRichEdit.DocumentFormat"/> enumeration member specifying the format of the document that will be imported.</param>
      <param name="options">An <see cref="T:DevExpress.Office.Import.IImporterOptions"/> object containing import options.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetBeforeImportEventArgs.DocumentFormat">
      <summary>
        <para>Gets the format of the document being imported.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration member that is the format of the imported document.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetBeforeImportEventArgs.Options">
      <summary>
        <para>Provides access to options specific to import.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Office.Import.IImporterOptions"/> descendant containing options specific to import.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetCustomAssemblyLoadingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CustomAssemblyLoading"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetCustomAssemblyLoadingEventArgs.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SpreadsheetCustomAssemblyLoadingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="path">A <see cref="T:System.String"/> value that specifies the path to the external assembly containing the Entity Framework model.</param>
      <param name="contextName">A <see cref="T:System.String"/> value that specifies the name of the Entity Framework context.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetCustomAssemblyLoadingEventArgs.ContextName">
      <summary>
        <para>Gets the name of the Entity Framework context.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that is the name of the Entity Framework context.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetCustomAssemblyLoadingEventArgs.Handled">
      <summary>
        <para>Gets or sets whether the e.Cancel setting in the event handler makes the final decision on loading the assembly.</para>
      </summary>
      <value>True to use only the CustomAsssemblyLoading event handler to decide whether to load an assembly; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetCustomAssemblyLoadingEventArgs.Path">
      <summary>
        <para>Gets the path to the external assembly containing the Entity Framework model.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the path to the external assembly containing the Entity Framework model.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetCustomAssemblyLoadingEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CustomAssemblyLoading"/> event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetCustomAssemblyLoadingEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetFont">
      <summary>
        <para>Contains the cell font attributes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.Bold">
      <summary>
        <para>Gets or sets the value indicating whether the cell content is formatted as bold.</para>
      </summary>
      <value>true, if the cell text is bold; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.Color">
      <summary>
        <para>Gets or sets the color of the font applied to the cell content.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/>  structure that specifies the font color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.FontStyle">
      <summary>
        <para>Gets or sets the font style (bold, italic, etc.) applied to the cell content.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFontStyle"/> enumerator member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.Italic">
      <summary>
        <para>Gets or sets the value indicating whether the cell content is formatted as italic.</para>
      </summary>
      <value>true, if the cell text is italic; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.Name">
      <summary>
        <para>Gets or sets the name of the font applied to cell content.</para>
      </summary>
      <value>The font name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.SchemeStyle">
      <summary>
        <para>Gets or sets the font scheme for the current font.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.FontSchemeStyles"/> enumeration members.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.Script">
      <summary>
        <para>Formats the cell content as subscript or superscript.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ScriptType"/> enumerator member indicating whether the text is subscript or superscript.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.Size">
      <summary>
        <para>Gets or sets the size of the font applied to the cell content.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value specifying the font size in points.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.Strikethrough">
      <summary>
        <para>Gets or sets the value indicating whether the cell content is formatted as strikethrough.</para>
      </summary>
      <value>true, if the strikethrough formatting is applied to the text; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFont.UnderlineType">
      <summary>
        <para>Gets or sets the type of underline applied to the cell content.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.UnderlineType"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetFontProperties">
      <summary>
        <para>Contains font attributes for a range of characters within the cell text.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.Bold">
      <summary>
        <para>Gets or sets a value indicating whether the given characters are formatted as bold.</para>
      </summary>
      <value>true, if a text region is bold; otherwise, false. Null for a mixture of bold and non-bold characters.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.Color">
      <summary>
        <para>Gets or sets the color of the font applied to the given characters.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Color"/> structure that specifies the font color. Null for a mixture of color values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.FontStyle">
      <summary>
        <para>Gets or sets the font style (bold, italic, etc.) applied to the given characters.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFontStyle"/> enumeration member. Null for a mixture of values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.Italic">
      <summary>
        <para>Gets or sets a value indicating whether the given characters are formatted as italic.</para>
      </summary>
      <value>true, if a text region is italic; otherwise, false. Null for a mixture of italic and non-italic characters.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.Name">
      <summary>
        <para>Gets or sets the name of the font applied to the given characters.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value specifying the font name. Null for a mixture of fonts.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.SchemeStyle">
      <summary>
        <para>Gets or sets the scheme of the font applied to the given characters.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.FontSchemeStyles"/> enumeration member. Null for a mixture of font scheme styles.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.Script">
      <summary>
        <para>Gets or sets whether the given characters are formatted as subscript, superscript, or neither.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ScriptType"/> enumerator member indicating whether a text region is subscript or superscript. Null for a mixture of values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.Size">
      <summary>
        <para>Gets or sets the size of the font applied to the given characters.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value specifying the font size in points. Null for a mixture of font sizes.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.Strikethrough">
      <summary>
        <para>Gets or sets a value indicating whether the given characters are formatted as strikethrough.</para>
      </summary>
      <value>true, if the strikethrough format is applied to a text region; otherwise, false. Null for a mixture of strikethrough and regular characters.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetFontProperties.UnderlineType">
      <summary>
        <para>Gets or sets the underline type applied to the given characters.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.UnderlineType"/> enumeration value. Null for a mixture of underline types.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetFontStyle">
      <summary>
        <para>Lists the cell font styles.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetFontStyle.Bold">
      <summary>
        <para>Specifies that the text is bold.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetFontStyle.BoldItalic">
      <summary>
        <para>Specifies that the text is bold and italic.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetFontStyle.Italic">
      <summary>
        <para>Specifies that the text is italic.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetFontStyle.Regular">
      <summary>
        <para>Specifies that the text is regular.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetHistory">
      <summary>
        <para>A history of operations performed in a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetHistory.Clear">
      <summary>
        <para>Clears the history of operations performed in a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetHistory.Count">
      <summary>
        <para>Returns the number of operations performed in a workbook.</para>
      </summary>
      <value>A zero-based positive integer that represents the number of performed operations.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetHistory.IsEnabled">
      <summary>
        <para>Indicates whether or not to track the workbook activity.</para>
      </summary>
      <value>true, if the history of operations is tracked; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetHistory.Redo">
      <summary>
        <para>Executes a redo of the last operation performed in a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetHistory.Undo">
      <summary>
        <para>Executes an undo of the last performed operation in a workbook.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment">
      <summary>
        <para>Specifies horizontal alignment of cell content.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment.Center">
      <summary>
        <para>The cell content is centered horizontally.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment.CenterContinuous">
      <summary>
        <para>The cell content is centered horizontally across multiple cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment.Distributed">
      <summary>
        <para>The text is wrapped to fit the cell width and each line of text is horizontally distributed across the entire cell. This alignment type allows you to apply an indent to both the left and right sides of the cell.</para>
        <para>The Spreadsheet controls and Spreadsheet Document API do not support the Distributed option. However, you can set this alignment type in code, save your workbook, and display or print it in Microsoft® Excel®.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment.Fill">
      <summary>
        <para>Repeats the cell content across the whole width of the cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment.General">
      <summary>
        <para>The cell content is horizontally aligned according to the data type (text is aligned to the left; numbers, date and time values are aligned to the right; boolean and error values are centered).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment.Justify">
      <summary>
        <para>The text is wrapped to fit the cell width and each line of text (except the last line) is horizontally justified to the right and left of the cell.</para>
        <para>The Spreadsheet controls and Spreadsheet Document API do not support the Justify option. However, you can set this alignment type in code, save your workbook, and display or print it in Microsoft® Excel®.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment.Left">
      <summary>
        <para>The cell content is horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetHorizontalAlignment.Right">
      <summary>
        <para>The cell content is horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetImageSource">
      <summary>
        <para>An object that provides an image for the spreadsheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetImageSource.FromFile(System.String)">
      <summary>
        <para>Creates an image source object from the specified file.</para>
      </summary>
      <param name="fileName">A string that contains the path to a file from which to create the image.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object representing the image in the spreadsheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetImageSource.FromImage(System.Drawing.Image)">
      <summary>
        <para>Creates an image source object from the specified image.</para>
      </summary>
      <param name="image">An <see cref="T:System.Drawing.Image"/> object.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object representing the image in the spreadsheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetImageSource.FromStream(System.IO.Stream)">
      <summary>
        <para>Creates an image source object from the specified data stream.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> containing image data.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object representing the image in the spreadsheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetImageSource.FromUri(System.String,System.ComponentModel.Design.IServiceContainer)">
      <summary>
        <para>Creates an image source object from the specified URI string.</para>
      </summary>
      <param name="uri">A string of characters identifying the resource in the Internet that can be interpreted as an image.</param>
      <param name="serviceContainer">An object providing the <see cref="T:DevExpress.Office.Services.IUriStreamService"/> interface which allows obtaining a data stream for a specified URI.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetImageSource"/> object representing the image in the spreadsheet.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetInvalidFormatExceptionEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Spreadsheet.ISpreadsheetComponent.InvalidFormatException"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetInvalidFormatExceptionEventArgs.#ctor(System.Exception,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SpreadsheetInvalidFormatExceptionEventArgs"/> class with the specified exception and source URI value.</para>
      </summary>
      <param name="e">A <see cref="T:System.Exception"/> object specifying an exception that caused the event.</param>
      <param name="sourceUri">A <see cref="T:System.String"/> value specifying the URI of the document that caused the error.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetInvalidFormatExceptionEventArgs.Exception">
      <summary>
        <para>Gets the exception which triggers the InvalidFormatException event.</para>
      </summary>
      <value>An <see cref="T:System.Exception"/> object representing an exception which caused the event.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetInvalidFormatExceptionEventArgs.SourceUri">
      <summary>
        <para>Gets the source location for the document which triggers the InvalidFormatException event.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value specifying the source location (URI) for the document that caused the error.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetMailMergeOptions">
      <summary>
        <para>Contains the mail merge options.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetMailMergeOptions.UseTemplateSheetNames">
      <summary>
        <para>Gets or sets a value indicating whether worksheet names in a merged document(s) should be generated based on the template worksheet’s name.</para>
      </summary>
      <value>true, to use the template worksheet’s name to name worksheets in the resulting document(s); otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetValidateCustomSqlQueryEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ValidateCustomSqlQuery"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.SpreadsheetValidateCustomSqlQueryEventArgs.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.SpreadsheetValidateCustomSqlQueryEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that is the custom SQL query being validated.</param>
      <param name="valid">A <see cref="T:System.Boolean"/> value that specifies whether or not the specified SQL query is valid.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetValidateCustomSqlQueryEventArgs.ExceptionMessage">
      <summary>
        <para>Gets or sets the exception message displayed if validation of the custom SQL query fails.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text of the exception message displayed if validation of the custom SQL query fails.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetValidateCustomSqlQueryEventArgs.Sql">
      <summary>
        <para>Gets the text of a custom SQL query being validated.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that is the text of a custom SQL query being validated.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.SpreadsheetValidateCustomSqlQueryEventArgs.Valid">
      <summary>
        <para>Gets or sets whether or not the current SQL query is valid.</para>
      </summary>
      <value>true, if the current SQL query is valid; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetValidateCustomSqlQueryEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.ValidateCustomSqlQuery"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Spreadsheet.SpreadsheetValidateCustomSqlQueryEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.SpreadsheetVerticalAlignment">
      <summary>
        <para>Lists the values used to specify vertical alignment of data within a cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetVerticalAlignment.Bottom">
      <summary>
        <para>The cell content is vertically aligned at the bottom.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetVerticalAlignment.Center">
      <summary>
        <para>The cell content is centered vertically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetVerticalAlignment.Distributed">
      <summary>
        <para>The text is vertically distributed across the cell height.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetVerticalAlignment.Justify">
      <summary>
        <para>The cell content is vertically justified.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.SpreadsheetVerticalAlignment.Top">
      <summary>
        <para>The cell content is vertically aligned at the top.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.Style">
      <summary>
        <para>A named cell style.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Style.CopyFrom(DevExpress.Spreadsheet.BuiltInStyleId)">
      <summary>
        <para>Duplicates the format settings of the specified built-in style into the current <see cref="T:DevExpress.Spreadsheet.Style"/> instance.</para>
      </summary>
      <param name="id">A cell style from which format settings should be copied.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Style.IsBuiltIn">
      <summary>
        <para>Indicates whether the current style is the built-in style.</para>
      </summary>
      <value>True, for the built-in style; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Style.Name">
      <summary>
        <para>Gets the name of the cell style.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the style name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Style.Reset">
      <summary>
        <para>Resets the built-in style to its original settings, and resets the Normal style to <see cref="P:DevExpress.Spreadsheet.StyleCollection.DefaultStyle"/>.</para>
      </summary>
      <returns>True, if the style is built-in or Normal and the style has been reset; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Spreadsheet.StyleCollection">
      <summary>
        <para>A collection of cell styles in the workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.StyleCollection.Add(System.String,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a new style based on format settings of the specified cell range.</para>
      </summary>
      <param name="name">A style name.</param>
      <param name="range">A cell range whose top left cell contains format settings for a new style.</param>
      <returns>The newly created cell style.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.StyleCollection.Add(System.String)">
      <summary>
        <para>Creates a new style with the specified name and appends it to the style collection.</para>
      </summary>
      <param name="name">A string that specifies the style name.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Style"/> object that specifies the new style.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.StyleCollection.Contains(DevExpress.Spreadsheet.BuiltInStyleId)">
      <summary>
        <para>Indicates whether the collection contains the specified built-in style.</para>
      </summary>
      <param name="id">Specifies a built-in style to locate in the collection.</param>
      <returns>true, if the style is contained in the collection; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.StyleCollection.Contains(System.String)">
      <summary>
        <para>Indicates whether the collection contains the style under the specified name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name of the style to locate in the collection.</param>
      <returns>true, if the collection contains the style under the specified name; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleCollection.DefaultStyle">
      <summary>
        <para>Returns the Normal style that is applied to cells by default.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Style"/> object specifying the Normal style.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.StyleCollection.Hide(DevExpress.Spreadsheet.Style)">
      <summary>
        <para>Marks the specified style as deleted, so it can no longer be applied to cells.</para>
      </summary>
      <param name="style">A <see cref="T:DevExpress.Spreadsheet.Style"/> object that is a cell style to be hidden in the collection.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleCollection.Item(DevExpress.Spreadsheet.BuiltInStyleId)">
      <summary>
        <para>Provides access to individual built-in styles in the collection by their identifiers.</para>
      </summary>
      <param name="id">An identifier of the built-in style to return.</param>
      <value>The built-in style with the specified identifier.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleCollection.Item(System.String)">
      <summary>
        <para>Provides access to individual cell styles in the collection by their names.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value specifying the name of the style to be found.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Style"/> object representing the style with the specified name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.StyleCollection.Remove(System.String)">
      <summary>
        <para>Marks the style with the specified name as deleted, so it can no longer be applied to cells.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name of the style (<see cref="P:DevExpress.Spreadsheet.Style.Name"/>) to be hidden in the collection.</param>
      <returns>true if the style is successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.StyleCollection.Unhide(DevExpress.Spreadsheet.Style)">
      <summary>
        <para>Restores the hidden style at its previous position in the collection.</para>
      </summary>
      <param name="style">A <see cref="T:DevExpress.Spreadsheet.Style"/> object that is a cell style to be restored in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.StyleFlags">
      <summary>
        <para>A style flag that controls formatting options to be applied.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleFlags.Alignment">
      <summary>
        <para>Gets or sets a value that indicates whether or not the alignment options should be applied.</para>
      </summary>
      <value>true, to apply alignment attributes; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleFlags.All">
      <summary>
        <para>Gets or sets a value that indicates whether or not all format characteristics (such as alignment, borders, font, etc.) should be applied.</para>
      </summary>
      <value>true, to specify all format characteristics; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleFlags.Borders">
      <summary>
        <para>Gets or sets a value that indicates whether or not cell borders should be specified.</para>
      </summary>
      <value>true, to specify borders; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleFlags.Fill">
      <summary>
        <para>Gets or sets a value that indicates whether or not the background color should be applied.</para>
      </summary>
      <value>true, to apply the background color; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleFlags.Font">
      <summary>
        <para>Gets or sets a value that indicates whether or not font attributes should be specified.</para>
      </summary>
      <value>true, to specify font characteristics; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleFlags.Number">
      <summary>
        <para>Gets or sets a value that indicates whether or not the number format should be specified.</para>
      </summary>
      <value>true, to specify the number format; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.StyleFlags.Protection">
      <summary>
        <para>Gets or sets a value that indicates whether or not the protection option should be applied.</para>
      </summary>
      <value>true, to apply the protection option; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Table">
      <summary>
        <para>A table in a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.AutoFilter">
      <summary>
        <para>Provides access to an object that contains options to filter data in a table.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableAutoFilter"/> object that implements the filtering functionality for a table.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.Columns">
      <summary>
        <para>Provides access to the collection of table columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableColumnCollection"/> object specifying the table’s collection of columns.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.Comment">
      <summary>
        <para>Gets or sets a string that provides additional information about the table.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies a comment associated with the table.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Table.ConvertToRange">
      <summary>
        <para>Converts the table to a regular range of cells without losing data and formatting.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.DataRange">
      <summary>
        <para>Returns the cell range that contains table data.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Table.Delete">
      <summary>
        <para>Removes the table from the worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Table.GetDataSource">
      <summary>
        <para>Creates the data source from the worksheet table using the specified options.</para>
      </summary>
      <returns>An object that is the created data source.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Table.GetDataSource(DevExpress.Spreadsheet.RangeDataSourceOptions)">
      <summary>
        <para>Creates the data source from the worksheet table using the specified options.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Spreadsheet.RangeDataSourceOptions"/> object containing the data source options.</param>
      <returns>An object that is the created data source.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.HeaderRowRange">
      <summary>
        <para>Returns the cell range that contains the header row of the table.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.Name">
      <summary>
        <para>Gets or sets the table name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of the table.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.Range">
      <summary>
        <para>Specifies the cell range that contains the entire table.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range that contains the entire table.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.Rows">
      <summary>
        <para>Provides access to the collection of table rows.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.TableRowCollection object specifying the rows collection.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.ShowHeaders">
      <summary>
        <para>Gets or sets whether the table header row is visible.</para>
      </summary>
      <value>true, to display the header row at the top of the table; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.ShowTableStyleColumnStripes">
      <summary>
        <para>Indicates whether alternate shading should be applied to the table columns.</para>
      </summary>
      <value>true, to apply striped column formatting to the table; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.ShowTableStyleFirstColumn">
      <summary>
        <para>Indicates whether special formatting should be applied to the first column of the table.</para>
      </summary>
      <value>true, to apply special formatting to the first column of the table; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.ShowTableStyleLastColumn">
      <summary>
        <para>Indicates whether special formatting should be applied to the last column of the table.</para>
      </summary>
      <value>true, to apply special formatting to the last column of the table; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.ShowTableStyleRowStripes">
      <summary>
        <para>Indicates whether alternate shading should be applied to the table rows.</para>
      </summary>
      <value>true, to apply striped row formatting to the table; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.ShowTotals">
      <summary>
        <para>Specifies whether the table total row is visible.</para>
      </summary>
      <value>true, to display the total row at the end of the table; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.Style">
      <summary>
        <para>Gets or sets the style applied to the table.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyle"/> object that specifies the table style.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Table.TotalRowRange">
      <summary>
        <para>Returns the cell range that contains the total row of the table.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.TableAutoFilter">
      <summary>
        <para>An object implementing the filtering functionality for the specified table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableAutoFilter.Apply">
      <summary>
        <para>Enables the filtering functionality for the specified table.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.TableCollection">
      <summary>
        <para>A collection of tables contained in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.Add(DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Creates a table including the specified range of cells and adds it to the collection.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range to be included in the table.</param>
      <param name="hasHeaders">A <see cref="T:System.Boolean"/> value that indicates whether the top row of the specified cell range will be the table header row.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Table"/> object that is the newly created table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.Add(DevExpress.Spreadsheet.CellRange,System.String,System.Boolean)">
      <summary>
        <para>Creates a table including the specified range of cells and adds it to the collection.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell range to be included in the table.</param>
      <param name="name">A <see cref="T:System.String"/> value that specifies the table name. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.Table.Name"/> property.</param>
      <param name="hasHeaders">A <see cref="T:System.Boolean"/> value that indicates whether the top row of the specified cell range will be the table header row.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Table"/> object that is the newly created table with the specified name.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.Add(System.Object,DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ExternalDataSourceOptions)">
      <summary>
        <para>Creates a table from the specified range, adds it to the collection and binds it to the data source.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved in the worksheet.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> used to create a table.</param>
      <param name="options">An <see cref="T:DevExpress.Spreadsheet.ExternalDataSourceOptions"/> object that contains options used to establish binding.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Table"/> object that is the newly created table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.Add(System.Object,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a table from the specified range, adds it to the collection and binds it to the data source.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved in the worksheet.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> used to create a table.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Table"/> object that is the newly created table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.Add(System.Object,System.Int32,System.Int32,DevExpress.Spreadsheet.ExternalDataSourceOptions)">
      <summary>
        <para>Creates a table starting from the specified row and column, adds it to the collection and binds it to the data source using the specified options.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved in the worksheet.</param>
      <param name="rowIndex">An integer that is the row index of the top left cell in the worksheet table.</param>
      <param name="columnIndex">An integer that is the column index of the top left cell in the worksheet table.</param>
      <param name="options">An <see cref="T:DevExpress.Spreadsheet.ExternalDataSourceOptions"/> object that contains options used to establish binding.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Table"/> object that is the newly created table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.Add(System.Object,System.Int32,System.Int32)">
      <summary>
        <para>Creates a table starting from the specified row and column, adds it to the collection and binds it to the data source.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved in the worksheet.</param>
      <param name="rowIndex">An integer that is the row index of the top left cell in the worksheet table.</param>
      <param name="columnIndex">An integer that is the column index of the top left cell in the worksheet table.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Table"/> object that is the newly created table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.Clear">
      <summary>
        <para>Removes all tables from the worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.Contains(DevExpress.Spreadsheet.Table)">
      <summary>
        <para>Indicates whether the collection contains the specified table.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Spreadsheet.Table"/> object to locate in the collection.</param>
      <returns>True, if the collection contains the table; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.GetTables(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Gets tables contained in the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range that contains tables to be returned.</param>
      <returns>A collection of tables within the specified range of cells.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.IndexOf(DevExpress.Spreadsheet.Table)">
      <summary>
        <para>Returns the index of the specified table in the collection.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Spreadsheet.Table"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the table’s position within the collection. &#0045;1 if the table doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.Remove(DevExpress.Spreadsheet.Table)">
      <summary>
        <para>Removes the specified table from the collection.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Spreadsheet.Table"/> object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the table at the specified index location from the current collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the table to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.TableColumn">
      <summary>
        <para>A single column in a table.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.ArrayFormula">
      <summary>
        <para>Gets or sets the array formula applied to all cells in the table column.</para>
      </summary>
      <value>A string that is the array formula contained in the cells of the table column.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.DataRange">
      <summary>
        <para>Returns the cell range that contains column data (without the column header and total cell).</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableColumn.Delete">
      <summary>
        <para>Deletes a column from a table.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.Formula">
      <summary>
        <para>Gets or sets the formula applied to all cells in the table column.</para>
      </summary>
      <value>A string that is the formula contained in the cells of the table column.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.Index">
      <summary>
        <para>Get the zero-based index of the column within the table’s <see cref="T:DevExpress.Spreadsheet.TableColumnCollection"/>.</para>
      </summary>
      <value>An integer specifying the position of the column in the table.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.Name">
      <summary>
        <para>Gets or sets the name of the table column.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the table column name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.Range">
      <summary>
        <para>Returns the cell range that contains the entire table column.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.Total">
      <summary>
        <para>Returns the cell that contains the column total.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.TotalRowArrayFormula">
      <summary>
        <para>Specifies an array formula to calculate the column total.</para>
      </summary>
      <value>A string that is the array formula.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.TotalRowFormula">
      <summary>
        <para>Specifies a formula to calculate the column total.</para>
      </summary>
      <value>A string that is the formula contained in the total cell of the table column.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.TotalRowFunction">
      <summary>
        <para>Specifies a predefined function to calculate the column total.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Spreadsheet.TotalRowFunction"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableColumn.TotalRowLabel">
      <summary>
        <para>Specifies text displayed in the total cell of the table column.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the text contained in the total cell of the table column.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.TableColumnCollection">
      <summary>
        <para>A collection of columns in a table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableColumnCollection.Add">
      <summary>
        <para>Inserts a new column to the end of the table and returns the newly created object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.TableColumn"/> object that specifies the newly created column in the table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableColumnCollection.Add(System.Int32)">
      <summary>
        <para>Inserts a new column into the table at the specified position and returns the newly created object.</para>
      </summary>
      <param name="position">An integer specifying the zero-based index of the position where a new column shall be inserted.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.TableColumn"/> object that specifies the newly created column in the table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableColumnCollection.Contains(DevExpress.Spreadsheet.TableColumn)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="column">An <see cref="T:DevExpress.Spreadsheet.TableColumn"/> object to search for.</param>
      <returns>true if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableColumnCollection.IndexOf(DevExpress.Spreadsheet.TableColumn)">
      <summary>
        <para>Returns the index of the specified column in the collection.</para>
      </summary>
      <param name="column">An <see cref="T:DevExpress.Spreadsheet.TableColumn"/> object to locate in the collection.</param>
      <returns>A zero-based integer which specifies the column position within the collection. -1 if the column doesn’t belong to the collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableColumnCollection.Remove(DevExpress.Spreadsheet.TableColumn)">
      <summary>
        <para>Removes the specified column from the collection.</para>
      </summary>
      <param name="column">A  object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableColumnCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the column at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the column to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.TableStyle">
      <summary>
        <para>A named table or pivot table style.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableStyle.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.Spreadsheet.TableStyle"></see> object by preventing visual updates until the EndUpdate method is called.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyle.BuiltIn">
      <summary>
        <para>Indicates whether the table or PivotTable style is built-in.</para>
      </summary>
      <value>true if the table or PivotTable style is built-in; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableStyle.Duplicate">
      <summary>
        <para>Creates a copy of this table or PivotTable style.</para>
      </summary>
      <returns>A copy of the current style.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableStyle.Duplicate(System.String)">
      <summary>
        <para>Creates a copy of this table or PivotTable style and specifies the new style name.</para>
      </summary>
      <param name="name">A unique name of the new style. This value is assigned to the <see cref="P:DevExpress.Spreadsheet.TableStyle.Name"/> property.</param>
      <returns>A copy of the current style.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableStyle.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Spreadsheet.TableStyle"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyle.IsPivotStyle">
      <summary>
        <para>Gets or sets a value indicating whether the current style is used to format a pivot table.</para>
      </summary>
      <value>true, if the style is applied to a pivot table; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyle.IsTableStyle">
      <summary>
        <para>Gets or sets a value indicating whether the current style is used to format a table.</para>
      </summary>
      <value>true, if the style is applied to a table; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyle.Name">
      <summary>
        <para>Gets or sets the name of the table or pivot table style.</para>
      </summary>
      <value>A string specifying the style name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyle.TableStyleElements">
      <summary>
        <para>Provides access to table style elements.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyleElements"/> object that contains elements of the table style.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.TableStyleCollection">
      <summary>
        <para>A collection of table and PivotTable styles in a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableStyleCollection.Add(System.String)">
      <summary>
        <para>Creates a new table or PivotTable style with the specified name and appends it to the style collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the style name. Initializes the <see cref="P:DevExpress.Spreadsheet.TableStyle.Name"/> property of the created style.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.TableStyle"/> object that specifies the newly created style.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableStyleCollection.Contains(System.String)">
      <summary>
        <para>Indicates whether the collection contains the table or PivotTable style with the specified name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name of the style to locate in the collection.</param>
      <returns>true, if the collection contains the table or pivot table style under the specified name; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleCollection.Count">
      <summary>
        <para>Gets the number of table styles in the collection.</para>
      </summary>
      <value>An integer specifying the number of table styles in the collection.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleCollection.DefaultPivotStyle">
      <summary>
        <para>Gets or sets the default pivot table style.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyle"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleCollection.DefaultStyle">
      <summary>
        <para>Specifies the default table style.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyle"/> object.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleCollection.Item(DevExpress.Spreadsheet.BuiltInPivotStyleId)">
      <summary>
        <para>Returns the built-in PivotTable style by its identifier.</para>
      </summary>
      <param name="id">A DevExpress.Spreadsheet.BuiltInPivotStyleId enumerator member.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyle"/> object specifying the pivot table style with the specified identifier.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleCollection.Item(DevExpress.Spreadsheet.BuiltInTableStyleId)">
      <summary>
        <para>Returns the built-in table style by its identifier.</para>
      </summary>
      <param name="id">A <see cref="T:DevExpress.Spreadsheet.BuiltInTableStyleId"/> enumerator member.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyle"/> object specifying the table style with the specified identifier.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleCollection.Item(System.String)">
      <summary>
        <para>Returns the table style or PivotTable style by its name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value specifying the name of the style to be found.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyle"/> object specifying the table or pivot table style with the specified name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableStyleCollection.Remove(System.String)">
      <summary>
        <para>Removes the table or PivotTable style with the specified name from the collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name of the table style (<see cref="P:DevExpress.Spreadsheet.TableStyle.Name"/>) to be removed from the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.TableStyleElement">
      <summary>
        <para>A table style element.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleElement.Borders">
      <summary>
        <para>Specifies borders for the table element cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Borders"/> object that provides access to the borders of a cell or cell range contained in the table element.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.TableStyleElement.Clear">
      <summary>
        <para>Clears formatting for the table style element.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleElement.Fill">
      <summary>
        <para>Specifies fill options for the table element cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Fill"/> object providing properties to format the cell background.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleElement.Font">
      <summary>
        <para>Specifies font attributes for the table element cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SpreadsheetFont"/> object providing properties to change cell font attributes.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleElement.StripeSize">
      <summary>
        <para>Specifies the number of table rows or columns displayed as odd and even stripes in the table.</para>
      </summary>
      <value>An integer that specifies the number of table rows or columns displayed in row or column stripes in the table.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.TableStyleElements">
      <summary>
        <para>A collection of table style elements.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleElements.Count">
      <summary>
        <para>Gets the number of table style elements.</para>
      </summary>
      <value>An integer value which specifies the number of elements within the collection.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TableStyleElements.Item(DevExpress.Spreadsheet.TableStyleElementType)">
      <summary>
        <para>Gets a table style element by its type.</para>
      </summary>
      <param name="index">A <see cref="T:DevExpress.Spreadsheet.TableStyleElementType"/> enumeration member.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableStyleElement"/> object that is a table style element of the specified type.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.TableStyleElementType">
      <summary>
        <para>Lists table and pivot table style elements.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.BlankRow">
      <summary>
        <para>The PivotTable’s blank row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.FirstColumn">
      <summary>
        <para>The table’s first column formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.FirstColumnStripe">
      <summary>
        <para>The table’s first column stripe formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.FirstColumnSubheading">
      <summary>
        <para>The PivotTable’s first column subheading formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.FirstHeaderCell">
      <summary>
        <para>The first cell of the table’s header row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.FirstRowStripe">
      <summary>
        <para>The table’s first row stripe formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.FirstRowSubheading">
      <summary>
        <para>The PivotTable’s first row subheading formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.FirstSubtotalColumn">
      <summary>
        <para>The PivotTable’s first subtotal column formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.FirstSubtotalRow">
      <summary>
        <para>The PivotTable’s first subtotal row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.FirstTotalCell">
      <summary>
        <para>The first cell of the table’s total row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.HeaderRow">
      <summary>
        <para>The table’s header row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.LastColumn">
      <summary>
        <para>The table’s last column formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.LastHeaderCell">
      <summary>
        <para>The last cell of the table’s header row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.LastTotalCell">
      <summary>
        <para>The last cell of the table’s total row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.PageFieldLabels">
      <summary>
        <para>The PivotTable’s page field labels formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.PageFieldValues">
      <summary>
        <para>The PivotTable’s page field values formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.SecondColumnStripe">
      <summary>
        <para>The table’s second column stripe formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.SecondColumnSubheading">
      <summary>
        <para>The PivotTable’s second column subheading formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.SecondRowStripe">
      <summary>
        <para>The table’s second row stripe formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.SecondRowSubheading">
      <summary>
        <para>The PivotTable’s second row subheading formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.SecondSubtotalColumn">
      <summary>
        <para>The PivotTable’s second subtotal column formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.SecondSubtotalRow">
      <summary>
        <para>The PivotTable’s second subtotal row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.ThirdColumnSubheading">
      <summary>
        <para>The PivotTable’s third column subheading formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.ThirdRowSubheading">
      <summary>
        <para>The PivotTable’s third row subheading formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.ThirdSubtotalColumn">
      <summary>
        <para>The PivotTable’s third subtotal column formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.ThirdSubtotalRow">
      <summary>
        <para>The PivotTable’s third subtotal row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.TotalRow">
      <summary>
        <para>The table’s total row formatting.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TableStyleElementType.WholeTable">
      <summary>
        <para>The whole table formatting.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.TextConditionalFormatting">
      <summary>
        <para>Represents a conditional formatting rule that formats cells that contain or do not contain the given text.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.TextConditionalFormatting.Condition">
      <summary>
        <para>Gets or sets the type of the conditional format operator used in the conditional formatting rule.</para>
      </summary>
      <value>One of <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingTextCondition"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.TextConditionalFormatting.Text">
      <summary>
        <para>Gets or sets a text string used as the formatting criteria in the conditional formatting rule.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that represents text specified in the conditional formatting rule.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ThemeColorScheme">
      <summary>
        <para>Specifies document theme colors.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.ThemeColorScheme.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Spreadsheet.ThemeColorScheme"/> class instance.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Accent1">
      <summary>
        <para>Gets or sets the Accent 1 theme color.</para>
      </summary>
      <value>The Accent 1 color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Accent2">
      <summary>
        <para>Gets or sets the Accent 2 theme color.</para>
      </summary>
      <value>The Accent 2 color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Accent3">
      <summary>
        <para>Gets or sets the Accent 3 theme color.</para>
      </summary>
      <value>The Accent 3 color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Accent4">
      <summary>
        <para>Gets or sets the Accent 4 theme color.</para>
      </summary>
      <value>The Accent 4 color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Accent5">
      <summary>
        <para>Gets or sets the Accent 5 theme color.</para>
      </summary>
      <value>The Accent 5 color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Accent6">
      <summary>
        <para>Gets or sets the Accent 6 theme color.</para>
      </summary>
      <value>The Accent 6 color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Dark1">
      <summary>
        <para>Gets or sets the Dark 1 text/background color.</para>
      </summary>
      <value>The Dark 1 theme color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Dark2">
      <summary>
        <para>Gets or sets the Dark 2 text/background color.</para>
      </summary>
      <value>The Dark 2 theme color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.FollowedHyperlink">
      <summary>
        <para>Gets or sets the theme color for a clicked hyperlink.</para>
      </summary>
      <value>The clicked hyperlink color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Hyperlink">
      <summary>
        <para>Gets or sets the theme color for a hyperlink.</para>
      </summary>
      <value>The hyperlink color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Light1">
      <summary>
        <para>Gets or sets the Light 1 text/background color.</para>
      </summary>
      <value>The Light 1 theme color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Light2">
      <summary>
        <para>Gets or sets the Light 2 text/background color.</para>
      </summary>
      <value>The Light 2 theme color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ThemeColorScheme.Name">
      <summary>
        <para>Gets or sets the name of the theme color scheme.</para>
      </summary>
      <value>The color scheme name.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.ThemePreset">
      <summary>
        <para>Lists predefined document themes for a workbook.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ThemePreset.Office2010">
      <summary>
        <para>The Office 2007 - 2010 document theme.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.ThemePreset.Office2013">
      <summary>
        <para>The Office 2013 document theme.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.TimePeriodConditionalFormatting">
      <summary>
        <para>Represents a &quot;date occurring…&quot; conditional formatting rule.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.TimePeriodConditionalFormatting.Condition">
      <summary>
        <para>Gets or sets the time period used as a formatting criteria in the &quot;date occurring…&quot; conditional formatting rule.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingTimePeriod"/> enumeration values.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.Top10Type">
      <summary>
        <para>Lists criteria types used in the top ten filter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Top10Type.Bottom10Items">
      <summary>
        <para>Shows values that fall in the bottom N bracket, where N is defined by the <see cref="P:DevExpress.Spreadsheet.AutoFilterColumn.Top10Value"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Top10Type.Bottom10Percent">
      <summary>
        <para>Shows values that fall in the bottom N percent of the specified column values, where N is defined by the <see cref="P:DevExpress.Spreadsheet.AutoFilterColumn.Top10Value"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Top10Type.None">
      <summary>
        <para>The filter criterion is not specified.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Top10Type.Top10Items">
      <summary>
        <para>Shows values that fall in the top N bracket, where N is defined by the <see cref="P:DevExpress.Spreadsheet.AutoFilterColumn.Top10Value"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.Top10Type.Top10Percent">
      <summary>
        <para>Shows values that fall in the top N percent of the specified column values, where N is defined by the <see cref="P:DevExpress.Spreadsheet.AutoFilterColumn.Top10Value"/> property.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.TotalRowFunction">
      <summary>
        <para>Lists functions to calculate the totals of table columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.Average">
      <summary>
        <para>Returns the average (arithmetic mean) of the numbers contained in the table column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.Count">
      <summary>
        <para>Returns the number of cells with non-empty values contained in the table column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.CountNums">
      <summary>
        <para>Returns the number of cells with numeric values contained in the table column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.Custom">
      <summary>
        <para>Indicates that a custom formula (<see cref="P:DevExpress.Spreadsheet.TableColumn.TotalRowFormula"/> or <see cref="P:DevExpress.Spreadsheet.TableColumn.TotalRowArrayFormula"/>) is used to calculate the total for the table column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.Max">
      <summary>
        <para>Returns the largest number contained in the table column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.Min">
      <summary>
        <para>Returns the smallest number contained in the table column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.None">
      <summary>
        <para>Indicates that neither a predefined function (<see cref="P:DevExpress.Spreadsheet.TableColumn.TotalRowFunction"/>) nor a custom formula (<see cref="P:DevExpress.Spreadsheet.TableColumn.TotalRowFormula"/> or <see cref="P:DevExpress.Spreadsheet.TableColumn.TotalRowArrayFormula"/>) is used to calculate the total for the table column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.StdDev">
      <summary>
        <para>Calculates the standard deviation based on the sample contained in the table column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.Sum">
      <summary>
        <para>Returns the sum of the numbers contained in the table column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.TotalRowFunction.Var">
      <summary>
        <para>Calculates the variance of the sample contained in the table column.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.UnderlineType">
      <summary>
        <para>Lists underline styles.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.UnderlineType.Double">
      <summary>
        <para>Specifies a double underline.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.UnderlineType.DoubleAccounting">
      <summary>
        <para>Specifies a double accounting underline (an underline that fills the entire cell width).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.UnderlineType.None">
      <summary>
        <para>Indicates that the text is not underlined.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.UnderlineType.Single">
      <summary>
        <para>Specifies a single underline.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.UnderlineType.SingleAccounting">
      <summary>
        <para>Specifies a single accounting underline (an underline that fills the entire cell width).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.UpdateLinksMode">
      <summary>
        <para>Specifies how to update external links to other workbooks when a document is opened.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.UpdateLinksMode.Always">
      <summary>
        <para>Indicates that external links are always updated when a document is opened. Microsoft® Excel® does not display a security warning.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.UpdateLinksMode.DisplayWarning">
      <summary>
        <para>Microsoft® Excel® displays a security warning that allows users to specify whether to update external links.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.UpdateLinksMode.Never">
      <summary>
        <para>Indicates that external links are never updated when a document is opened. Microsoft® Excel® does not display a security warning.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.ValueObject">
      <summary>
        <para>An object that can be used to specify a value associated with a custom cell in-place editor or to create a criterion for data validation.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.BooleanValue">
      <summary>
        <para>Converts the object’s value to Boolean and returns the result.</para>
      </summary>
      <value>A <see cref="T:System.Boolean"/> value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.CreateListSource(DevExpress.Spreadsheet.CellValue[])">
      <summary>
        <para>Creates the ValueObject instance from the specified array of values.</para>
      </summary>
      <param name="values">An array of <see cref="T:DevExpress.Spreadsheet.CellValue"/> objects.</param>
      <returns>A ValueObject instance.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.Empty">
      <summary>
        <para>Returns an empty object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object specifying an empty value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.Equals(System.Object)">
      <summary>
        <para>Determines whether two objects are equal.</para>
      </summary>
      <param name="obj">The <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object to compare with the current object.</param>
      <returns>true, if the specified object is equal to the current <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.ErrorValue">
      <summary>
        <para>Converts the object’s value to cell error type and returns the result.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.ErrorValueInfo"/> object that contains information on a cell error.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.Formula">
      <summary>
        <para>Converts the object’s value to a worksheet formula and returns the result.</para>
      </summary>
      <value>A string that is the worksheet formula. It starts with an equal sign (=). If conversion fails, returns an empty string.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.FormulaInvariant">
      <summary>
        <para>Converts the object’s value to a worksheet formula in the invariant culture (English), and returns the result.</para>
      </summary>
      <value>A string that is the worksheet formula in the invariant culture (English). It starts with an equal sign (=). If conversion fails, returns an empty string.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.FromDateTime(System.DateTime,System.Boolean)">
      <summary>
        <para>Creates the ValueObject instance from the <see cref="T:System.DateTime"/> object using the specified date system.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> object.</param>
      <param name="use1904DateSystem">true, if the 1904 date system is used; otherwise, false.</param>
      <returns>A ValueObject instance.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.FromFormula(System.String,System.Boolean)">
      <summary>
        <para>Creates the ValueObject instance using the formula string.</para>
      </summary>
      <param name="formula">A string that is a valid worksheet formula. For use in data validation, the formula must begin with an equal sign and it must evaluate to either true or false.</param>
      <param name="invariant">true, if the formula is in the invariant (English) culture; otherwise, false.</param>
      <returns>A ValueObject instance.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.FromRange(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates the ValueObject instance that originates from the worksheet range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the worksheet Range.</param>
      <returns>A ValueObject instance.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.GetDateTimeValue(System.Boolean)">
      <summary>
        <para>Converts the object’s value to DateTime and returns the result.</para>
      </summary>
      <param name="use1904DateSystem">true, if the 1904 date system is used; otherwise, false.</param>
      <returns>A <see cref="T:System.DateTime"/> object.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.GetHashCode">
      <summary>
        <para>Returns a number that identifies the object instance.</para>
      </summary>
      <returns>An integer that identifies the parameter instance.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.IsBoolean">
      <summary>
        <para>Gets whether the object originates from the value of the boolean type.</para>
      </summary>
      <value>true, if the object has a boolean value; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.IsEmpty">
      <summary>
        <para>Gets whether the object has an empty value.</para>
      </summary>
      <value>true, if the object has an empty value; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.IsError">
      <summary>
        <para>Gets whether the object contains a Cell Error value.</para>
      </summary>
      <value>true, if the parameter has a cell error value; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.IsFormula">
      <summary>
        <para>Gets whether the object contains a cell formula value.</para>
      </summary>
      <value>true, if the object contains a cell formula; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.IsNullOrEmpty(DevExpress.Spreadsheet.ValueObject)">
      <summary>
        <para>Determines whether the specified object is null or has an empty value.</para>
      </summary>
      <param name="valueObject">A ValueObject instance to check.</param>
      <returns>true, if the object is null or has an empty value; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.IsNumeric">
      <summary>
        <para>Gets whether the object originates from a number.</para>
      </summary>
      <value>true, if the object has a numerical value; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.IsRange">
      <summary>
        <para>Gets whether the object originates from a worksheet Range.</para>
      </summary>
      <value>true, if the object has a <see cref="T:DevExpress.Spreadsheet.CellRange"/> value; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.IsText">
      <summary>
        <para>Gets whether the object originates from a text string.</para>
      </summary>
      <value>true, if the object has a text value; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.NumericValue">
      <summary>
        <para>Converts the object’s value to numeric and returns the result.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.op_Implicit(DevExpress.Spreadsheet.CellValue)~DevExpress.Spreadsheet.ValueObject">
      <summary>
        <para>Implicitly converts a cell value to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object to be converted to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.op_Implicit(System.Boolean)~DevExpress.Spreadsheet.ValueObject">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Boolean"/> value to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance.</para>
      </summary>
      <param name="value">A <see cref="T:System.Boolean"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.op_Implicit(System.Char)~DevExpress.Spreadsheet.ValueObject">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Char"/> value to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance.</para>
      </summary>
      <param name="value">A <see cref="T:System.Char"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.op_Implicit(System.DateTime)~DevExpress.Spreadsheet.ValueObject">
      <summary>
        <para>Implicitly converts a <see cref="T:System.DateTime"/> object to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance.</para>
      </summary>
      <param name="value">A <see cref="T:System.DateTime"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.op_Implicit(System.Double)~DevExpress.Spreadsheet.ValueObject">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Double"/> value to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance.</para>
      </summary>
      <param name="value">A <see cref="T:System.Double"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.op_Implicit(System.Int32)~DevExpress.Spreadsheet.ValueObject">
      <summary>
        <para>Implicitly converts an <see cref="T:System.Int32"/> value to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance.</para>
      </summary>
      <param name="value">An <see cref="T:System.Int32"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object that is the result of conversion.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.ValueObject.op_Implicit(System.String)~DevExpress.Spreadsheet.ValueObject">
      <summary>
        <para>Implicitly converts a <see cref="T:System.String"/> value to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/> instance.</para>
      </summary>
      <param name="value">A <see cref="T:System.String"/> value to be converted to a <see cref="T:DevExpress.Spreadsheet.ValueObject"/>.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.ValueObject"/> object that is the result of conversion.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.RangeValue">
      <summary>
        <para>Converts the object’s value to a worksheet range and returns the result.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the worksheet Range.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.ValueObject.TextValue">
      <summary>
        <para>Converts the object’s value to a string and returns the result.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorkbookCalculationMode">
      <summary>
        <para>Lists values used to specify when data should be recalculated in a non-visual <see cref="T:DevExpress.Spreadsheet.Workbook"/> or the Spreadsheet control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorkbookCalculationMode.Automatic">
      <summary>
        <para>Ignores the document’s calculation mode and recalculates formulas each time a cell value, formula, or defined name changes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorkbookCalculationMode.Manual">
      <summary>
        <para>Ignores the document’s calculation mode and starts calculation only on user request or after the Calculate method call. Never recalculates formulas when the document is loaded or before it is saved.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorkbookCalculationMode.UseDocumentSettings">
      <summary>
        <para>Uses the calculation mode specified in the document (this value is stored in the <see cref="P:DevExpress.Spreadsheet.CalculationOptions.Mode"/> property).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorkbookColorPalette">
      <summary>
        <para>A color palette for a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorkbookColorPalette.CopyFrom(DevExpress.Spreadsheet.WorkbookColorPalette)">
      <summary>
        <para>Copies colors from the specified palette to the current palette.</para>
      </summary>
      <param name="other">A workbook palette that contains colors to copy.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorkbookColorPalette.IsCustom">
      <summary>
        <para>Indicates whether the workbook palette contains custom colors.</para>
      </summary>
      <value>true if the palette contains custom colors; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorkbookColorPalette.Item(System.Int32)">
      <summary>
        <para>Returns or specifies a color in the workbook palette.</para>
      </summary>
      <param name="index">A zero-based index of the color to return or set. Valid indexes are from 0 to 55.</param>
      <value>The color at the specified index.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorkbookColorPalette.Reset">
      <summary>
        <para>Resets custom palette colors to default colors.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorkbookMergeOptions">
      <summary>
        <para>Provides options used to specify how to merge multiple workbooks into a single document.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorkbookMergeOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.WorkbookMergeOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorkbookMergeOptions.CreateNewWorkbook">
      <summary>
        <para>Gets or sets a value indicating whether to create a new workbook when merging multiple workbooks into one document.</para>
      </summary>
      <value>true, to combine workbooks into a new workbook; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorkbookMergeOptions.Default">
      <summary>
        <para>Returns a <see cref="T:DevExpress.Spreadsheet.WorkbookMergeOptions"/> object with the default settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorkbookMergeOptions"/> object.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorkbookOptions">
      <summary>
        <para>Contains workbook options.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorkbookOptions.Layout">
      <summary>
        <para>Returns options that specify the document layout.</para>
      </summary>
      <value>Document layout options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorkbookOptions.Localization">
      <summary>
        <para>Returns localization options for the workbook.</para>
      </summary>
      <value>An object that contains localization options.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorkbookTheme">
      <summary>
        <para>A document theme.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorkbookTheme.GetColors">
      <summary>
        <para>Returns document theme colors.</para>
      </summary>
      <returns>An object that defines a theme color scheme.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorkbookTheme.Load(System.IO.Stream)">
      <summary>
        <para>Loads a custom theme from a stream and applies it to the document.</para>
      </summary>
      <param name="stream">A stream that contains a THMX file with a theme definition.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorkbookTheme.Load(System.String)">
      <summary>
        <para>Loads a custom theme from a THMX file and applies it to the document.</para>
      </summary>
      <param name="fileName">A path to the THMX file that contains a theme definition.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorkbookTheme.Name">
      <summary>
        <para>Returns the document theme name.</para>
      </summary>
      <value>The document theme name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorkbookTheme.Reset(DevExpress.Spreadsheet.ThemePreset)">
      <summary>
        <para>Resets a custom theme to the default Office theme.</para>
      </summary>
      <param name="preset">One of the predefined Office themes.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorkbookTheme.SetColors(DevExpress.Spreadsheet.ThemeColorScheme)">
      <summary>
        <para>Applies custom colors to the document theme.</para>
      </summary>
      <param name="colorScheme">A color scheme to apply to the theme.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.Worksheet">
      <summary>
        <para>A worksheet in a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.ActiveView">
      <summary>
        <para>Provides access to an object that contains options to display and print a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetView"/> object.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.AddPrintRange(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Extends print range by merging with the specified range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the worksheet range to print.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.ArrayFormulas">
      <summary>
        <para>Obtains a collection of array formulas in a current worksheet.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.ArrayFormulaCollection"/> instance  that is a collection of <see cref="T:DevExpress.Spreadsheet.ArrayFormula"/> objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.AutoFilter">
      <summary>
        <para>Provides access to an object that contains options to filter data in a worksheet.</para>
      </summary>
      <value>An object that implements filtering for cell ranges in a worksheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.AutoOutline">
      <summary>
        <para>Automatically creates an outline for the specified worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Calculate">
      <summary>
        <para>Forces recalculation of the current worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Cells">
      <summary>
        <para>Provides access to the collection of all cells contained in the worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellCollection"/> object specifying the worksheet’s collection of cells.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Charts">
      <summary>
        <para>Provides access to a collection of charts in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.ChartCollection"/> object that contains all the charts in a worksheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Clear(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell content, formatting, hyperlinks and comments.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ClearComments(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell comments.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ClearContents(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell content.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ClearFormats(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell formatting.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ClearHyperlinks(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes cell hyperlinks.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to clear.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ClearOutline">
      <summary>
        <para>Clears the outline for the specified worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ClearPrintRange">
      <summary>
        <para>Clears the print area in the current worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.CodeName">
      <summary>
        <para>Gets or sets the worksheet’s code name.</para>
      </summary>
      <value>The code name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Columns">
      <summary>
        <para>Returns the collection of all columns in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ColumnCollection"/> object specifying the worksheet’s collection of columns.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Comments">
      <summary>
        <para>Provides access to the collection of all cell comments contained in the worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CommentCollection"/> object specifying the worksheet’s collection of cell comments.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Comparers">
      <summary>
        <para>Provides access to default comparers used to sort cell values in ascending and descending order.</para>
      </summary>
      <value>A DevExpress.Spreadsheet.IComparers container for default comparers.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.ConditionalFormattings">
      <summary>
        <para>Provides access to the collection of all conditional formatting rules on a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ConditionalFormattingCollection"/> collection that stores all conditional formatting rules specified on a worksheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.CopyFrom(DevExpress.Spreadsheet.Worksheet,DevExpress.Spreadsheet.WorksheetCopyOptions)">
      <summary>
        <para>Copies data from the specified worksheet to the current worksheet and allows you to specify copy options.</para>
      </summary>
      <param name="source">The source worksheet.</param>
      <param name="options">An object that defines copy options.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.CopyFrom(DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Copies the specified worksheet into the current instance.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that specifies the source worksheet for copying.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.CustomCellInplaceEditors">
      <summary>
        <para>Provides access to the collection of the custom in-place editors embedded into worksheet cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CustomCellInplaceEditorCollection"/> object specifying the worksheet’s collection of custom cell in-place editors.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.DataBindings">
      <summary>
        <para>Provides access to the collection of <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> objects.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBindingCollection"/> object that is the collection of all data bindings specified in a worksheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.DataValidations">
      <summary>
        <para>Provides access to a collection of <see cref="T:DevExpress.Spreadsheet.DataValidation"/> objects for the worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DataValidationCollection"/> collection of <see cref="T:DevExpress.Spreadsheet.DataValidation"/> objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.DefaultColumnWidth">
      <summary>
        <para>Gets or sets the default column width in units of measurement used in the workbook.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is a column width in units of measurement that are in effect.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.DefaultColumnWidthInCharacters">
      <summary>
        <para>Gets or sets the default column width in characters of the default font specified by the built-in Normal style.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the number of characters that can be accommodated in a column width when a column is formatted with the  built-in Normal style.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.DefaultColumnWidthInPixels">
      <summary>
        <para>Gets or sets the default column width in pixels.</para>
      </summary>
      <value>An integer value that is a column width in pixels.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.DefaultRowHeight">
      <summary>
        <para>Gets or sets the default height of worksheet rows.</para>
      </summary>
      <value>A <see cref="T:System.Double"/> value that is the row height in units of measurement that are in effect.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.DefinedNames">
      <summary>
        <para>Gets the collection of defined names whose scope is the current worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DefinedNameCollection"/> collection of a worksheet’s defined names.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.DeleteCells(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.DeleteMode)">
      <summary>
        <para>Deletes cells from the worksheet.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range to be deleted from the worksheet.</param>
      <param name="mode">A <see cref="T:DevExpress.Spreadsheet.DeleteMode"/> enumeration member specifying in which direction to shift other cells.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.DeleteCells(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Deletes cells from a worksheet, shifting other cells in the same row to the left.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range to be deleted.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.FreezeColumns(System.Int32,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Freezes the specified number of columns to the right of the specified cell, including the column that contains this cell.</para>
      </summary>
      <param name="columnOffset">An integer value that specifies the zero-based offset of the last column to be frozen relative to the column that contains the specified cell (the topLeft parameter).</param>
      <param name="topLeft">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell (or top left cell of the cell range) contained in a column from where freezing columns shall start.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.FreezeColumns(System.Int32)">
      <summary>
        <para>Freezes the specified number of columns on the left side of the worksheet.</para>
      </summary>
      <param name="columnOffset">An integer value that specifies the zero-based offset of the last column to be frozen relative to the first column in a worksheet.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.FreezePanes(System.Int32,System.Int32,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Freezes the specified number of rows and columns below and to the right of the specified cell, including the row and column containing this cell.</para>
      </summary>
      <param name="rowOffset">An integer value that specifies the zero-based offset of the last row to be frozen relative to the row that contains the specified cell (the topLeft parameter).</param>
      <param name="columnOffset">An integer value that specifies the zero-based offset of the last column to be frozen relative to the column that contains the specified cell (the topLeft parameter).</param>
      <param name="topLeft">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell (or top left cell of the cell range) from where freezing rows and columns shall start.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.FreezePanes(System.Int32,System.Int32)">
      <summary>
        <para>Freezes the specified number of rows and columns at the top and on the left side of the worksheet.</para>
      </summary>
      <param name="rowOffset">An integer value that specifies the zero-based offset of the last row to be frozen relative to the first row in a worksheet.</param>
      <param name="columnOffset">An integer value that specifies the zero-based offset of the last column to be frozen relative to the first column in a worksheet.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.FreezeRows(System.Int32,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Freezes the specified number of rows below the specified cell, including the row that contains this cell.</para>
      </summary>
      <param name="rowOffset">An integer value that specifies the zero-based offset of the last row to be frozen relative to the row that contains the specified cell (the topLeft parameter).</param>
      <param name="topLeft">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a cell (or top left cell of the cell range) contained in a row from where freezing rows shall start.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.FreezeRows(System.Int32)">
      <summary>
        <para>Freezes the specified number of rows at the top of the worksheet.</para>
      </summary>
      <param name="rowOffset">An integer value that specifies the zero-based offset of the last row to be frozen relative to the first row in a worksheet.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.GetDataRange">
      <summary>
        <para>Gets the worksheet range that encompasses all cells containing data and formulas.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> which contains all nonempty cells in a worksheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.GetExistingCells">
      <summary>
        <para>Gets the existing cells in the worksheet.</para>
      </summary>
      <returns>An enumerator that supports iteration over the cell collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.GetPrintableRange">
      <summary>
        <para>Returns a worksheet range that can be printed.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the printable worksheet range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.GetPrintableRange(System.Boolean)">
      <summary>
        <para>Calculates a worksheet range that can be printed with respect to the specified print area.</para>
      </summary>
      <param name="usePrintAreaDefinedName">true, to take into account the print area defined by the &#0095;xlnm.Print&#0095;Area name; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the printable worksheet range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.GetProtectionPermissions">
      <summary>
        <para>Returns the permission set for a protected worksheet.</para>
      </summary>
      <returns>The <see cref="T:DevExpress.Spreadsheet.WorksheetProtectionPermissions"/> enumeration values specifying actions that end-users are allowed to take on the protected worksheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.GetSelectedRanges">
      <summary>
        <para>Returns cell ranges currently selected in the worksheet.</para>
      </summary>
      <returns>A list of the <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.GetSelectedShapes">
      <summary>
        <para>Returns shapes currently selected in the worksheet.</para>
      </summary>
      <returns>A list of the <see cref="T:DevExpress.Spreadsheet.Shape"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.GetUsedRange">
      <summary>
        <para>Returns the used range on the specified worksheet.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of modified cells.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.HasData">
      <summary>
        <para>Checks whether the current worksheet contains data.</para>
      </summary>
      <value>true, if any cell in the current worksheet contains a value or formula; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.HeaderFooterOptions">
      <summary>
        <para>Provides access to header and footer options for a worksheet.</para>
      </summary>
      <value>An object that contains header and footer options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.HorizontalPageBreaks">
      <summary>
        <para>Provides access to a collection of row page breaks in the worksheet.</para>
      </summary>
      <value>An object exposing the <see cref="T:DevExpress.Spreadsheet.PageBreaksCollection"/> interface.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Hyperlinks">
      <summary>
        <para>Provides access to the collection of hyperlinks contained in the worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.HyperlinkCollection"/> object specifying the worksheet’s collection of hyperlinks.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.IgnoredErrors">
      <summary>
        <para>Provides access to ranges and error types which are ignored in those ranges.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.IgnoredErrorCollection"/> collection of <see cref="T:DevExpress.Spreadsheet.IgnoredError"/> objects.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Index">
      <summary>
        <para>Gets the worksheet index within the workbook’s <see cref="T:DevExpress.Spreadsheet.WorksheetCollection"/> collection.</para>
      </summary>
      <value>An integer value specifying a zero-based index of the worksheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.InsertCells(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.InsertCellsMode)">
      <summary>
        <para>Inserts new cells in the worksheet.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range where new cells should be inserted.</param>
      <param name="mode">An <see cref="T:DevExpress.Spreadsheet.InsertCellsMode"/> enumeration member specifying in which direction to shift other cells.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.InsertCells(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Inserts new cells in a worksheet, shifting other cells in the same column down.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying a cell range where new cells should be inserted.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.IsProtected">
      <summary>
        <para>Gets whether the worksheet is protected.</para>
      </summary>
      <value>true, if the worksheet is protected; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Item(System.Int32,System.Int32)">
      <summary>
        <para>Provides access to an individual cell by indexes of a row and column containing this cell.</para>
      </summary>
      <param name="rowIndex">A zero-based integer specifying the row index. If it is negative or exceeds the last available index (1048575), an exception is raised.</param>
      <param name="columnIndex">A zero-based integer specifying the column index. If it is negative or exceeds the last available index (16383), an exception is raised.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object that specifies a cell at the intersection of the specified row and column.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Item(System.String)">
      <summary>
        <para>Provides access to a cell range by its reference string.</para>
      </summary>
      <param name="reference">A <see cref="T:System.String"/> value that specifies the range reference in the A1 reference style or a defined name.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.MergeCells(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.MergeCellsMode)">
      <summary>
        <para>Merges cells in the specified mode.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies the range of cells to be merged.</param>
      <param name="mode">A <see cref="T:DevExpress.Spreadsheet.MergeCellsMode"/> enumeration member that specifies how to merge cells.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.MergeCells(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Merges the specified cells.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to be merged.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Move(System.Int32)">
      <summary>
        <para>Moves the worksheet to another location within the workbook’s collection of worksheets.</para>
      </summary>
      <param name="position">An integer value specifying the zero-based destination index of the moved worksheet.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Name">
      <summary>
        <para>Gets or sets the name of the worksheet .</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the worksheet name.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.OutlineOptions">
      <summary>
        <para>Provides access to the group settings that control the summary row and column location.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetOutlineOptions"/> object that specifies the grouping direction.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Pictures">
      <summary>
        <para>Provides access to a collection of pictures in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PictureCollection"/> object that contains all the pictures in a worksheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.PivotTables">
      <summary>
        <para>Provides access to the collection of pivot tables in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PivotTableCollection"/> object specifying the worksheet’s collection of pivot tables.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.PrintOptions">
      <summary>
        <para>Provides access to options that control how the worksheet is printed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetPrintOptions"/> object that contains worksheet print options.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Protect(System.String,DevExpress.Spreadsheet.WorksheetProtectionPermissions)">
      <summary>
        <para>Protects worksheet elements to prevent them from being changed by the user.</para>
      </summary>
      <param name="password">A string that specifies a password for the worksheet. If the password is an empty string, the worksheet can be unprotected without using a password.</param>
      <param name="permissions">A <see cref="T:DevExpress.Spreadsheet.WorksheetProtectionPermissions"/> enumeration that allows you to combine enumeration values to specify multiple worksheet elements to protect.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.ProtectedRanges">
      <summary>
        <para>Provides access to a collection of protected ranges in a current worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ProtectedRangeCollection"/> object containing all protected ranges of the worksheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Range">
      <summary>
        <para>Provides access to the range of cells in the worksheet.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Spreadsheet.IRangeProvider"/> interface.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.RemoveSubtotal(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Removes subtotals for the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells for which the subtotals should be removed.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Rows">
      <summary>
        <para>Returns the collection of all rows in a worksheet.</para>
      </summary>
      <value>The collection of <see cref="T:DevExpress.Spreadsheet.Row"/> objects.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ScrollTo(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Scrolls the worksheet to the top-left cell of the specified range.</para>
      </summary>
      <param name="scrolledAreaTopLeftCell">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object to the top-left cell of which the worksheet must be scrolled.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ScrollTo(System.Int32,System.Int32)">
      <summary>
        <para>Scrolls the worksheet to the specified column and row.</para>
      </summary>
      <param name="rowIndex">An integer that is the zero-based index of the row to which the worksheet must be scrolled.</param>
      <param name="columnIndex">An integer that is the zero-based index of the column to which the worksheet must be scrolled.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ScrollToColumn(System.Int32)">
      <summary>
        <para>Scrolls the worksheet to the specified column.</para>
      </summary>
      <param name="columnIndex">An integer that is the zero-based index of the column to which the worksheet must be scrolled.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ScrollToColumn(System.String)">
      <summary>
        <para>Scrolls the worksheet to the specified column.</para>
      </summary>
      <param name="columnHeading">A string that represents the heading of the column to which the worksheet must be scrolled.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ScrollToRow(System.Int32)">
      <summary>
        <para>Scrolls the worksheet to the specified row.</para>
      </summary>
      <param name="rowIndex">An integer that is the zero-based index of the row to which the worksheet must be scrolled.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.ScrollToRow(System.String)">
      <summary>
        <para>Scrolls the worksheet to the specified row.</para>
      </summary>
      <param name="rowHeading">A string that represents the heading of the row to which the worksheet must be scrolled.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Search(System.String,DevExpress.Spreadsheet.SearchOptions)">
      <summary>
        <para>Performs a search in the worksheet using specified options.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> representing the search text.</param>
      <param name="options">A <see cref="T:DevExpress.Spreadsheet.SearchOptions"/> instance containing required search options.</param>
      <returns>An object implementing the <see cref="T:System.Collections.IEnumerable"/> interface which is the collection of cells that match the search term.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Search(System.String)">
      <summary>
        <para>Performs a search in the worksheet using the default parameters.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> representing the search text.</param>
      <returns>An object implementing the <see cref="T:System.Collections.IEnumerable"/> interface which is the collection of cells that match the search term.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.SelectedCell">
      <summary>
        <para>Gets or sets an active cell in the worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies an active cell in the worksheet. If you assign a cell range located in a worksheet other than the current worksheet, an exception is raised.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.SelectedChart">
      <summary>
        <para>Gets or sets the chart selected in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Charts.Chart"/> object or null (Nothing in VB) if a chart is not selected.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.SelectedComment">
      <summary>
        <para>Gets or sets a comment selected in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Comment"/> object, or null (Nothing in VB) if a comment is not selected.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.SelectedPicture">
      <summary>
        <para>Gets or sets a picture selected in the worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Picture"/> object. If you assign a picture located in a worksheet other than the current worksheet, an exception is raised.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.SelectedShape">
      <summary>
        <para>Gets or sets a shape selected in the worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Shape"/> object. If you assign a shape located in a worksheet other than the current worksheet, an exception is raised.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Selection">
      <summary>
        <para>Gets or sets a cell range selected in the worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell selection in the worksheet. If you assign a cell range located in a worksheet other than the current worksheet, an exception is raised.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.SetPrintRange(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Defines the print range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the worksheet range to print.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.SetSelectedRanges(System.Collections.Generic.IList{DevExpress.Spreadsheet.CellRange},System.Boolean)">
      <summary>
        <para>Selects cell ranges in the worksheet and specifies whether the selection expands to fit merged cells.</para>
      </summary>
      <param name="ranges">A list of the <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects.</param>
      <param name="expandToMergedCellsSize">true, to expand the selection to include merged cells; otherwise, false.</param>
      <returns>true, if cell ranges are selected successfully; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.SetSelectedRanges(System.Collections.Generic.IList{DevExpress.Spreadsheet.CellRange})">
      <summary>
        <para>Sets cell ranges selected in the worksheet.</para>
      </summary>
      <param name="ranges">A list of the <see cref="T:DevExpress.Spreadsheet.CellRange"/> objects.</param>
      <returns>true if cell ranges are selected successfully; otherwise false. If you pass null (Nothing in Visual Basic), or an empty list, or a list that contains at least one cell range located in a worksheet other than the current worksheet, the method returns false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.SetSelectedShapes(System.Collections.Generic.IList{DevExpress.Spreadsheet.Shape})">
      <summary>
        <para>Sets shapes selected in the worksheet.</para>
      </summary>
      <param name="shapes">A list of the <see cref="T:DevExpress.Spreadsheet.Shape"/> objects.</param>
      <returns>true if shapes are selected successfully; otherwise false. If you pass a list that contains at least one shape located in a worksheet other than the current worksheet, the method returns false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Shapes">
      <summary>
        <para>Provides access to a collection of drawing objects (shapes, pictures, and charts) in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.ShapeCollection"/> object containing drawing objects in the current worksheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Sort(DevExpress.Spreadsheet.CellRange,System.Boolean)">
      <summary>
        <para>Sorts the specified range by the first column.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells in a worksheet.</param>
      <param name="ascending">true to sort in ascending order; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Sort(DevExpress.Spreadsheet.CellRange,System.Collections.Generic.IEnumerable{DevExpress.Spreadsheet.SortField})">
      <summary>
        <para>Sorts the specified range by multiple columns.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells in a worksheet.</param>
      <param name="sortFields">A list of <see cref="T:DevExpress.Spreadsheet.SortField"/> objects which specify the columns by which to sort.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Sort(DevExpress.Spreadsheet.CellRange,System.Int32,System.Boolean)">
      <summary>
        <para>Sorts the specified range by the specified column.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells in a worksheet.</param>
      <param name="columnOffset">An integer that is the offset of the column by which to sort from the first column in the range. The first column has the offset 0.</param>
      <param name="ascending">true, to sort in ascending order; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Sort(DevExpress.Spreadsheet.CellRange,System.Int32,System.Collections.Generic.IComparer{DevExpress.Spreadsheet.CellValue})">
      <summary>
        <para>Sorts the specified range by the specified column using the specified comparer.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells in a worksheet.</param>
      <param name="columnOffset">An integer that is the offset of the column by which to sort from the first column in the range. The first column has the offset 0.</param>
      <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.CellValue"/>,&gt;</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Sort(DevExpress.Spreadsheet.CellRange,System.Int32)">
      <summary>
        <para>Sorts the specified range by the specified column in ascending order.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells in a worksheet.</param>
      <param name="columnOffset">An integer that is the offset of the column by which to sort from the first column in the range. The first column has the offset 0.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Sort(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Sorts the specified range by the first column in ascending order.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells in a worksheet.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.SparklineGroups">
      <summary>
        <para>Provides access to a collection of sparkline groups in a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.SparklineGroupCollection"/> object that contains all the sparklines in a worksheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.SplitLeftPosition">
      <summary>
        <para>Gets the index of the leftmost column in the bottom right pane when panes are frozen.</para>
      </summary>
      <value>An integer that is the column index.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.SplitTopPosition">
      <summary>
        <para>Gets the index of the topmost row in the bottom right pane when panes are frozen.</para>
      </summary>
      <value>An integer that is the row index.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Subtotal(DevExpress.Spreadsheet.CellRange,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32,System.String)">
      <summary>
        <para>Creates subtotals for the specified range of cells.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the range of cells for which the subtotals should be created.</param>
      <param name="groupByColumn">An integer that specifies the zero-based index of a column containing related data for grouping.</param>
      <param name="subtotalColumnList">A list of column indexes in a worksheet that defines columns for which the subtotals should be calculated.</param>
      <param name="functionCode">An integer that specifies the code of the function to be used in calculating subtotals.</param>
      <param name="functionText">A string that defines the text to be displayed in the summary rows.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Tables">
      <summary>
        <para>Provides access to the collection of tables contained in the worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.TableCollection"/> object specifying the worksheet’s collection of tables.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Tag">
      <summary>
        <para>Gets or sets the data associated with a <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> that contains arbitrary data for a worksheet. The default is null.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.UnfreezePanes">
      <summary>
        <para>Unfreezes rows and columns on the worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.UnMergeCells(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Unmerges the specified cells that have been merged.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies a range of cells to be unmerged.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.Worksheet.Unprotect(System.String)">
      <summary>
        <para>Removes protection from a worksheet.</para>
      </summary>
      <param name="password">A string that specifies the password with which the worksheetis protected.</param>
      <returns>true, if protection is successfully removed; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.VerticalPageBreaks">
      <summary>
        <para>Provides access to a collection of column page breaks in the worksheet.</para>
      </summary>
      <value>An object exposing the <see cref="T:DevExpress.Spreadsheet.PageBreaksCollection"/> interface.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.VisibilityType">
      <summary>
        <para>Gets or sets whether the current worksheet is visible, hidden or “very hidden”.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetVisibilityType"/> enumeration member that specifies the worksheet visibility type.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Visible">
      <summary>
        <para>Gets or sets whether the current worksheet is visible or hidden.</para>
      </summary>
      <value>true, if the worksheet is visible; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.Worksheet.Workbook">
      <summary>
        <para>Gets a workbook that contains the current worksheet.</para>
      </summary>
      <value>An object exposing the <see cref="T:DevExpress.Spreadsheet.IWorkbook"/> interface.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetCollection">
      <summary>
        <para>A collection of worksheets in a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetCollection.ActiveWorksheet">
      <summary>
        <para>Gets or sets the currently active worksheet within a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that specifies the active worksheet.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCollection.Add">
      <summary>
        <para>Creates a new worksheet and appends it to the end of the collection.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that specifies the new worksheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCollection.Add(System.String)">
      <summary>
        <para>Creates a new worksheet under the specified name and appends it to the end of the collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the worksheet name.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that specifies the new worksheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCollection.Contains(DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Determines whether the collection contains the specified worksheet.</para>
      </summary>
      <param name="worksheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object to locate in the collection.</param>
      <returns>true, if the collection contains the specified worksheet; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCollection.Contains(System.String)">
      <summary>
        <para>Determines whether the collection contains a worksheet under the specified name.</para>
      </summary>
      <param name="name">A string specifying the name of the worksheet to locate in the collection.</param>
      <returns>true, if the collection contains the worksheet under the specified name; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCollection.IndexOf(DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Returns the zero-based index of the specified worksheet in the collection.</para>
      </summary>
      <param name="worksheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object to locate in the collection.</param>
      <returns>An integer that is the index of a worksheet in a collection.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCollection.Insert(System.Int32,System.String)">
      <summary>
        <para>Creates a new worksheet under the specified name and appends it to the collection at the specified position.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which the new worksheet should be inserted.</param>
      <param name="name">A <see cref="T:System.String"/> value that specifies the worksheet name.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that specifies the created worksheet.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCollection.Insert(System.Int32)">
      <summary>
        <para>Creates a new worksheet and appends it to the collection at the specified position.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the position at which the new worksheet should be inserted.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that specifies the created worksheet.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetCollection.Item(System.String)">
      <summary>
        <para>Gets a worksheet by its name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the name of the worksheet to get.</param>
      <value>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object that is the worksheet with the specified name.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCollection.Remove(DevExpress.Spreadsheet.Worksheet)">
      <summary>
        <para>Removes the specified worksheet from the collection.</para>
      </summary>
      <param name="worksheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object specifying a worksheet to be removed from a workbook.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the worksheet at the specified position from the collection.</para>
      </summary>
      <param name="index">An integer that is the zero-based index of a worksheet to be deleted from a workbook.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetCopyOptions">
      <summary>
        <para>Allows you to define copy options when you copy data from one worksheet to another.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetCopyOptions.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Spreadsheet.WorksheetCopyOptions"/> class instance.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetCopyOptions.InvalidFormulaReplacementMode">
      <summary>
        <para>Specifies how to replace copied formulas if they contain references to worksheets that do not exist in the destination workbook.</para>
      </summary>
      <value>An enumeration member that specifies how to resolve formulas with references to sheets in the source workbook. Default mode is <see cref="F:DevExpress.Spreadsheet.FormulaReplacementMode.UseExternalReferences"/>.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetCopyOptions.OverwriteProtectionOnLockedWorksheet">
      <summary>
        <para>Specifies whether to apply cell protection options of the source worksheet to cells in the protected destination worksheet.</para>
      </summary>
      <value>true if cells in the protected destination worksheet have the same protection options as the source worksheet cells; overwise, false (default).</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetCopyOptions.PasteOptions">
      <summary>
        <para>Specifies the part of data to paste from the copied worksheet into the target worksheet.</para>
      </summary>
      <value>One or more Paste Special options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetCopyOptions.SheetMappings">
      <summary>
        <para>Allows you to specify mappings between worksheet names in the source and destination workbooks.</para>
      </summary>
      <value>A dictionary where keys contain sheet names in the source workbook and values define corresponding sheets in the destination workbook.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetDataBinding">
      <summary>
        <para>Contains information about a cell range bound to an external data source or used to create a data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetDataBinding.DataSource">
      <summary>
        <para>Gets the data source associated with the current <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object.</para>
      </summary>
      <value>An object that is the target data source.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetDataBinding.Range">
      <summary>
        <para>Gets the worksheet range associated with the current <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> instance.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is a cell range associated with a data source.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetDataBinding.RowCount">
      <summary>
        <para>Gets the number of rows occupied by the cell range associated with a data source.</para>
      </summary>
      <value>An integer value that is the number of rows in the cell range associated with a data source.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetDataBindingCollection">
      <summary>
        <para>A collection of data bindings specified in a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindTableToDataSource(System.Object,DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ExternalDataSourceOptions)">
      <summary>
        <para>Creates a worksheet table from the specified range and binds it to the data source using the specified options.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the range of the worksheet table being created.</param>
      <param name="options">An <see cref="T:DevExpress.Spreadsheet.ExternalDataSourceOptions"/> object that contains options used to establish binding.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetTableDataBinding"/> object that contains information about the data-bound worksheet table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindTableToDataSource(System.Object,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a worksheet table from the specified range and binds it to the data source using default options.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the range of the worksheet table being created.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetTableDataBinding"/> object that contains information about the data-bound worksheet table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindTableToDataSource(System.Object,System.Int32,System.Int32,DevExpress.Spreadsheet.ExternalDataSourceOptions)">
      <summary>
        <para>Creates a worksheet table with its top left corner at the specified cell and binds it to the data source using the specified options.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <param name="rowIndex">An integer that is the row index of the top left cell in the worksheet table.</param>
      <param name="columnIndex">An integer that is the column index of the top left cell in the worksheet table.</param>
      <param name="options">An <see cref="T:DevExpress.Spreadsheet.ExternalDataSourceOptions"/> object that contains options used to establish binding.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetTableDataBinding"/> object that contains information about the data-bound worksheet table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindTableToDataSource(System.Object,System.Int32,System.Int32)">
      <summary>
        <para>Creates a worksheet table with its top left corner at the specified cell and binds it to the data source using default options.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <param name="rowIndex">An integer that is the row index of the top left cell in the worksheet table.</param>
      <param name="columnIndex">An integer that is the column index of the top left cell in the worksheet table.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetTableDataBinding"/> object that contains information about the data-bound worksheet table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindTableToDataSource(System.Object)">
      <summary>
        <para>Creates a worksheet table starting from the upper left worksheet cell and binds it to the data source using default options.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetTableDataBinding"/> object that contains information about the data-bound worksheet table.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindToDataSource(System.Object,DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.ExternalDataSourceOptions)">
      <summary>
        <para>Binds the worksheet cell range to the specified data source using the specified options.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range in which the retrieved data will be inserted.</param>
      <param name="options">An <see cref="T:DevExpress.Spreadsheet.ExternalDataSourceOptions"/> object that contains options used to establish binding.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object that contains information about the data-bound range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindToDataSource(System.Object,DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Binds the worksheet cell range to the specified data source.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object specifying the cell range to establish binding, in which the retrieved data will be inserted.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object that contains information about the data-bound range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindToDataSource(System.Object,System.Int32,System.Int32,DevExpress.Spreadsheet.ExternalDataSourceOptions)">
      <summary>
        <para>Binds the worksheet cell range to the specified data source using the specified options.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <param name="rowIndex">An integer that is the row index of the top left cell in the binding range.</param>
      <param name="columnIndex">An integer that is the column index of the top left cell in the binding range.</param>
      <param name="options">An <see cref="T:DevExpress.Spreadsheet.ExternalDataSourceOptions"/> object that contains options used to establish binding.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object that contains information about the data-bound range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindToDataSource(System.Object,System.Int32,System.Int32)">
      <summary>
        <para>Binds the worksheet cell range to the specified data source.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <param name="rowIndex">An integer that is the row index of the top left cell in the binding range.</param>
      <param name="columnIndex">An integer that is the column index of the top left cell in the binding range.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object that contains information about the data-bound range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.BindToDataSource(System.Object)">
      <summary>
        <para>Binds the worksheet cell range to the specified data source.</para>
      </summary>
      <param name="dataSource">A data source object whose data should be retrieved into the worksheet.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object that contains information about the data-bound range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.Clear">
      <summary>
        <para>Removes all <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> objects from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.CreateDataSource(DevExpress.Spreadsheet.CellRange,DevExpress.Spreadsheet.RangeDataSourceOptions)">
      <summary>
        <para>Creates a new data source from the cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> that is the cell range used as the data source.</param>
      <param name="options">A <see cref="T:DevExpress.Spreadsheet.RangeDataSourceOptions"/> object containing the data source options.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object that contains information about the data source range.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.CreateDataSource(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Creates a new data source from the specified cell range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that is the cell range used as the data source. The range cannot include merged cells and cannot be composed of multiple selections.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object that contains information about the data source range.</returns>
    </member>
    <member name="E:DevExpress.Spreadsheet.WorksheetDataBindingCollection.Error">
      <summary>
        <para>Occurs when a binding cannot be completed successfully.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.GetDataBinding(DevExpress.Spreadsheet.Cell)">
      <summary>
        <para>Obtains data bindings for the specified cell.</para>
      </summary>
      <param name="cell">A <see cref="T:DevExpress.Spreadsheet.Cell"/> for which to query the data binding collection.</param>
      <returns>A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object that identifies a particular data binding.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.GetDataBindings(DevExpress.Spreadsheet.CellRange)">
      <summary>
        <para>Obtains data bindings for the cells in the specified range.</para>
      </summary>
      <param name="range">A <see cref="T:DevExpress.Spreadsheet.CellRange"/> of cells in a worksheet.</param>
      <returns>A <see cref="T:System.Collections.Generic.IList`1"/>&lt;<see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/>,&gt; generic list .</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.Remove(DevExpress.Spreadsheet.WorksheetDataBinding)">
      <summary>
        <para>Removes the specified <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object from the collection.</para>
      </summary>
      <param name="item">A <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object to be removed from the collection.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.Remove(System.Object)">
      <summary>
        <para>Removes the <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object associated with the specified data source from the collection.</para>
      </summary>
      <param name="dataSource">An object specifying the data source associated with the <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object to be removed.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetDataBindingCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the <see cref="T:DevExpress.Spreadsheet.WorksheetDataBinding"/> object at the specified index from the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the item to be removed. It should be non-negative and less than the number of elements in the collection.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetHeaderFooter">
      <summary>
        <para>A worksheet header or footer.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetHeaderFooter.AddPicture(DevExpress.Spreadsheet.SpreadsheetImageSource,DevExpress.Spreadsheet.HeaderFooterSection)">
      <summary>
        <para>Adds a picture to the worksheet header or footer.</para>
      </summary>
      <param name="imageSource">An object that specifies the image source.</param>
      <param name="section">Specifies the header or footer section to which the image should be added.</param>
      <returns>The picture added to the header or footer.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetHeaderFooter.AddPicture(System.Drawing.Image,DevExpress.Spreadsheet.HeaderFooterSection)">
      <summary>
        <para>Adds a picture to the worksheet header or footer.</para>
      </summary>
      <param name="image">The image to insert.</param>
      <param name="section">Specifies the header or footer section to which the image should be added.</param>
      <returns>The picture added to the header or footer.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetHeaderFooter.AddPicture(System.String,DevExpress.Spreadsheet.HeaderFooterSection)">
      <summary>
        <para>Adds a picture to the worksheet header or footer.</para>
      </summary>
      <param name="filename">The path to the image file.</param>
      <param name="section">Specifies the header or footer section to which the image should be added.</param>
      <returns>The picture added to the header or footer.</returns>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooter.Center">
      <summary>
        <para>Gets or sets the centered text for the header or footer.</para>
      </summary>
      <value>A string that is the text centered in the header or footer.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooter.CenterPicture">
      <summary>
        <para>Gets the picture located in the center section of a header or footer.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.HeaderFooterPicture"/> object that is the target picture.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetHeaderFooter.FromLCR(System.String,System.String,System.String)">
      <summary>
        <para>Specifies the left-aligned, centered and right-aligned text for the header of footer.</para>
      </summary>
      <param name="left">A string that is the left-aligned text.</param>
      <param name="center">A string that is the centered text.</param>
      <param name="right">A string that is the right-aligned text.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetHeaderFooter.FromString(System.String)">
      <summary>
        <para>Specifies the text for the header or footer.</para>
      </summary>
      <param name="value">A string that specifies left-aligned, centered and right-aligned text.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooter.IsEmpty">
      <summary>
        <para>Indicates whether the header or footer is empty.</para>
      </summary>
      <value>true, if the header or footer is empty; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooter.Left">
      <summary>
        <para>Specifies the left-aligned text for the header or footer.</para>
      </summary>
      <value>A string that is the text aligned left in the header or footer.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooter.LeftPicture">
      <summary>
        <para>Gets the picture located in the left section of a header or footer.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.HeaderFooterPicture"/> object  that is the target picture.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetHeaderFooter.RemovePicture(DevExpress.Spreadsheet.HeaderFooterSection)">
      <summary>
        <para>Removes a picture from the specified section of a header or footer.</para>
      </summary>
      <param name="section">One of the <see cref="T:DevExpress.Spreadsheet.HeaderFooterSection"/> enumeration values identifying the section from which the picture should be removed.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooter.Right">
      <summary>
        <para>Specifies the right-aligned text for the header or footer.</para>
      </summary>
      <value>A string that is the text aligned right in the header or footer.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooter.RightPicture">
      <summary>
        <para>Gets the picture located in the right section of a header or footer.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.HeaderFooterPicture"/> object that is the target picture.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions">
      <summary>
        <para>Allows you to specify headers and footers for a worksheet or chart sheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.AlignWithMargins">
      <summary>
        <para>Gets or sets whether the sides of a header or a footer should be aligned with page margins.</para>
      </summary>
      <value>true, to align the sides of a header or a footer with page margins; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.DifferentFirst">
      <summary>
        <para>Gets or sets whether the first page of the document contains a header and footer that is different from headers and footers on other pages.</para>
      </summary>
      <value>true, if the first page contains a unique header and footer; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.DifferentOddEven">
      <summary>
        <para>Gets or sets whether headers and footers on odd pages should be different from those on even pages.</para>
      </summary>
      <value>true, to specify different headers and footers for odd and even pages; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.EvenFooter">
      <summary>
        <para>Provides access to the footer for even pages.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetHeaderFooter"/> object that is the footer for even pages.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.EvenHeader">
      <summary>
        <para>Provides access to the header for even pages.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetHeaderFooter"/> object that is the header for even pages.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.FirstFooter">
      <summary>
        <para>Provides access to the footer for the first page.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetHeaderFooter"/> object that is the footer for the first page.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.FirstHeader">
      <summary>
        <para>Provides access to the header for the first page.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetHeaderFooter"/> object that is the header for the first page.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.OddFooter">
      <summary>
        <para>Provides access to the footer for odd pages.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetHeaderFooter"/> object that is the footer for odd pages.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.OddHeader">
      <summary>
        <para>Provides access to the header for odd pages.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetHeaderFooter"/> object that is the header for odd pages.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetHeaderFooterOptions.ScaleWithDoc">
      <summary>
        <para>Specifies whether the header and footer should scale when you use the “Shrink to Fit” feature in the document.</para>
      </summary>
      <value>true, to scale the header and footer when the “Shrink to Fit” feature is used; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetOutlineOptions">
      <summary>
        <para>Contains options used to specify the summary rows and columns location.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetOutlineOptions.SummaryColumnsRight">
      <summary>
        <para>Gets or sets a value indicating whether the summary columns are located to the right of detail columns.</para>
      </summary>
      <value>true, if summary columns are to the right of each group of detail columns; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetOutlineOptions.SummaryRowsBelow">
      <summary>
        <para>Gets or sets a value indicating whether the summary rows are located below detail rows.</para>
      </summary>
      <value>true, if summary rows are below each group of detail rows; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetPageNumbering">
      <summary>
        <para>Contains options that affect page numbering when printing worksheets in a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPageNumbering.Start">
      <summary>
        <para>Gets or sets the number from which pagination starts on the current worksheet.</para>
      </summary>
      <value>An integer that is the number of the first page of the worksheet.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPageNumbering.StartType">
      <summary>
        <para>Gets or sets whether the pagination restarts or continues from the previous page.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetPageNumberingStartType"/> enumeration member.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetPageNumberingStartType">
      <summary>
        <para>Lists possible options for the starting  number used in pagination when printing worksheets in a workbook.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetPageNumberingStartType.Continuous">
      <summary>
        <para>Continuously number pages.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetPageNumberingStartType.Restart">
      <summary>
        <para>Restart numbering.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetPrintOptions">
      <summary>
        <para>Contains options used for printing a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.AutoPageBreaks">
      <summary>
        <para>Gets or sets whether to position page breaks automatically.</para>
      </summary>
      <value>true, to insert page breaks automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.BlackAndWhite">
      <summary>
        <para>Gets or sets whether to print the worksheet in black and white or in color.</para>
      </summary>
      <value>true, to print the worksheet in black and white; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.CenterHorizontally">
      <summary>
        <para>Gets or sets whether worksheet data is centered horizontally on a printed page.</para>
      </summary>
      <value>true, to center worksheet data; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.CenterVertically">
      <summary>
        <para>Gets or sets whether worksheet data is centered vertically on a printed page.</para>
      </summary>
      <value>true, to center worksheet data; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.CommentsPrintMode">
      <summary>
        <para>Gets or sets how comments contained in the worksheet are printed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CommentsPrintMode"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.Draft">
      <summary>
        <para>Gets or sets a value indicating whether to print the worksheet without graphics.</para>
      </summary>
      <value>true, to print the worksheet without graphics; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.ErrorsPrintMode">
      <summary>
        <para>Gets or sets how errors contained in worksheet cells are printed.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Spreadsheet.ErrorsPrintMode"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.FitToHeight">
      <summary>
        <para>Gets or sets the number of pages by height in which the worksheet shall fit when printed.</para>
      </summary>
      <value>A positive integer value that specifies a number of pages in which the worksheet will fit.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.FitToPage">
      <summary>
        <para>Indicates whether the worksheet content is scaled to fit to a specific number of pages.</para>
      </summary>
      <value>true, if the FitToPage print option is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.FitToWidth">
      <summary>
        <para>Gets or sets the number of pages in width to which the worksheet must fit when printed.</para>
      </summary>
      <value>A positive integer value that specifies the number of horizontal pages to which the worksheet must fit.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.NumberOfCopies">
      <summary>
        <para>Gets or sets the number of worksheet copies to print.</para>
      </summary>
      <value>A positive integer that is a number of copies to print.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.PageNumbering">
      <summary>
        <para>Provides access to an object specifying page numbering options for the current worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetPageNumbering"/> object containing page numbering options.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.PageOrder">
      <summary>
        <para>Gets or sets the order in which worksheet pages are numbered and printed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.PageOrder"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.PrintGridlines">
      <summary>
        <para>Gets or sets whether worksheet gridlines are printed.</para>
      </summary>
      <value>true, to print worksheet gridlines; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.PrintHeadings">
      <summary>
        <para>Gets or sets whether row and column headings are printed.</para>
      </summary>
      <value>true, to print row and column headings; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.PrintTitles">
      <summary>
        <para>Provides access to an object used to specify rows and columns to be repeated on every printed page.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetPrintTitleOptions"/> object that specifies titles to be repeated on every printed page.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintOptions.Scale">
      <summary>
        <para>Gets or sets the percentage by which to scale the worksheet content.</para>
      </summary>
      <value>A positive integer value that determines print scaling.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetPrintTitleOptions">
      <summary>
        <para>Represents the object that specifies rows and columns to be repeated on every printed page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetPrintTitleOptions.Clear">
      <summary>
        <para>Removes the print titles from the worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintTitleOptions.Columns">
      <summary>
        <para>Gets or sets specific columns to be repeated on every printed page.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies worksheet columns repeated on every printed page.If the specified cell range is not a continuous interval of entire columns, an exception is raised.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetPrintTitleOptions.Rows">
      <summary>
        <para>Gets or sets specific rows to be repeated on every printed page.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object that specifies worksheet rows repeated on every printed page.If the specified cell range is not a continuous interval of entire rows, an exception is raised.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetPrintTitleOptions.SetColumns(System.Int32,System.Int32)">
      <summary>
        <para>Sets columns to be repeated on the left side of every printed page.</para>
      </summary>
      <param name="startIndex">A zero-based integer representing the index of the first column to be printed on each page.</param>
      <param name="endIndex">A zero-based integer representing the index of the last column to be printed on each page.</param>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetPrintTitleOptions.SetRows(System.Int32,System.Int32)">
      <summary>
        <para>Sets rows to be repeated at the top of every printed page.</para>
      </summary>
      <param name="startIndex">A zero-based integer representing the index of the first row to be printed on each page.</param>
      <param name="endIndex">A zero-based integer representing the index of the last row to be printed on each page.</param>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetProtectionPermissions">
      <summary>
        <para>Lists end-user actions allowed for the protected worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.AutoFilters">
      <summary>
        <para>Use the arrows to change the filter on ranges when AutoFilters are applied.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.Default">
      <summary>
        <para>Select locked and unlocked cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.DeleteColumns">
      <summary>
        <para>Delete columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.DeleteRows">
      <summary>
        <para>Delete rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.FormatCells">
      <summary>
        <para>Change formatting or conditional formatting options.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.FormatColumns">
      <summary>
        <para>Change column width or hide columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.FormatRows">
      <summary>
        <para>Change row height or hide columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.InsertColumns">
      <summary>
        <para>Insert columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.InsertHyperlinks">
      <summary>
        <para>Insert hyperlinks.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.InsertRows">
      <summary>
        <para>Insert rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.Objects">
      <summary>
        <para>Make changes to shapes or charts.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.PivotTables">
      <summary>
        <para>Change or refresh PivotTable reports, or create new reports.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.Scenarios">
      <summary>
        <para>Make changes to scenarios and view hidden scenarios. Currently not in use since scenarios are not supported.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.SelectLockedCells">
      <summary>
        <para>Select locked cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.SelectUnlockedCells">
      <summary>
        <para>Select unlocked cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetProtectionPermissions.Sort">
      <summary>
        <para>Use commands to sort cell data.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetTableDataBinding">
      <summary>
        <para>Contains information about a <see cref="T:DevExpress.Spreadsheet.Table"/> bound to an external data source or used to create a data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetTableDataBinding.Table">
      <summary>
        <para>Gets the worksheet table associated with the current WorksheetTableDataBinding instance.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Table"/> object that is a table associated with a data source.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetThumbnailOptions">
      <summary>
        <para>Contains options used to generate a thumbnail from a worksheet.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WorksheetThumbnailOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Spreadsheet.WorksheetThumbnailOptions"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetThumbnailOptions.ColumnOffset">
      <summary>
        <para>Specifies the index of the column from which to start thumbnail generation.</para>
      </summary>
      <value>A zero-based index of the target column in the worksheet. The default value is 0.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetThumbnailOptions.RowOffset">
      <summary>
        <para>Specifies the index of the row from which to start thumbnail generation.</para>
      </summary>
      <value>A zero-based index of the target row in the worksheet. The default value is 0.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetView">
      <summary>
        <para>Contains display and print settings for a worksheet.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetView.GridlineColor">
      <summary>
        <para>Specifies the color of worksheet gridlines.</para>
      </summary>
      <value>The gridline color.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetView.ShowFormulas">
      <summary>
        <para>Gets or sets whether to display the formula in each cell instead of the formula result.</para>
      </summary>
      <value>true, to display formulas; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetView.ShowGridlines">
      <summary>
        <para>Gets or sets whether worksheet gridlines are visible.</para>
      </summary>
      <value>true to display worksheet gridlines; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetView.ShowHeadings">
      <summary>
        <para>Gets or sets whether row and column headers are visible on the worksheet.</para>
      </summary>
      <value>true, to display row and column headers; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetView.ShowOutlineSymbols">
      <summary>
        <para>Gets or sets a value indicating whether to show outline symbols and bars for a worksheet with grouped data.</para>
      </summary>
      <value>true, to display outline symbols and bars; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetView.ShowRightToLeft">
      <summary>
        <para>Gets or sets a value indicating whether the worksheet should be displayed from right to left.</para>
      </summary>
      <value>true, to display the worksheet from right to left; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetView.ShowZeroValues">
      <summary>
        <para>Gets or sets a value indicating whether to display “0” (zero) in cells that have zero values.</para>
      </summary>
      <value>true, to display zero values on a worksheet; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WorksheetView.ViewType">
      <summary>
        <para>Gets or sets a view to display worksheet content.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.WorksheetViewType"/> enumeration member.</value>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetViewType">
      <summary>
        <para>Lists view types that can be used to display worksheets.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetViewType.Normal">
      <summary>
        <para>Worksheet content is displayed in the Normal view.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetViewType.PageBreakPreview">
      <summary>
        <para>Worksheet content is displayed in the Page Break Preview view.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetViewType.PageLayout">
      <summary>
        <para>Worksheet content is displayed in the Page Layout view.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetVisibilityType">
      <summary>
        <para>Contains the values that specify worksheet visibility.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetVisibilityType.Hidden">
      <summary>
        <para>A worksheet is hidden.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetVisibilityType.VeryHidden">
      <summary>
        <para>A worksheet is hidden and cannot be unhidden via the user interface.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetVisibilityType.Visible">
      <summary>
        <para>A worksheet is visible.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.WorksheetZoomMode">
      <summary>
        <para>Lists values used to specify a zoom mode for a worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetZoomMode.ActiveView">
      <summary>
        <para>Specifies that the zoom level defined by the <see cref="P:DevExpress.Spreadsheet.SheetView.Zoom"/> property is applied only to the worksheet’s active view.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Spreadsheet.WorksheetZoomMode.AllViews">
      <summary>
        <para>Specifies that the zoom level defined by the <see cref="P:DevExpress.Spreadsheet.SheetView.Zoom"/> property is applied to all worksheet views.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Spreadsheet.WriteProtectionOptions">
      <summary>
        <para>Contains write-protection options for a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Spreadsheet.WriteProtectionOptions.CheckPassword(System.String)">
      <summary>
        <para>Checks whether the specified password is the same as the password used to write-protect a workbook.</para>
      </summary>
      <param name="password">The password to check.</param>
      <returns>true if the password is valid; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Spreadsheet.WriteProtectionOptions.ClearPassword">
      <summary>
        <para>Clears the password used to modify a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Spreadsheet.WriteProtectionOptions.IsPasswordProtected">
      <summary>
        <para>Indicates whether a workbook is write-protected.</para>
      </summary>
      <value>true if the document requires a password for write access; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Spreadsheet.WriteProtectionOptions.ReadOnlyRecommended">
      <summary>
        <para>Returns or specifies whether the author of the workbook recommended that it be opened as read-only.</para>
      </summary>
      <value>true if the author recommended the document to be opened as read-only; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Spreadsheet.WriteProtectionOptions.SetPassword(System.String)">
      <summary>
        <para>Specifies the password used to modify a workbook.</para>
      </summary>
      <param name="password">The password used to write-protect the document.</param>
    </member>
    <member name="P:DevExpress.Spreadsheet.WriteProtectionOptions.UserName">
      <summary>
        <para>Returns or specifies the name of the user who write-protected the workbook.</para>
      </summary>
      <value>The user’s name.</value>
    </member>
    <member name="N:DevExpress.XtraSpreadsheet">
      <summary>
        <para>Contains the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> class that provides the main functionality of the XtraSpreadsheet Suite.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.AfterDropRangeEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.AfterDropRange event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.AfterDropRangeEventArgs.OperationType">
      <summary>
        <para>Gets the type of the drag-and-drop operation a user performed over a cell range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DragDropOperationType"/> enumeration value that specifies whether a user moved or copied the source range to a new location.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.AfterDropRangeEventArgs.SourceRange">
      <summary>
        <para>Returns a cell range a user moved or copied to a new location.</para>
      </summary>
      <value>The source cell range.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.AfterDropRangeEventArgs.TargetRange">
      <summary>
        <para>Returns a cell range into which data was pasted.</para>
      </summary>
      <value>The destination cell range.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.AfterDropRangeEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl’s AfterDropRange event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.AfterFillRangeEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.AfterFillRange event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.AfterFillRangeEventArgs.OperationType">
      <summary>
        <para>Gets the type of the fill operation a user performed over a cell range.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.FillOperationType"/> enumeration value that specifies whether a user copied source cells or filled cells with data based on values in the source range.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.AfterFillRangeEventArgs.SourceRange">
      <summary>
        <para>Returns a cell range based on which a user filled cells in the target range.</para>
      </summary>
      <value>The source cell range.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.AfterFillRangeEventArgs.TargetRange">
      <summary>
        <para>Returns a cell range that a user filled with data.</para>
      </summary>
      <value>The resulting cell range that also includes the source range.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.AfterFillRangeEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl’s AfterFillRange event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.AfterGroupProcessingEventArgs">
      <summary>
        <para>Contains data for the SpreadsheetControl.AfterGroupProcessing event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.AfterGroupProcessingEventArgs.IsRowGroup">
      <summary>
        <para>Indicates whether the event is raised for row groups.</para>
      </summary>
      <value>true if a user expanded or collapsed row groups; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.AfterGroupProcessingEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl.AfterGroupProcessing event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.AfterOutlineButtonClickEventArgs">
      <summary>
        <para>Contains data for the SpreadsheetControl.AfterOutlineButtonClick event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.AfterOutlineButtonClickEventArgs.IsRowOutline">
      <summary>
        <para>Indicates whether a user clicked the outline button for row groups.</para>
      </summary>
      <value>true if a user clicked the outline button for rows; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.AfterOutlineButtonClickEventArgs.Level">
      <summary>
        <para>Returns the group level that corresponds to the outline button a user clicked.</para>
      </summary>
      <value>The group level.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.AfterOutlineButtonClickEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl.AfterOutlineButtonClick event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeDragRangeEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.BeforeDragRange event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeDragRangeEventArgs.Cancel">
      <summary>
        <para>Gets or sets whether to cancel the drag-and-drop or fill operation for the selected cell range.</para>
      </summary>
      <value>true, to cancel the current operation; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeDragRangeEventArgs.DataTransferMode">
      <summary>
        <para>Returns the operation type a user performs on the selected cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DataTransferMode"/> enumeration member that specifies whether a user is about to drag and drop the selected range or fill values into other cells with the fill handle.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeDragRangeEventArgs.Range">
      <summary>
        <para>Returns a cell range a user starts to drag.</para>
      </summary>
      <value>A cell range that a user is about to drag and drop or extend.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeDragRangeEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl’s BeforeDragRange event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeDropRangeEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.BeforeDropRange event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeDropRangeEventArgs.Cancel">
      <summary>
        <para>Gets or sets whether to cancel the drag-and-drop operation for the selected cell range.</para>
      </summary>
      <value>true, to cancel the operation; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeDropRangeEventArgs.OperationType">
      <summary>
        <para>Gets the drag-and-drop operation type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DragDropOperationType"/> enumeration value that specifies whether a user moves or copies the source range to a new location.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeDropRangeEventArgs.SourceRange">
      <summary>
        <para>Returns a cell range that a user is about to move or copy to a new location.</para>
      </summary>
      <value>The source cell range.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeDropRangeEventArgs.TargetRange">
      <summary>
        <para>Returns a cell range into which a user is about to paste data.</para>
      </summary>
      <value>The destination cell range.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeDropRangeEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl’s BeforeDropRange event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeFillRangeEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.BeforeFillRange event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeFillRangeEventArgs.Cancel">
      <summary>
        <para>Gets or sets whether to cancel the fill operation for the current cell range.</para>
      </summary>
      <value>true, to cancel the operation; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeFillRangeEventArgs.OperationType">
      <summary>
        <para>Gets the fill operation type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.FillOperationType"/> enumeration value that specifies whether a user copies source cells or fills the adjacent cells with data based on values in the source range.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeFillRangeEventArgs.SourceRange">
      <summary>
        <para>Returns a cell range based on which a user fills the adjacent cells.</para>
      </summary>
      <value>The source cell range.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeFillRangeEventArgs.TargetRange">
      <summary>
        <para>Returns a cell range that a user fills with data.</para>
      </summary>
      <value>The destination cell range that also includes the source range.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeFillRangeEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl’s BeforeFillRange event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeGroupProcessingEventArgs">
      <summary>
        <para>Contains data for the SpreadsheetControl.BeforeGroupProcessing event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeGroupProcessingEventArgs.IsRowGroup">
      <summary>
        <para>Indicates whether the event is raised for row groups.</para>
      </summary>
      <value>true if a user starts to expand or collapse row groups; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeGroupProcessingEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl.BeforeGroupProcessing event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeOutlineButtonClickEventArgs">
      <summary>
        <para>Contains data for the SpreadsheetControl.BeforeOutlineButtonClick event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeOutlineButtonClickEventArgs.IsRowOutline">
      <summary>
        <para>Indicates whether a user clicks the outline button for row groups.</para>
      </summary>
      <value>true if a user clicks the outline button for rows; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.BeforeOutlineButtonClickEventArgs.Level">
      <summary>
        <para>Returns the group level that corresponds to the outline button a user clicks.</para>
      </summary>
      <value>The group level.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.BeforeOutlineButtonClickEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl.BeforeOutlineButtonClick event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.CellBeginEditEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellBeginEdit"/> event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellCancelEditEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.CellCancelEditEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellCancelEdit"/> event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellCancelEditEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.CellEditorCommitMode">
      <summary>
        <para>Lists values used to specify when the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellValueChanged"/> event should be raised after a cell value has been edited via the cell editor and committed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorCommitMode.Always">
      <summary>
        <para>The <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellValueChanged"/> event is raised for each cell whose value has been edited via the cell editor and committed (even if a new cell value is the same as the value before editing).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorCommitMode.Auto">
      <summary>
        <para>Defined automatically when the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellValueChanged"/> event should be raised for cells whose values have been edited via the cell editor and committed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorCommitMode.ChangedOnly">
      <summary>
        <para>The <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellValueChanged"/> event is raised for each cell whose value has been changed via the cell editor and committed. If a new cell value is the same as the value before editing, the event does not occur.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.CellEditorEnterValueMode">
      <summary>
        <para>Lists values that specify how to commit a cell value when closing the cell editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorEnterValueMode.ActiveCell">
      <summary>
        <para>Commits a value entered via the cell editor to an active cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorEnterValueMode.ArrayFormula">
      <summary>
        <para>Commits a formula entered via the cell editor as an array formula to an active cell or selected cells.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorEnterValueMode.Cancel">
      <summary>
        <para>Cancels any changes to a cell value made in the cell editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorEnterValueMode.Default">
      <summary>
        <para>Defines the same behavior as the <see cref="F:DevExpress.XtraSpreadsheet.CellEditorEnterValueMode.ActiveCell"/> mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorEnterValueMode.SelectedCells">
      <summary>
        <para>Commits a value entered via the cell editor to all currently selected cells.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.CellEditorMode">
      <summary>
        <para>Lists modes that specify the cell editor and cursor behavior.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorMode.Edit">
      <summary>
        <para>Edit directly in a cell. The cursor moves within the cell text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorMode.EditInFormulaBar">
      <summary>
        <para>Edit in a formula bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellEditorMode.Enter">
      <summary>
        <para>Edit directly in a cell. The cursor navigates cells.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.CellEndEditEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellEndEdit"/> event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellCancelEditEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.CellValueChangedAction">
      <summary>
        <para>Lists actions which changed the cell value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellValueChangedAction.API">
      <summary>
        <para>Cell value has been modified programmatically.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellValueChangedAction.Edit">
      <summary>
        <para>End-user has modified the cell value using worksheet editors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellValueChangedAction.Paste">
      <summary>
        <para>New value has been pasted into the cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.CellValueChangedAction.UndoRedo">
      <summary>
        <para>Cell value has been changed by executing the undo or redo command.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.CellValueChangedEventHandler">
      <summary>
        <para>A method that will handle the CellValueChanged event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.ClipboardPasteFormat">
      <summary>
        <para>Lists clipboard formats the Spreadsheet control supports.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.Biff12">
      <summary>
        <para>Microsoft Excel 2007 - 2010 binary file format (BIFF12).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.Biff5">
      <summary>
        <para>Microsoft Excel 5.0/95 binary file format (BIFF5).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.Biff8">
      <summary>
        <para>Microsoft Excel 97 - 2003 binary file format (BIFF8).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.Csv">
      <summary>
        <para>Comma-delimited text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.Default">
      <summary>
        <para>The Spreadsheet detects the appropriate format to paste clipboard data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.DrawingObject">
      <summary>
        <para>A drawing object (shape or chart).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.Image">
      <summary>
        <para>A raster image.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.ImagesFromFiles">
      <summary>
        <para>A list of file paths to inserted images.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.Metafile">
      <summary>
        <para>An image in Windows Metafile Format (WMF) or Windows Enhanced Metafile Format (EMF).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ClipboardPasteFormat.TabDelimited">
      <summary>
        <para>Tab-delimited text.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DataBindingWarningEventArgs">
      <summary>
        <para>Provides data for the DataBindingWarning event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.DataBindingWarningEventArgs.#ctor(DevExpress.XtraSpreadsheet.DataBindingWarningType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.DataBindingWarningEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="warningType">A <see cref="T:DevExpress.XtraSpreadsheet.DataBindingWarningType"/> enumeration value specifying the type of the data binding warning dialog to be invoked.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.DataBindingWarningEventArgs.WarningType">
      <summary>
        <para>Gets the type of the data binding warning dialog to be invoked.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DataBindingWarningType"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DataBindingWarningEventHandler">
      <summary>
        <para>A method that will handle the DataBindingWarning event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.DataBindingWarningEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DataBindingWarningType">
      <summary>
        <para>Lists values used to specify the type of data binding warning messages.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.BindingRangeHasNoHeader">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “The binding range has no header. Extend the range to include a top row which will be the table header.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.CannotAddOrRemoveColumns">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “Cannot add/remove a column to/from a data source range.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.CannotDeleteTheOnlyRow">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “Cannot remove all rows from a data source range. It must contain at least one row.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.CannotInsertRows">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “Cannot add a row(s) to a data source range.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.CannotMergeCells">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “Cannot merge cells that belong to a data source range.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.CannotModifyFormulas">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “Cannot change data in the selected cell range. It contains formulas that belong to a data source range and cannot be modified.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.CannotMoveRangeToOtherSheet">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “The selected cell range is associated with a data source and cannot be moved to another worksheet.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.CannotRemoveRows">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “Cannot remove a row(s) from a data source range.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.CannotSortBindingRange">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “Cannot sort the selected data. It belongs to a data source range for which sorting is not allowed.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.MissingTableHeader">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “The table must have a header because the binding range has a header.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.NonEditableDataSource">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “A cell range you’re trying to modify is bound to a data source that does not allow editing.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.ReadOnlyDataSourceField">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “A cell range you’re trying to modify is bound to the read-only data source field.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.SortedRangeDoesNotContainAllColumns">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “The specified cell range cannot be sorted since it does not contain all columns of the data-bound range.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.TableAndDataSourceColumnCountMismatch">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “The number of columns in the table is less than the number of columns in the data source.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.TableAndDataSourceRowCountMismatch">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “The number of rows in the table and in the data source do not match.”</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataBindingWarningType.TableWithMultipleDataBindings">
      <summary>
        <para>Specifies the data binding warning dialog with the following message: “A table cannot contain multiple data bindings.”</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DataTransferMode">
      <summary>
        <para>Lists values used to determine the operation a user performs on the selected cell range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataTransferMode.DragDrop">
      <summary>
        <para>Specifies that a user drags and drops a cell range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DataTransferMode.Fill">
      <summary>
        <para>Specifies that a user drags the fill handle to automatically populate a cell range with data.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DefinedNameDeletingEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.DefinedNameDeleting event.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DefinedNameDeletingEventHandler">
      <summary>
        <para>A method that will handle the DefinedNameDeleting event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.DefinedNameDeletingEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DefinedNameEditingEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.DefinedNameEditing event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.DefinedNameEditingEventArgs.OriginalName">
      <summary>
        <para>Gets the name of the Defined Name before it is edited.</para>
      </summary>
      <value>A string that is the <see cref="P:DevExpress.Spreadsheet.DefinedName.Name"/>.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DefinedNameEditingEventHandler">
      <summary>
        <para>A method that will handle the DefinedNameEditing event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.DefinedNameEditingEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DefinedNameEventArgsBase">
      <summary>
        <para>Base class for classes that provides data for the DefinedNameDeleting and DefinedNameEditing events of the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.DefinedNameEventArgsBase.Comment">
      <summary>
        <para>Gets the additional information about the current Defined Name.</para>
      </summary>
      <value>A string that corresponds to the <see cref="P:DevExpress.Spreadsheet.DefinedName.Comment"/>.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.DefinedNameEventArgsBase.Name">
      <summary>
        <para>Gets the name of the current Defined Name.</para>
      </summary>
      <value>A string that is the <see cref="P:DevExpress.Spreadsheet.DefinedName.Name"/>.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.DefinedNameEventArgsBase.Reference">
      <summary>
        <para>Gets the reference to a cell or cell range, formula or constant associated with the Defined Name.</para>
      </summary>
      <value>A string that corresponds to the <see cref="P:DevExpress.Spreadsheet.DefinedName.RefersTo"/> property value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.DefinedNameEventArgsBase.Scope">
      <summary>
        <para>Gets the scope (individual worksheet or entire workbook) where a Defined Name is recognized and can be used without qualification.</para>
      </summary>
      <value>A string that identifies the defined name scope.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.DefinedNameEventArgsBase.ScopeIndex">
      <summary>
        <para>Gets the index identifying the scope of the Defined Name.</para>
      </summary>
      <value>An integer that equals 0 if the scope is the entire workbook or equals the one-based index of a worksheet in a workbook - the <see cref="P:DevExpress.Spreadsheet.Worksheet.Index"/> value +1.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DocumentCapability">
      <summary>
        <para>Lists values used to specify the availability of a certain functionality in the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DocumentCapability.Default">
      <summary>
        <para>The value is determined by the current setting. The default value is automatically set if it is not explicitly specified.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DocumentCapability.Disabled">
      <summary>
        <para>The feature is not allowed and the corresponding commands are shown disabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DocumentCapability.Enabled">
      <summary>
        <para>The feature is available and the corresponding commands are shown enabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DocumentCapability.Hidden">
      <summary>
        <para>The feature is not available and the corresponding commands are hidden.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DocumentPropertiesChangedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.DocumentPropertiesChanged event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.DocumentPropertiesChangedEventArgs.BuiltInPropertiesChanged">
      <summary>
        <para>Indicates whether one of the built-in <see cref="T:DevExpress.Spreadsheet.DocumentProperties"/> is changed.</para>
      </summary>
      <value>true, if any built-in document property is changed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.DocumentPropertiesChangedEventArgs.CustomPropertiesChanged">
      <summary>
        <para>Indicates whether one of the custom <see cref="T:DevExpress.Spreadsheet.DocumentProperties"/> is changed.</para>
      </summary>
      <value>true if any custom document property is changed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DocumentPropertiesChangedEventHandler">
      <summary>
        <para>A method that will handle the DocumentPropertiesChanged event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.DocumentPropertiesChangedEventArgs"/> object which contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.DragDropOperationType">
      <summary>
        <para>Lists values used to specify the drag-and-drop operation type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DragDropOperationType.CopyCells">
      <summary>
        <para>Specifies that the source cell range is copied to the target location.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.DragDropOperationType.MoveCells">
      <summary>
        <para>Specifies that the source cell range is moved to the target location.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraSpreadsheet.Export">
      <summary>
        <para>Contains classes specific for spreadsheet document export.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions">
      <summary>
        <para>Contains options used for saving (exporting) a document in CSV format.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.CellReferenceStyle">
      <summary>
        <para>Gets or sets the cell reference style used in a source document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CellReferenceStyle"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.Culture">
      <summary>
        <para>Gets or sets the culture information used to format strings of data.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object containing culture-specific settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.DiscardTrailingEmptyCells">
      <summary>
        <para>Gets or sets whether empty trailing cells in each row should not be exported.</para>
      </summary>
      <value>true, to discard trailing cells in each row; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.FormulaExportMode">
      <summary>
        <para>Gets or sets how to export cells containing formulas.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.FormulaExportMode"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.NewlineAfterLastRow">
      <summary>
        <para>Gets or sets whether the newline character sequence is inserted after the last row of the resulting text.</para>
      </summary>
      <value>true, to insert newline after the last row in the exported text; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.NewlineType">
      <summary>
        <para>Gets or sets a character sequence used to define a new line.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.NewlineType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.QuotationMode">
      <summary>
        <para>Gets or sets a value indicating how to quote text values in the exported CSV document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.TextQuotationMode"/> enumeration value that specifies how to quote text fields in the document.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.Range">
      <summary>
        <para>Gets or sets the worksheet range for export.</para>
      </summary>
      <value>A string that specifies the range to export.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.RepeatMergedCellValues">
      <summary>
        <para>Gets or sets a value indicating whether to repeat a merged cell value for each cell in the merged range when exporting the document.</para>
      </summary>
      <value>true, to repeat values of merged cells; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.ShiftTopLeft">
      <summary>
        <para>Gets or sets whether to skip the top left empty cells when exporting the worksheet.</para>
      </summary>
      <value>true to skip the top left empty cells; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.SkipHiddenColumns">
      <summary>
        <para>Specifies whether to skip hidden columns when a document is exported to CSV.</para>
      </summary>
      <value>true to prevent export of hidden columns; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.SkipHiddenRows">
      <summary>
        <para>Specifies whether to skip hidden rows when a document is exported to CSV.</para>
      </summary>
      <value>true to prevent export of hidden rows; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.TextQualifier">
      <summary>
        <para>Gets or sets the character that encloses values in the resulting text.</para>
      </summary>
      <value>A <see cref="T:System.Char"/> that is the character used as the text qualifier.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.UseCellNumberFormat">
      <summary>
        <para>Gets or sets whether to use the cell <see cref="P:DevExpress.Spreadsheet.Formatting.NumberFormat"/> property to convert a cell numeric value to a string.</para>
      </summary>
      <value>true to use cell formatting to convert a cell value to a string; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.ValueSeparator">
      <summary>
        <para>Gets or sets a character used to separate values in the resulting text.</para>
      </summary>
      <value>A <see cref="T:System.Char"/> object that is the character used as a value separator.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.Worksheet">
      <summary>
        <para>Gets or sets a destination worksheet to which text data are exported.</para>
      </summary>
      <value>A string that is the worksheet name.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions.WritePreamble">
      <summary>
        <para>Gets or sets whether to write a prefix that is the sequence of bytes that specifies the encoding used.</para>
      </summary>
      <value>true to write a byte array containing a sequence of bytes that specifies the encoding used; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.CustomFunctionExportMode">
      <summary>
        <para>Lists values that specify how to export custom functions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.CustomFunctionExportMode.CalculatedValue">
      <summary>
        <para>Export values calculated from custom functions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.CustomFunctionExportMode.Function">
      <summary>
        <para>Export custom function definitions.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.DocumentExporterOptions">
      <summary>
        <para>Represents the base class for options used for saving (exporting) documents in different formats.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.DocumentExporterOptions.CopyFrom(DevExpress.Office.Export.IExporterOptions)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.DocumentExporterOptions"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Office.Export.IExporterOptions"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.DocumentExporterOptions.TargetUri">
      <summary>
        <para>Gets or sets the URI of the document being exported.</para>
      </summary>
      <value>A string representing the document URI.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.FormulaExportMode">
      <summary>
        <para>Lists possible ways to export a cell formula.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.FormulaExportMode.CalculatedValue">
      <summary>
        <para>Calculates the formula before export and exports the result.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.FormulaExportMode.Formula">
      <summary>
        <para>Exports the formula itself as a string.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraSpreadsheet.Export.Html">
      <summary>
        <para>Contains classes and enumerations specific to HTML document export.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.Html.CssPropertiesExportType">
      <summary>
        <para>Lists possible ways to export style information.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.Html.CssPropertiesExportType.Inline">
      <summary>
        <para>CSS is embedded by placing it as an attribute to an HTML tag.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.Html.CssPropertiesExportType.Link">
      <summary>
        <para>CSS is included as a link to an external CSS-file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.Html.CssPropertiesExportType.Style">
      <summary>
        <para>CSS is included in a &#60;STYLE&#62; tag.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.Html.ExportRootTag">
      <summary>
        <para>Lists root HTML tags available for export.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.Html.ExportRootTag.Body">
      <summary>
        <para>Specifies the &#60;BODY&#62; tag as the root tag for export.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.Html.ExportRootTag.Html">
      <summary>
        <para>Specifies the &#60;HTML&#62; tag as the root tag for export.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.Html.HtmlFontUnit">
      <summary>
        <para>Lists measurement units allowed to specify font size.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.Html.HtmlFontUnit.Pixel">
      <summary>
        <para>Font size specified in pixels.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.Html.HtmlFontUnit.Point">
      <summary>
        <para>Font size specified in points.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.Html.UriExportType">
      <summary>
        <para>Lists types of paths used in exported documents to specify links to external content.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.Html.UriExportType.Absolute">
      <summary>
        <para>The exported document contains absolute paths to external content.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.Html.UriExportType.Relative">
      <summary>
        <para>The exported document contains relative paths to external content.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions">
      <summary>
        <para>Contains options for exporting the document in HTML format.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.AnchorImagesToPage">
      <summary>
        <para>Gets or sets a value indicating whether to place images on an HTML page at absolute positions relative to the page’s top-left corner.</para>
      </summary>
      <value>true, to anchor images to a page; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.ClipCellContent">
      <summary>
        <para>Gets or sets a value indicating whether to clip the cell content that overflows the cell bounds.</para>
      </summary>
      <value>true, to clip the cell content that goes beyond the cell bounds; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.CopyFrom(DevExpress.Office.Export.IExporterOptions)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.Office.Export.IExporterOptions"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.CssPropertiesExportType">
      <summary>
        <para>Gets or sets how the style sheets properties are exported.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraRichEdit.Export.Html.CssPropertiesExportType"/> enumeration value specifying the export type.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.EmbedImages">
      <summary>
        <para>Specifies whether images are embedded in an HTML document.</para>
      </summary>
      <value>true, to embed images in a page; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.Encoding">
      <summary>
        <para>Gets or sets the character encoding used in an exported document.</para>
      </summary>
      <value>A <see cref="T:System.Text.Encoding"/> class representing the character encoding.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.ExportComments">
      <summary>
        <para>Gets or sets whether to include comments in HTML export output.</para>
      </summary>
      <value>true, to export comments in HTML; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.ExportGridlines">
      <summary>
        <para>Gets or sets whether to include cell gridlines in HTML export output.</para>
      </summary>
      <value>true, to export gridlines in HTML; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.ExportImages">
      <summary>
        <para>Gets or sets whether to include images in HTML export output.</para>
      </summary>
      <value>True to export images in HTML; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.ExportRootTag">
      <summary>
        <para>Gets or sets the root tag of the HTML document to start the export.</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Export.Html.ExportRootTag"/> enumeration value specifying the HTML document tag.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.FontUnit">
      <summary>
        <para>Gets or sets the measurement unit to specify font size when exporting to HTML.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraRichEdit.Export.Html.HtmlFontUnit"/> enumeration member specifying the unit for the font size.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.OverrideImageResolution">
      <summary>
        <para>Gets or sets the graphics resolution used to save images when a document is exported in HTML format.</para>
      </summary>
      <value>An integer that specifies image resolution. By default, it equals 96 dpi or the current System.Drawing.Graphics.DpiX value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.Range">
      <summary>
        <para>Gets or sets the worksheet range to be exported to an HTML file.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that represents the exported range.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.SheetIndex">
      <summary>
        <para>Gets or sets the index of the worksheet to be exported to an HTML file.</para>
      </summary>
      <value>An integer value that is the index of the worksheet to be exported to HTML.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.TabMarker">
      <summary>
        <para>Gets or sets a character or a string used to replace a tab symbol when exporting a document in HTML format.</para>
      </summary>
      <value>A string replacement for the tab symbol.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.UnderlineTocHyperlinks">
      <summary>
        <para>Gets or sets whether Table of Contents entries are underlined in a document exported to HTML format.</para>
      </summary>
      <value>true, to set the underline attribute for the TOC entry font; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.UriExportType">
      <summary>
        <para>Specifies how the links to external content are saved in the exported document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.Html.UriExportType"/> enumeration member specifying an absolute or relative path.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.UseColumnGroupTag">
      <summary>
        <para>Gets or sets a value indicating whether the column width should be exported to HTML using the &lt;colgroup&gt; tag.</para>
      </summary>
      <value>true, to specify the column width in the &lt;colgroup&gt; tag; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.UseCssForWidthAndHeight">
      <summary>
        <para>Gets or sets a value indicating whether to use the CSS style attribute to specify the width and height of table elements.</para>
      </summary>
      <value>true, to use CSS; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.HtmlDocumentExporterOptions.UseSpanTagForIndentation">
      <summary>
        <para>Gets or sets a value indicating whether the indent value should be exported to HTML using the &lt;span&gt; tag.</para>
      </summary>
      <value>true, to use the &lt;span&gt; tag to export the indent value of the cell content; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.OpenXmlDocumentExporterOptions">
      <summary>
        <para>Contains options used for saving (exporting) a document in OpenXML format (aka MS Excel 2007 default format, .xlsx).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.OpenXmlDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.OpenXmlDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.PdfDocumentExporterOptions">
      <summary>
        <para>Contains options used to save a document as a PDF.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.PdfDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.PdfDocumentExporterOptions"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.TextQuotationMode">
      <summary>
        <para>Lists values used to specify how to quote text fields in the exported CSV or TXT file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.TextQuotationMode.Always">
      <summary>
        <para>Specifies that all text fields should be enclosed in quotation marks.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.TextQuotationMode.Auto">
      <summary>
        <para>Specifies that a text field should be quoted only if it contains special characters (such as a delimiter, quotation mark, or newline).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.TextQuotationMode.Never">
      <summary>
        <para>Specifies that text fields should never be enclosed in quotation marks.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions">
      <summary>
        <para>Contains options used for saving (exporting) a document in text format.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.CellReferenceStyle">
      <summary>
        <para>Gets or sets the cell reference style used in a source document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CellReferenceStyle"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.Culture">
      <summary>
        <para>Gets or sets the culture information used to format strings of data.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object containing culture-specific settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.DiscardTrailingEmptyCells">
      <summary>
        <para>Gets or sets whether empty trailing cells in each row should not be exported.</para>
      </summary>
      <value>true, to discard trailing cells in each row; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.FormulaExportMode">
      <summary>
        <para>Gets or sets how to export cells containing formulas.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.FormulaExportMode"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.NewlineAfterLastRow">
      <summary>
        <para>Gets or sets whether the newline character sequence is inserted after the last row of the resulting text.</para>
      </summary>
      <value>true, to insert newline after the last row in the exported text; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.NewlineType">
      <summary>
        <para>Gets or sets a character sequence used to define a new line.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.NewlineType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.QuotationMode">
      <summary>
        <para>Gets or sets a value indicating how to quote text values in the exported document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.TextQuotationMode"/> enumeration value that specifies how to quote text fields in the document.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.Range">
      <summary>
        <para>Gets or sets the worksheet range for export.</para>
      </summary>
      <value>A string that specifies the range to export.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.RepeatMergedCellValues">
      <summary>
        <para>Gets or sets a value indicating whether to repeat a merged cell value for each cell in the merged range when exporting the document.</para>
      </summary>
      <value>true, to repeat values of merged cells; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.ShiftTopLeft">
      <summary>
        <para>Gets or sets whether to skip the top left empty cells when exporting the worksheet.</para>
      </summary>
      <value>true to skip the top left empty cells; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.SkipHiddenColumns">
      <summary>
        <para>Specifies whether to skip hidden columns when a document is exported to TXT.</para>
      </summary>
      <value>true to prevent export of hidden columns; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.SkipHiddenRows">
      <summary>
        <para>Specifies whether to skip hidden rows when a document is exported to TXT.</para>
      </summary>
      <value>true to prevent export of hidden rows; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.TextDefaultValueSeparator">
      <summary>
        <para>A tab character used to separate values in the resulting text.</para>
      </summary>
      <value>A field separator.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.TextQualifier">
      <summary>
        <para>Gets or sets the character that encloses values in the source text.</para>
      </summary>
      <value>A <see cref="T:System.Char"/> that is the character used as the text qualifier.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.UseCellNumberFormat">
      <summary>
        <para>Gets or sets whether to use the cell <see cref="P:DevExpress.Spreadsheet.Formatting.NumberFormat"/> property to convert a cell numeric value to a string.</para>
      </summary>
      <value>true to use cell formatting to convert a cell value to a string; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.ValueSeparator">
      <summary>
        <para>Gets or sets a character used to separate values in the resulting text.</para>
      </summary>
      <value>A <see cref="T:System.Char"/> object that is the character used as a value separator.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.Worksheet">
      <summary>
        <para>Gets or sets a destination worksheet to which text data are exported.</para>
      </summary>
      <value>A string that is the worksheet name.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions.WritePreamble">
      <summary>
        <para>Gets or sets whether to write a prefix that is the sequence of bytes that specifies the encoding used.</para>
      </summary>
      <value>true, to write a byte array containing a sequence of bytes that specifies the encoding used; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions">
      <summary>
        <para>Contains options used for saving (exporting) workbooks.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Csv">
      <summary>
        <para>Provides access to options specific for export to CSV format.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.CsvDocumentExporterOptions"/> object containing export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.CustomFunctionExportMode">
      <summary>
        <para>Specifies whether custom function definitions should be replaced with the corresponding calculated values when exporting a document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.CustomFunctionExportMode"/> enumerator value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.OpenXml">
      <summary>
        <para>Provides access to options specific to exporting documents to OpenXML format (aka default MS Excel 2007 format or .xlsx).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Export.OpenXmlDocumentExporterOptions"/> object containing export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Pdf">
      <summary>
        <para>Provides access to options used to export documents as a PDF.</para>
      </summary>
      <value>An object that contains export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Txt">
      <summary>
        <para>Provides access to options specific to export to TXT format.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.TxtDocumentExporterOptions"/> object containing export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Xls">
      <summary>
        <para>Provides access to options specific to exporting documents to XLS format (MS Excel 97-2003 binary file format).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Export.XlsDocumentExporterOptions"/> object containing export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Xlsb">
      <summary>
        <para>Provides access to options used to export documents to the XLSB format (Microsoft Excel 2007-2010 binary file format).</para>
      </summary>
      <value>An object that contains export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Xlsm">
      <summary>
        <para>Provides access to options specific to exporting documents to OpenXML format with macro support.</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Export.XlsmDocumentExporterOptions"/> object containing export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Xlsx">
      <summary>
        <para>Provides access to options specific to exporting documents to OpenXML format (aka default MS Excel 2007 format or .xlsx).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Export.OpenXmlDocumentExporterOptions"/> object containing export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Xlt">
      <summary>
        <para>Provides access to options specific to exporting documents to XLT format (Microsoft Excel 97-2003 Template).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Export.XltDocumentExporterOptions"/> object containing export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Xltm">
      <summary>
        <para>Provides access to options specific to exporting documents to XLM format (MS Excel macro file format).</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Export.XltmDocumentExporterOptions"/> object containing export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.Xltx">
      <summary>
        <para>Provides access to options specific to exporting documents to XLTX format (MS Excel template).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Export.XltxDocumentExporterOptions"/> object containing export settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.WorkbookExportOptions.XmlSpreadsheet2003">
      <summary>
        <para>Provides access to options used to export documents as an XML Spreadsheet 2003 file.</para>
      </summary>
      <value>An object that contains export settings.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.XlsbDocumentExporterOptions">
      <summary>
        <para>Contains options used to save a document to the XLSB format (Microsoft Excel 2007-2010 binary file format).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.XlsbDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.XlsbDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.XlsbDocumentExporterOptions.CopyFrom(DevExpress.Office.Export.IExporterOptions)">
      <summary>
        <para>Copies the properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.XlsbDocumentExporterOptions"/> class.</para>
      </summary>
      <param name="value">The source object for copying.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.XlsDocumentExporterOptions">
      <summary>
        <para>Contains options used for saving (exporting) a document in XLS format (MS Excel 97-2003 binary file format).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.XlsDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.XlsDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.XlsDocumentExporterOptions.CopyFrom(DevExpress.Office.Export.IExporterOptions)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.XlsDocumentExporterOptions"/> class.</para>
      </summary>
      <param name="value">An  <see cref="T:DevExpress.Office.Export.IExporterOptions"/> descendant that is the source object for copying. If the object cannot be cast to the <see cref="T:DevExpress.XtraSpreadsheet.Export.XlsDocumentExporterOptions"/> type, the method does nothing.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Export.XlsDocumentExporterOptions.Password">
      <summary>
        <para>Gets or sets a password used to save a password encrypted binary .xls file. Use the <see cref="P:DevExpress.Spreadsheet.DocumentSettings.Encryption"/> property instead.</para>
      </summary>
      <value>A string that is the password.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.XlsmDocumentExporterOptions">
      <summary>
        <para>Contains options used for saving (exporting) a document in OpenXML format with macro support (.xlsm).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.XlsmDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.XlsmDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.XltDocumentExporterOptions">
      <summary>
        <para>Contains options used for saving (exporting) a document as a Microsoft Excel 97-2003 Template (.xlt).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.XltDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.XltDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.XltmDocumentExporterOptions">
      <summary>
        <para>Contains options used for saving (exporting) a document in OpenXML format as a macro-enabled template (.xltm).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.XltmDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.XltmDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.XltxDocumentExporterOptions">
      <summary>
        <para>Contains options used for saving (exporting) a document in OpenXML format as a template (.xltx).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.XltxDocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.XltxDocumentExporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Export.XmlSpreadsheet2003DocumentExporterOptions">
      <summary>
        <para>Contains options used to save a document as an XML Spreadsheet 2003 file.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Export.XmlSpreadsheet2003DocumentExporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Export.XmlSpreadsheet2003DocumentExporterOptions"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.FillOperationType">
      <summary>
        <para>Lists values used to specify how the target cell range is filled with data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.FillOperationType.CopyCells">
      <summary>
        <para>Cell values of the source range are copied and pasted into the target range.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.FillOperationType.FillSeries">
      <summary>
        <para>The target range is filled with data that follows a pattern or based on the source cells’ values.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.FormulaAutoCompleteSearchMode">
      <summary>
        <para>Lists values used to specify what items should appear in the Formula AutoComplete drop-down list.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.FormulaAutoCompleteSearchMode.Contains">
      <summary>
        <para>Specifies that the Formula AutoComplete list should display all items that contain the text typed into a cell.</para>
        <para />
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.FormulaAutoCompleteSearchMode.StartsWith">
      <summary>
        <para>Specifies that the Formula AutoComplete list should display all items that start with the text typed into a cell.</para>
        <para />
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.FunctionNameCulture">
      <summary>
        <para>Lists values that specify culture settings for function names in a worksheet.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.FunctionNameCulture.Auto">
      <summary>
        <para>Function names are retrieved from the satellite resource assemblies for the specified culture. If satellite assemblies are not found, the invariant (English) names are used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.FunctionNameCulture.English">
      <summary>
        <para>English function names are used regardless of the Workbook or Spreadsheet control’s culture settings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.FunctionNameCulture.Local">
      <summary>
        <para>Function names are retrieved from the satellite resource assemblies for the specified culture.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.GroupStateChangedEventArgs">
      <summary>
        <para>Contains data for the SpreadsheetControl.GroupStateChanged event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.GroupStateChangedEventArgs.Groups">
      <summary>
        <para>Returns information about groups affected by the expand/collapse operation.</para>
      </summary>
      <value>A list of objects that contain group information.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.GroupStateChangedEventArgs.IsExpanded">
      <summary>
        <para>Indicates whether groups are expanded.</para>
      </summary>
      <value>true if a user expanded groups; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.GroupStateChangedEventArgs.IsRowGroup">
      <summary>
        <para>Indicates whether a user expanded/collapsed row groups.</para>
      </summary>
      <value>true if a user expanded/collapsed row groups; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.GroupStateChangedEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl.GroupStateChanged event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.GroupStateChangingEventArgs">
      <summary>
        <para>Contains data for the SpreadsheetControl.GroupStateChanging event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.GroupStateChangingEventArgs.Groups">
      <summary>
        <para>Returns information about groups affected by the expand/collapse operation.</para>
      </summary>
      <value>A list of objects that contain group information.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.GroupStateChangingEventArgs.IsExpanding">
      <summary>
        <para>Indicates whether a user is going to expand groups.</para>
      </summary>
      <value>true if a user starts to expand groups; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.GroupStateChangingEventArgs.IsRowGroup">
      <summary>
        <para>Indicates whether a user starts to expand/collapse row groups.</para>
      </summary>
      <value>true if a user expands/collapses row groups; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.GroupStateChangingEventHandler">
      <summary>
        <para>A method that handles the SpreadsheetControl.GroupStateChanging event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.HyperlinkClick"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs.Alt">
      <summary>
        <para>Indicates whether the ALT key was pressed.</para>
      </summary>
      <value>true, if an ALT key was pressed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs.Control">
      <summary>
        <para>Indicates whether the CTRL key was pressed.</para>
      </summary>
      <value>true, if a CTRL key was pressed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs.Handled">
      <summary>
        <para>Gets or sets whether the default action associated with the hyperlink click is required.</para>
      </summary>
      <value>true, if no default action is necessary; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs.IsExternal">
      <summary>
        <para>Indicates whether the hyperlink points to a location outside the current workbook.</para>
      </summary>
      <value>true, if the hyperlink references a location outside the current workbook; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs.ModifierKeys">
      <summary>
        <para>Determines which modifier keys (SHIFT, CTRL, and ALT) were pressed to activate a hyperlink.</para>
      </summary>
      <value>The equivalent of the <see cref="T:System.Windows.Forms.Keys"/> enumeration. Represents one or more modifier keys that were pressed during the event.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs.Shift">
      <summary>
        <para>Indicates whether the SHIFT key was pressed.</para>
      </summary>
      <value>true, if a SHIFT key was pressed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs.TargetRange">
      <summary>
        <para>Gets the destination range referenced by a hyperlink.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellRange"/> object to which the hyperlink points.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs.TargetUri">
      <summary>
        <para>Gets the URI to which a hyperlink navigates.</para>
      </summary>
      <value>A string that specifies the target location of the hyperlink.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.HyperlinkClickEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.HyperlinkClick"/> event of the SpreadsheetControl.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl which raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.HyperlinkClickEventArgs"/> object which contains event data.</param>
    </member>
    <member name="N:DevExpress.XtraSpreadsheet.Import">
      <summary>
        <para>Contains classes specific for spreadsheet document import.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.CalculationModeOverride">
      <summary>
        <para>Lists values used to override the calculation mode for a loaded document.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CalculationModeOverride.Automatic">
      <summary>
        <para>Recalculates all formulas in the document each time a cell value, formula, or defined name changes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CalculationModeOverride.AutomaticExceptTables">
      <summary>
        <para>Recalculates all formulas except data tables.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CalculationModeOverride.Manual">
      <summary>
        <para>A user triggers calculations in the document.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CalculationModeOverride.None">
      <summary>
        <para>Uses the calculation mode specified in the document (this value is stored in the <see cref="P:DevExpress.Spreadsheet.CalculationOptions.Mode"/> property).</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.CellReferenceStyle">
      <summary>
        <para>Specifies the cell reference style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CellReferenceStyle.A1">
      <summary>
        <para>The cell range reference is in the A1 reference style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CellReferenceStyle.R1C1">
      <summary>
        <para>The cell range reference is in the R1C1 reference style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CellReferenceStyle.WorkbookDefined">
      <summary>
        <para>Use the reference style specified in the workbook (the <see cref="P:DevExpress.Spreadsheet.DocumentSettings.R1C1ReferenceStyle"/> property).</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.ColumnDataType">
      <summary>
        <para>Lists values used to define data formats of columns in the imported CSV or TXT file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.ColumnDataType.Boolean">
      <summary>
        <para>Specifies that column values should be interpreted as boolean values. If conversion fails, column values are treated as strings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.ColumnDataType.DateTime">
      <summary>
        <para>Specifies that column values should be interpreted as date and time values. If conversion fails, column values are treated as strings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.ColumnDataType.Error">
      <summary>
        <para>Specifies that column values should be interpreted as errors. If conversion fails, column values are treated as strings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.ColumnDataType.General">
      <summary>
        <para>Specifies that the type of column values should be recognized automatically based on the column content (numeric values will be converted to numbers, date values to dates, etc.).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.ColumnDataType.Numeric">
      <summary>
        <para>Specifies that column values should be interpreted as numbers. If conversion fails, column values are treated as strings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.ColumnDataType.Text">
      <summary>
        <para>Specifies that column values should be interpreted as text and corresponding cells will be formatted as text, so that anything you type into these cells will be treated as text including numbers.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.ColumnDataTypeCollection">
      <summary>
        <para>Stores data format settings for columns in the imported CSV or TXT file.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.ColumnDataTypeCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.ColumnDataTypeCollection"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.ColumnDataTypeCollection.Clear">
      <summary>
        <para>Removes all data format settings applied to the imported columns.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.ColumnDataTypeCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the data type of a specific column in the imported text document.</para>
      </summary>
      <param name="columnIndex">A zero-based index of the column in the imported document whose data type should be set or obtained.</param>
      <value>A  <see cref="T:DevExpress.XtraSpreadsheet.Import.ColumnDataType"/> enumeration value which defines the data type of the specified column.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions">
      <summary>
        <para>Contains options used for loading (importing) a document in CSV format.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.AutoDetectDelimiter">
      <summary>
        <para>Gets or sets a value indicating whether to automatically detect a character separating values in the CSV file.</para>
      </summary>
      <value>true, to autodetect a delimiter; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.AutoDetectEncoding">
      <summary>
        <para>Gets or sets whether the spreadsheet attempts to detect encoding of the text being imported.</para>
      </summary>
      <value>true, to detect the text encoding automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.CellIndexOutOfRangeStrategy">
      <summary>
        <para>Gets or sets the action performed when the spreadsheet cannot assign imported data to a cell.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CsvImportCellIndexStrategy"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.CellReferenceStyle">
      <summary>
        <para>Gets or sets the cell reference style used in a source document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CellReferenceStyle"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.ClearWorksheetBeforeImport">
      <summary>
        <para>Gets or sets whether to clear a worksheet before importing data.</para>
      </summary>
      <value>true, to delete worksheet content; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions"/> object which is a copy of the current object.</returns>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.ColumnTypes">
      <summary>
        <para>Provides access to the object which enables you to specify the data types for columns in an imported document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.ColumnDataTypeCollection"/> object that stores data format settings for columns in the imported document.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.Culture">
      <summary>
        <para>Gets or sets culture information used to parse imported data.</para>
      </summary>
      <value>An object that contains culture-specific settings. The default culture is invariant.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.Delimiter">
      <summary>
        <para>Gets or sets the character that separates values in the text.</para>
      </summary>
      <value>A <see cref="T:System.Char"/> that is the character used as delimiter.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.Encoding">
      <summary>
        <para>Gets or sets the encoding used to interpret characters in the loaded CSV document.</para>
      </summary>
      <value>A <see cref="T:System.Text.Encoding"/> object providing the conversion between certain encoding and Unicode.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.MaxRowCountToAutoDetectDelimiter">
      <summary>
        <para>Gets or sets the number of rows that should be analyzed to automatically detect the character separating values in the CSV file.</para>
      </summary>
      <value>An integer value that specifies the number of rows in the imported document to be read to autodetect a delimiter.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.MaxRowCountToImport">
      <summary>
        <para>Gets or sets the maximum number of rows which will be filled with imported data in the resulting worksheet.</para>
      </summary>
      <value>An integer that is the number of rows.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.NewlineType">
      <summary>
        <para>Gets or sets a character sequence used to define a new line.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.NewlineType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.StartCellToInsert">
      <summary>
        <para>Gets or sets the upper left cell of the imported data range.</para>
      </summary>
      <value>A string that is the cell reference.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.StartRowToImport">
      <summary>
        <para>Gets or sets the row index of imported data starting from which the data are placed in worksheet cells.</para>
      </summary>
      <value>An integer that is the zero-based row index.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.TextQualifier">
      <summary>
        <para>Gets or sets the character that encloses values in the source text.</para>
      </summary>
      <value>A <see cref="T:System.Char"/> that is the character used as the text qualifier.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.TrimBlanks">
      <summary>
        <para>Gets or sets whether to remove all leading and trailing white-space characters from each imported string value.</para>
      </summary>
      <value>true, to remove leading and trailing blanks; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.ValueTypeDetectMode">
      <summary>
        <para>Gets or sets the level of complexity to which the type of imported value is recognized.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CsvValueTypeDetectMode"/> enumeration value that characterizes the level of complexity.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions.Worksheet">
      <summary>
        <para>Gets or sets a destination worksheet into which data is imported.</para>
      </summary>
      <value>The worksheet name.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.CsvImportCellIndexStrategy">
      <summary>
        <para>Lists actions which can be performed when an incorrect column or row index is encountered during import.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CsvImportCellIndexStrategy.Stop">
      <summary>
        <para>Stop import.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CsvImportCellIndexStrategy.Throw">
      <summary>
        <para>Throws InvalidOperationException.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.CsvValueTypeDetectMode">
      <summary>
        <para>Lists levels of complexity used for identifying the type of value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CsvValueTypeDetectMode.Advanced">
      <summary>
        <para>Value types and formats are recognized.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CsvValueTypeDetectMode.Default">
      <summary>
        <para>Default mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CsvValueTypeDetectMode.None">
      <summary>
        <para>Values are treated as strings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.CsvValueTypeDetectMode.Simple">
      <summary>
        <para>Value types are recognized.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.NewlineType">
      <summary>
        <para>Lists character sequences used to represent a new line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.AnyCrLf">
      <summary>
        <para>For import - any of the 0x0A, 0x0D characters or their combinations. For export - 0x0D0A ASCII character sequence.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.Auto">
      <summary>
        <para>For import - the new line character sequence is determined automatically. For export - 0x0D0A ASCII character sequence.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.Cr">
      <summary>
        <para>CR, ‘\r’, 0x0D ASCII character.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.CrLf">
      <summary>
        <para>CR+LF, ‘\r\n’, 0x0D0A ASCII character sequence.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.FormFeed">
      <summary>
        <para>FF,  0x0C ASCII character.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.Lf">
      <summary>
        <para>LF, 0x0A ASCII character.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.LfCr">
      <summary>
        <para>LF+CR, 0x0A0D ASCII character sequence.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.MsDos">
      <summary>
        <para>CR+LF, ‘\r\n’, 0x0D0A ASCII character sequence.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.Unix">
      <summary>
        <para>LF, 0x0A ASCII character.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.NewlineType.VerticalTab">
      <summary>
        <para>Vertical Tab, 0x0B ASCII character.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions">
      <summary>
        <para>Contains options used for loading (importing) a document in OpenXML format (aka MS Excel 2007 default format, .xlsx).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions.CopyFrom(DevExpress.Office.Import.IImporterOptions)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions"/> class.</para>
      </summary>
      <param name="value">An object with the <see cref="T:DevExpress.Office.Import.IImporterOptions"/> interface representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions.EncryptionPassword">
      <summary>
        <para>Gets or sets a password used to unprotect a password-protected XLSX document during import. Use the <see cref="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Password"/> property instead.</para>
      </summary>
      <value>Specifies the password to unprotect a document.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions.OverrideCalculationMode">
      <summary>
        <para>Specifies how to change the calculation mode for a loaded document.</para>
      </summary>
      <value>An enumeration member that specifies the calculation mode for a loaded document.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions.Reset">
      <summary>
        <para>Resets all options to default values and sets the password to an empty string.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions.SuppressSolidFillWithEmptyColor">
      <summary>
        <para>Gets or sets whether to correct the transparent background color rendering in documents created in SpreadsheetControl prior to version 16.1.5.</para>
      </summary>
      <value>true, to correct the document; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions">
      <summary>
        <para>Contains options used for loading (importing) a document in text format.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.AutoDetectDelimiter">
      <summary>
        <para>Gets or sets a value indicating whether to automatically detect a character separating values in the text file.</para>
      </summary>
      <value>true, to autodetect a delimiter; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.AutoDetectEncoding">
      <summary>
        <para>Gets or sets whether the spreadsheet attempts to detect encoding of the text being imported.</para>
      </summary>
      <value>true, to detect the text encoding automatically; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.CellIndexOutOfRangeStrategy">
      <summary>
        <para>Gets or sets the action performed when the spreadsheet cannot assign imported data to a cell.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CsvImportCellIndexStrategy"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.CellReferenceStyle">
      <summary>
        <para>Gets or sets the cell reference style used in a source document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CellReferenceStyle"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.ClearWorksheetBeforeImport">
      <summary>
        <para>Gets or sets whether to clear a worksheet before importing data.</para>
      </summary>
      <value>true, to delete worksheet content; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions"/> object which is a copy of the current object.</returns>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.ColumnTypes">
      <summary>
        <para>Provides access to the object which enables you to specify the data types for columns in an imported document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.ColumnDataTypeCollection"/> object that stores data format settings for columns in the imported document.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.Culture">
      <summary>
        <para>Gets or sets culture information used to parse imported data.</para>
      </summary>
      <value>An object that contains culture-specific settings. The default culture is invariant.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.Delimiter">
      <summary>
        <para>Gets or sets the character that separates values in the text.</para>
      </summary>
      <value>A <see cref="T:System.Char"/> that is the character used as delimiter.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.Encoding">
      <summary>
        <para>Gets or sets the encoding used to interpret characters in the imported text document.</para>
      </summary>
      <value>A <see cref="T:System.Text.Encoding"/> object providing the conversion between certain encoding and Unicode.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.MaxRowCountToAutoDetectDelimiter">
      <summary>
        <para>Gets or sets the number of rows that should be analyzed to automatically detect the character separating values in the text file.</para>
      </summary>
      <value>An integer value that specifies the number of rows in the imported document to be read to autodetect a delimiter.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.MaxRowCountToImport">
      <summary>
        <para>Gets or sets the maximum number of rows which will be filled with imported data in the resulting worksheet.</para>
      </summary>
      <value>An integer that is the number of rows.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.NewlineType">
      <summary>
        <para>Gets or sets a character sequence used to define a new line.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.NewlineType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.StartCellToInsert">
      <summary>
        <para>Gets or sets the upper left cell of the imported data range.</para>
      </summary>
      <value>A string that is the cell reference.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.StartRowToImport">
      <summary>
        <para>Gets or sets the row index of imported data starting from which the data are placed in worksheet cells.</para>
      </summary>
      <value>An integer that is the zero-based row index.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.TextQualifier">
      <summary>
        <para>Gets or sets the character that encloses values in the source text.</para>
      </summary>
      <value>A <see cref="T:System.Char"/> that is the character used as the text qualifier.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.TrimBlanks">
      <summary>
        <para>Gets or sets whether to remove all leading and trailing white-space characters from each imported string value.</para>
      </summary>
      <value>true, to remove leading and trailing blanks; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.ValueTypeDetectMode">
      <summary>
        <para>Gets or sets the level of complexity to which the type of imported value is recognized.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CsvValueTypeDetectMode"/> enumeration value that characterizes the level of complexity.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions.Worksheet">
      <summary>
        <para>Gets or sets a destination worksheet to which text data are imported.</para>
      </summary>
      <value>A string that is the worksheet name.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions">
      <summary>
        <para>Contains options used for loading (importing) workbooks.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Csv">
      <summary>
        <para>Provides access to options specific for importing documents in CSV format.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.CsvDocumentImporterOptions"/> object containing import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.FallbackFormat">
      <summary>
        <para>Gets or sets the format that is used if no distinct format can be specified or recognized.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> enumeration member specifying the import format.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.OpenXml">
      <summary>
        <para>Provides access to options specific to importing documents in OpenXml format (aka default MS Excel 2007 format or .xlsx).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions"/> object containing import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Password">
      <summary>
        <para>Gets or sets a password used to unprotect a password-protected document during import.</para>
      </summary>
      <value>A string value that specifies the password.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.ThrowExceptionOnInvalidDocument">
      <summary>
        <para>Specifies whether an exception should be thrown when importing an invalid document.</para>
      </summary>
      <value>true, if an exception is thrown when importing an invalid document; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Txt">
      <summary>
        <para>Provides access to options specific to importing documents in TXT format.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.TxtDocumentImporterOptions"/> object containing import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.WorksheetNameValidationType">
      <summary>
        <para>Specifies how to validate worksheet names when importing workbooks.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.Import.WorksheetNameValidationType"/> enumeration member specifying how worksheet names are validated.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Xls">
      <summary>
        <para>Provides access to options specific for importing documents in XLS format (MS Excel 97-2003 binary file format).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions"/> object containing import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Xlsb">
      <summary>
        <para>Provides access to options used to import documents in the XLSB format (Microsoft Excel 2007-2010 binary file format).</para>
      </summary>
      <value>An object that contains import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Xlsm">
      <summary>
        <para>Provides access to options specific to importing documents in OpenXML format with macro support.</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Import.XlsmDocumentImporterOptions"/> object containing import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Xlsx">
      <summary>
        <para>Provides access to options specific to importing documents in OpenXml format (aka default MS Excel 2007 format or .xlsx).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Import.OpenXmlDocumentImporterOptions"/> object containing import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Xlt">
      <summary>
        <para>Provides access to options specific to importing documents from XLT format (Microsoft Excel 97-2003 Template).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Import.XltDocumentImporterOptions"/> object containing import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Xltm">
      <summary>
        <para>Provides access to options specific to importing documents from XLM format (MS Excel macro file format).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Import.XltmDocumentImporterOptions"/> object containing import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Xltx">
      <summary>
        <para>Provides access to options specific to importing documents from XLTX format (MS Excel template).</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Import.XltxDocumentImporterOptions"/> object containing import settings.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.XmlSpreadsheet2003">
      <summary>
        <para>Provides access to options used to import documents in XML Spreadsheet 2003 file format.</para>
      </summary>
      <value>An object that contains import settings.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.WorksheetNameValidationType">
      <summary>
        <para>Lists rules by which new worksheet names are validated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.WorksheetNameValidationType.AutoCorrect">
      <summary>
        <para>Worksheet names are generated using default rules.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Import.WorksheetNameValidationType.Check">
      <summary>
        <para>New worksheet names are based on existing names checked for compliance with the rules (length, disallowed characters etc.).</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.XlsbDocumentImporterOptions">
      <summary>
        <para>Contains options used to load a document in the XLSB format (Microsoft Excel 2007-2010 binary file format).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.XlsbDocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.XlsbDocumentImporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.XlsbDocumentImporterOptions.CopyFrom(DevExpress.Office.Import.IImporterOptions)">
      <summary>
        <para>Copies the properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.XlsbDocumentImporterOptions"/> class.</para>
      </summary>
      <param name="value">The source object for copying.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.XlsbDocumentImporterOptions.EncryptionPassword">
      <summary>
        <para>Gets or sets a password used to unprotect a password-protected XLSB file during import. Use the <see cref="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Password"/> property instead.</para>
      </summary>
      <value>Specifies the password to unprotect a document.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.XlsbDocumentImporterOptions.OverrideCalculationMode">
      <summary>
        <para>Specifies how to change the calculation mode for a loaded document.</para>
      </summary>
      <value>An enumeration member that specifies the calculation mode for a loaded document.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.XlsbDocumentImporterOptions.ValidateFormula">
      <summary>
        <para>Gets or sets whether to validate formulas when importing a workbook.</para>
      </summary>
      <value>true, to validate formulas while a document is imported; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions">
      <summary>
        <para>Contains options used for loading (importing) a document in XLS format (MS Excel 97-2003 binary file format).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions.CopyFrom(DevExpress.Office.Import.IImporterOptions)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions"/> class.</para>
      </summary>
      <param name="value">An <see cref="T:DevExpress.Office.Import.IImporterOptions"/> class instance representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions.OverrideCalculationMode">
      <summary>
        <para>Specifies how to change the calculation mode for a loaded document.</para>
      </summary>
      <value>An enumeration member that specifies the calculation mode for a loaded document.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions.Password">
      <summary>
        <para>Gets or sets the password to load an encrypted workbook. Use the <see cref="P:DevExpress.XtraSpreadsheet.Import.WorkbookImportOptions.Password"/> property instead.</para>
      </summary>
      <value>A string value that specifies the password.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions.ValidateFormula">
      <summary>
        <para>Gets or sets a value specifying whether to validate formulas when importing a workbook.</para>
      </summary>
      <value>true, to validate formulas while importing a document; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.XlsmDocumentImporterOptions">
      <summary>
        <para>Contains options used for loading (importing) a document in OpenXML format with macro support (.xlsm).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.XlsmDocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.XlsmDocumentImporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.XltDocumentImporterOptions">
      <summary>
        <para>Contains options used for loading (importing) a document in the Microsoft Excel 97-2003 Template format (.xlt).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.XltDocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.XltDocumentImporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.XltmDocumentImporterOptions">
      <summary>
        <para>Contains options used for loading (importing) a macro-enabled template in OpenXML format (.xltm).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.XltmDocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.XltmDocumentImporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.XltxDocumentImporterOptions">
      <summary>
        <para>Contains options used for loading (importing) a template in OpenXML format (.xltm).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.XltxDocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.XltxDocumentImporterOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Import.XmlSpreadsheet2003DocumentImporterOptions">
      <summary>
        <para>Contains options used to load a document as an XML Spreadsheet 2003 file.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Import.XmlSpreadsheet2003DocumentImporterOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Import.XmlSpreadsheet2003DocumentImporterOptions"/> class.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraSpreadsheet.Localization">
      <summary>
        <para>Contains classes that help to adapt the Spreadsheet UI to different languages.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetCellErrorNameLocalizer">
      <summary>
        <para>A base class that provides necessary functionality for custom localizers of the spreadsheet error names.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetCellErrorNameLocalizer.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetCellErrorNameLocalizer"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetCellErrorNameLocalizer.CreateDefaultLocalizer">
      <summary>
        <para>Creates and returns an object containing resources specific to the language and culture settings.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object that contains resources based on the thread’s culture.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetCellErrorNameLocalizer.CreateResXLocalizer">
      <summary>
        <para>Creates and returns an object containing resources specific to the language and culture settings.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object that contains resources based on the thread’s culture.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetCellErrorNameLocalizer.GetString(DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetCellErrorNameStringId)">
      <summary>
        <para>Returns a culture-specific string for the specified string identifier.</para>
      </summary>
      <param name="id">A DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetCellErrorStringId enumeration value specifying the cell error whose text is to be localized.</param>
      <returns>A <see cref="T:System.String"/> that is the text to be displayed for the current culture settings.</returns>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetFunctionNameLocalizer">
      <summary>
        <para>A base class that provides necessary functionality for custom localizers of the spreadsheet function names.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetFunctionNameLocalizer.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetFunctionNameLocalizer"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetFunctionNameLocalizer.CreateDefaultLocalizer">
      <summary>
        <para>Creates and returns an object containing resources specific to the language and culture settings.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object that contains resources based on the thread’s culture.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetFunctionNameLocalizer.CreateResXLocalizer">
      <summary>
        <para>Creates and returns an object containing resources specific to the language and culture settings.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object that contains resources based on the thread’s culture.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetFunctionNameLocalizer.GetString(DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetFunctionNameStringId)">
      <summary>
        <para>Returns a culture-specific string for the specified string identifier.</para>
      </summary>
      <param name="id">A DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetFunctionNameStringId enumeration value specifying the function whose name is to be localized.</param>
      <returns>A <see cref="T:System.String"/> that is the text to be displayed for the current culture settings.</returns>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetLocalizer">
      <summary>
        <para>A base class that provides necessary functionality for custom localizers of the WinForms Spreadsheet control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetLocalizer.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetLocalizer"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetLocalizer.CreateDefaultLocalizer">
      <summary>
        <para>Creates and returns an object containing resources specific to the language and culture settings.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object that contains resources based on the thread’s culture.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetLocalizer.CreateResXLocalizer">
      <summary>
        <para>Creates and returns an object containing resources specific to the language and culture settings.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object that contains resources based on the thread’s culture.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetLocalizer.GetString(DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetStringId)">
      <summary>
        <para>Returns a culture-specific string for the specified string identifier.</para>
      </summary>
      <param name="id">A DevExpress.XtraSpreadsheet.Localization.XtraSpreadsheetStringId enumeration value specifying the UI element whose caption (text) is to be localized.</param>
      <returns>A <see cref="T:System.String"/> that is the text to be displayed for the current culture settings.</returns>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.MoveActiveCellModeOnEnterPress">
      <summary>
        <para>Lists values that specify how to move an active cell on an ENTER key press.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.MoveActiveCellModeOnEnterPress.Down">
      <summary>
        <para>An active cell moves one cell down on an ENTER press, and one cell up on a SHIFT+ENTER press.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.MoveActiveCellModeOnEnterPress.Left">
      <summary>
        <para>An active cell moves one cell to the left on an ENTER press, and one cell to the right on a SHIFT+ENTER press.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.MoveActiveCellModeOnEnterPress.None">
      <summary>
        <para>An active cell does not move on an ENTER or a SHIFT+ENTER press.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.MoveActiveCellModeOnEnterPress.Right">
      <summary>
        <para>An active cell moves one cell to the right on an ENTER press, and one cell to the left on a SHIFT+ENTER press.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.MoveActiveCellModeOnEnterPress.Up">
      <summary>
        <para>An active cell moves one cell up on an ENTER press, and one cell down on a SHIFT+ENTER press.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.RealTimeDataOptions">
      <summary>
        <para>Contains options for real-time data (RTD) function calculation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.RealTimeDataOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.RealTimeDataOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.RealTimeDataOptions.RefreshMode">
      <summary>
        <para>Gets or sets a value that indicates how the update of the real time data is initiated.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.RealTimeDataRefreshMode"/> enumeration member that specifies the update initiator.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.RealTimeDataOptions.ThrottleInterval">
      <summary>
        <para>Gets or sets the time interval between updates.</para>
      </summary>
      <value>An integer that is the time interval in milliseconds.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.RealTimeDataRefreshMode">
      <summary>
        <para>Lists how a data update is initiated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.RealTimeDataRefreshMode.ByTimer">
      <summary>
        <para>Real time data is updated by a timer after the time interval specified by the <see cref="P:DevExpress.XtraSpreadsheet.RealTimeDataOptions.ThrottleInterval"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.RealTimeDataRefreshMode.Manual">
      <summary>
        <para>Real time data is updated on demand by calling the <see cref="M:DevExpress.Spreadsheet.RealTimeData.RefreshData"/> method.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraSpreadsheet.Services">
      <summary>
        <para>Contains interfaces that define services implemented in the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Services.DefinedNameStatus">
      <summary>
        <para>Lists values used to specify the defined name status.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Services.DefinedNameStatus.ExistingName">
      <summary>
        <para>Specifies that a defined name already exists on the destination worksheet or workbook.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Services.DefinedNameStatus.InvalidName">
      <summary>
        <para>Specifies that a defined name is invalid.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Services.DefinedNameStatus.TableName">
      <summary>
        <para>Specifies that a defined name is assigned to a table.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.Services.DefinedNameStatus.UniqueName">
      <summary>
        <para>Specifies that a defined name is unique.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Services.ICustomAssemblyLoadingNotificationService">
      <summary>
        <para>Enables determining whether a custom assembly containing the Entity Framework data model is allowed to load during mail merge.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.ICustomAssemblyLoadingNotificationService.RequestApproval(System.String)">
      <summary>
        <para>Determines whether a custom assembly is allowed to load.</para>
      </summary>
      <param name="assemblyPath">A string that is the full path to the custom assembly file.</param>
      <returns>true, to load a custom assembly; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Services.ICustomCalculationService">
      <summary>
        <para>Allows managing the process of worksheet calculations.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.ICustomCalculationService.OnBeginCalculation">
      <summary>
        <para>Called when workbook calculation starts.</para>
      </summary>
      <returns>Return true to perform calculation; false to cancel.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.ICustomCalculationService.OnBeginCellCalculation(DevExpress.Spreadsheet.Formulas.CellCalculationArgs)">
      <summary>
        <para>Called when the calculation is started for a particular cell.</para>
      </summary>
      <param name="args">A  instance which allows you to identify a cell and obtain its value before calculation.</param>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.ICustomCalculationService.OnBeginCircularReferencesCalculation">
      <summary>
        <para>Called when calculation of circular references starts.</para>
      </summary>
      <returns>Return true to calculate circular references; return false to cancel that calculation.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.ICustomCalculationService.OnEndCalculation">
      <summary>
        <para>Called when workbook calculation is finished.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.ICustomCalculationService.OnEndCellCalculation(DevExpress.Spreadsheet.CellKey,DevExpress.Spreadsheet.CellValue,DevExpress.Spreadsheet.CellValue)">
      <summary>
        <para>Called when the calculation is finalized for a particular cell.</para>
      </summary>
      <param name="cellKey">A <see cref="T:DevExpress.Spreadsheet.CellKey"/> object which identifies a calculated cell.</param>
      <param name="startValue">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> that is the value of a cell before calculation.</param>
      <param name="endValue">A <see cref="T:DevExpress.Spreadsheet.CellValue"/> that is the value of a cell after calculation.</param>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.ICustomCalculationService.OnEndCircularReferencesCalculation(System.Collections.Generic.IList{DevExpress.Spreadsheet.CellKey})">
      <summary>
        <para>This method is called after circular reference calculation.</para>
      </summary>
      <param name="cellKeys">A list of objects that identify cells with circular references and cells whose formulas refer to cells with circular references (dependent cells).</param>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.ICustomCalculationService.ShouldMarkupCalculateAlwaysCells">
      <summary>
        <para>Mark the “CalculateAlways” cells as needing recalculation.</para>
      </summary>
      <returns>True, to mark the cells; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Services.IDefinedNameValidator">
      <summary>
        <para>A validator used to check whether a new version of the conflict defined name is valid and unique before pasting it into the destination document.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.IDefinedNameValidator.Validate(System.String,DevExpress.Spreadsheet.IUsedNameSet)">
      <summary>
        <para>Validates a defined name before pasting it into the destination worksheet/workbook.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that is a name to be validated.</param>
      <param name="usedNames">An object exposing the <see cref="T:DevExpress.Spreadsheet.IUsedNameSet"/> interface which provides access to the collections of table and defined names existing in the destination document.</param>
      <returns>A <see cref="T:DevExpress.XtraSpreadsheet.Services.DefinedNameStatus"/> enumeration value specifying the defined name status.</returns>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Services.IFormatDetectorService">
      <summary>
        <para>Allows detecting the format of a document contained in a stream.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.IFormatDetectorService.DetectFormat(System.IO.Stream)">
      <summary>
        <para>Determines the format of the document contained in a stream.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> object that is the stream containing the document.</param>
      <returns>A <see cref="T:DevExpress.XtraRichEdit.DocumentFormat"/> enumeration value specifying the document format.</returns>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Services.IMessageBoxService">
      <summary>
        <para>A service that enables you to display a custom message box when a runtime error occurs.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.IMessageBoxService.ShowDataValidationDialog(System.String,System.String,DevExpress.Spreadsheet.DataValidationErrorStyle)">
      <summary>
        <para>Shows the Data Validation message box with the specified message, title bar caption, and style.</para>
      </summary>
      <param name="message">The text to display in the message box.</param>
      <param name="title">The text to display in the message box’s caption.</param>
      <param name="errorStyle">Specifies the error style for the message box.</param>
      <returns>The equivalent of the <see cref="T:System.Windows.Forms.DialogResult"/> enumeration. Indicates the return value of the message box.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.IMessageBoxService.ShowMessage(System.String,System.String,DevExpress.Portable.PortableMessageBoxIcon)">
      <summary>
        <para>Displays a message box with the specified message, title bar caption, and icon.</para>
      </summary>
      <param name="message">The text to display in the message box.</param>
      <param name="title">The text to display in the message box’s title bar.</param>
      <param name="icon">The equivalent of the <see cref="T:System.Windows.Forms.MessageBoxIcon"/> enumeration. Specifies an icon to display in the message box.</param>
      <returns>The equivalent of the <see cref="T:System.Windows.Forms.DialogResult"/> enumeration. Indicates the return value of the message box.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.IMessageBoxService.ShowOkCancelMessage(System.String)">
      <summary>
        <para>Shows a dialog box to ask the user to confirm an action.</para>
      </summary>
      <param name="message">A string to display in a dialog box.</param>
      <returns>true, if the user successfully confirms the action; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.IMessageBoxService.ShowYesNoCancelMessage(System.String)">
      <summary>
        <para>Shows a message box with the Yes, No and Cancel buttons.</para>
      </summary>
      <param name="message">The text to display in the message box.</param>
      <returns>The equivalent of the <see cref="T:System.Windows.Forms.DialogResult"/> enumeration. Indicates the return value of the message box.</returns>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.IMessageBoxService.ShowYesNoMessage(System.String)">
      <summary>
        <para>Shows a dialog box with Yes and No buttons.</para>
      </summary>
      <param name="message">A string to display in a dialog box.</param>
      <returns>true, if the user successfully clicks the Yes button; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Services.IObjectDataSourceValidationService">
      <summary>
        <para>Allows custom validation of the <see cref="T:DevExpress.DataAccess.ObjectBinding.ObjectDataSource"/> data sources before using them in the document.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.IObjectDataSourceValidationService.Validate(System.Collections.Generic.IEnumerable{DevExpress.DataAccess.ObjectBinding.ObjectDataSource})">
      <summary>
        <para>Validates the ObjectDataSource data objects before data retrieval.</para>
      </summary>
      <param name="dataSources">An <see cref="T:System.Collections.Generic.IEnumerable`1"/>&lt;<see cref="T:DevExpress.DataAccess.ObjectBinding.ObjectDataSource"/>,&gt; collection to validate.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Services.ISpreadsheetCommandFactoryService">
      <summary>
        <para>A service which is used to create Spreadsheet commands.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.ISpreadsheetCommandFactoryService.CreateCommand(DevExpress.XtraSpreadsheet.Commands.SpreadsheetCommandId)">
      <summary>
        <para>Creates a command for use in the SpreadsheetControl.</para>
      </summary>
      <param name="id">A DevExpress.XtraSpreadsheet.Commands.SpreadsheetCommandId member specifying a command to create.</param>
      <returns>A Spreadsheet command object.</returns>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.Services.SpreadsheetCommandFactoryServiceWrapper">
      <summary>
        <para>A base class for implementing custom services used to substitute the default command factory service.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.SpreadsheetCommandFactoryServiceWrapper.#ctor(DevExpress.XtraSpreadsheet.Services.ISpreadsheetCommandFactoryService)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.Services.SpreadsheetCommandFactoryServiceWrapper"/> class with the specified service.</para>
      </summary>
      <param name="service">An object exposing the <see cref="T:DevExpress.XtraSpreadsheet.Services.ISpreadsheetCommandFactoryService"/> interface.</param>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.Services.SpreadsheetCommandFactoryServiceWrapper.CreateCommand(DevExpress.XtraSpreadsheet.Commands.SpreadsheetCommandId)">
      <summary>
        <para>Override the method in the SpreadsheetCommandFactoryServiceWrapper descendant to create a custom command for the specific ID.</para>
      </summary>
      <param name="id">A DevExpress.XtraSpreadsheet.Commands.SpreadsheetCommandId member specifying a command to create.</param>
      <returns>A Spreadsheet command object.</returns>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.Services.SpreadsheetCommandFactoryServiceWrapper.Service">
      <summary>
        <para>Provides access to the service interface of the wrapper.</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraSpreadsheet.Services.ISpreadsheetCommandFactoryService"/> interface of the wrapper.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.ShowSelectionMode">
      <summary>
        <para>Lists values used to specify whether the cell selection should be highlighted when the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> is not focused.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ShowSelectionMode.Always">
      <summary>
        <para>The selected cells are always highlighted in the SpreadsheetControl, even if the control is not focused.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.ShowSelectionMode.Focused">
      <summary>
        <para>The selected cells are highlighted in the SpreadsheetControl only if the control is focused.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetAxisLabelOverlappingOptions">
      <summary>
        <para>Contains options that define how to resolve overlapping axis labels for the SpreadsheetControl’s charts.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetAxisLabelOverlappingOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetAxisLabelOverlappingOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetAxisLabelOverlappingOptions.AllowHide">
      <summary>
        <para>Gets or sets a value indicating whether to hide axis labels when resolving overlapping labels.</para>
      </summary>
      <value>true, if hiding axis labels is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetAxisLabelOverlappingOptions.AllowRotate">
      <summary>
        <para>Gets or sets a value indicating whether to rotate axis labels when resolving overlapping labels.</para>
      </summary>
      <value>true, if rotating axis labels is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetAxisLabelOverlappingOptions.AllowStagger">
      <summary>
        <para>Gets or sets a value indicating whether to stagger axis labels when resolving overlapping labels.</para>
      </summary>
      <value>true, if staggering axis labels is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetAxisLabelOverlappingOptions.MinIndent">
      <summary>
        <para>Gets or sets the minimum indent between adjacent axis labels when an overlap resolution algorithm is applied to them.</para>
      </summary>
      <value>An integer value specifying the minimum indent, in pixels.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions">
      <summary>
        <para>Provides options to restrict an end-user’s ability to manage a document within the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.CellEditor">
      <summary>
        <para>Provides access to an option to handle data editing via the cell editor.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellEditorBehaviorOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Column">
      <summary>
        <para>Specifies whether column operations are permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions"/> object that provides access to options specifying the document’s capability to perform different operations over columns.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Comment">
      <summary>
        <para>Provides access to options that specify the document’s capability to manage comments.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions"/> object that is a storage of end-user restrictions applied to operations over comments.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Copy">
      <summary>
        <para>Gets or sets whether the Copy operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.CopyAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to perform the Copy operation.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.CreateNew">
      <summary>
        <para>Gets or sets whether the Create New Document operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.CreateNewAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to create new documents.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Cut">
      <summary>
        <para>Gets or sets whether the Cut operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.CutAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to perform the Cut operation.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.DataValidation">
      <summary>
        <para>Provides access to options that specify the document’s capability to create or modify data validation rules.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions"/> object that contains options specifying the document’s capability to manage data validation rules.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.DefaultMaxZoomFactor">
      <summary>
        <para>Gets the maximum zoom factor that is set for the control, by default.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value specifying the default maximum zoom. Currently, it equals positive infinity.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.DefaultMinZoomFactor">
      <summary>
        <para>Gets the minimum zoom factor that is set for the control, by default.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value specifying the default minimum zoom factor. Currently, it equals 0.09.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Drag">
      <summary>
        <para>Gets or sets whether the Drag operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.DragAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to perform the Drag operation.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Drawing">
      <summary>
        <para>Provides access to options that specify the document’s capability to perform different operations over drawing objects.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions"/> object that is a storage of end-user restrictions applied to operations over drawing objects.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Drop">
      <summary>
        <para>Gets or sets whether the Drop operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.DropAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to perform the Drop operation.</para>
      </summary>
      <value>True, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Encrypt">
      <summary>
        <para>Gets or sets whether the encryption operations are permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.EncryptAllowed">
      <summary>
        <para>Gets whether the encryption is allowed.</para>
      </summary>
      <value>true, if the feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.FillHandle">
      <summary>
        <para>Provides access to an option which turns the Fill Handle feature on or off.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetFillHandleBehaviorOptions"/> object that specifies whether or not the Fill Handle option is enabled.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.FreezePanes">
      <summary>
        <para>Gets or sets whether the Freeze Panes operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.FreezePanesAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to freeze panes.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.FunctionNameCulture">
      <summary>
        <para>Specifies whether to localize function names in the Spreadsheet control.</para>
      </summary>
      <value>Specifies culture settings for function names.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Group">
      <summary>
        <para>Provides access to options that specify the document’s capability to create and modify groups of rows and columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions"/> object that is a storage of end-user restrictions applied to operations over groups of data.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.LocalizeBooleanValues">
      <summary>
        <para>Specifies whether to localize TRUE and FALSE values in the Spreadsheet control.</para>
      </summary>
      <value>true to localize Boolean values; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.MaxZoomFactor">
      <summary>
        <para>Gets or sets the upper limit of document zooming.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value specifying the maximum zoom factor.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.MinZoomFactor">
      <summary>
        <para>Gets or sets the lower limit of document zooming.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value specifying the minimum zoom factor.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.MoveRange">
      <summary>
        <para>Gets or sets whether the end-user operation, which includes dragging the selected range and moving it, is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.MoveRangeAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to drag and move the selected range.</para>
      </summary>
      <value>true, if the operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.OfficeScrolling">
      <summary>
        <para>Gets or sets whether or not the Office Scrolling feature is enabled.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.OfficeScrollingAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to use the office scrolling feature.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Open">
      <summary>
        <para>Gets or sets whether an Open Document operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.OpenAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to open documents.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Paste">
      <summary>
        <para>Gets or sets whether the Paste operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.PasteAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to perform the Paste operation.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Print">
      <summary>
        <para>Gets or sets whether printing operations are permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.PrintAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to print documents.</para>
      </summary>
      <value>true, if printing operations are allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Protection">
      <summary>
        <para>Provides access to options that specify the document’s capability to apply or remove workbook protection.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions"/> object that provides access to options specifying the document’s capability to protect or unprotect a workbook.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Row">
      <summary>
        <para>Specifies whether row operations are permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions"/> object that provides access to options specifying the document’s capability to perform different operations over rows.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Save">
      <summary>
        <para>Gets or sets whether the Save Document operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.SaveAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to save documents.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.SaveAs">
      <summary>
        <para>Gets or sets whether the Save Document As operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.SaveAsAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to perform the Save Document As operation.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.SaveButtonAlwaysEnabled">
      <summary>
        <para>Gets or sets a value indicating whether the Save button should always be enabled on the ribbon.</para>
      </summary>
      <value>true, if the Save command is always enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Selection">
      <summary>
        <para>Returns an object that provides access to cell selection options.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.ShowPopupMenu">
      <summary>
        <para>Gets or sets whether the popup menu can be displayed in the SpreadsheetControl.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.ShowPopupMenuAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to invoke the popup menu.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Touch">
      <summary>
        <para>Gets or sets whether the touch device input is analyzed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraRichEdit.DocumentCapability"/> enumeration value specifying the control’s capability to use a touch device.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.TouchAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to perform the Touch operation.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.UseSkinColors">
      <summary>
        <para>Specifies whether skin or system colors should be used for cell font and background.</para>
      </summary>
      <value>true, if skin colors are used; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Worksheet">
      <summary>
        <para>Specifies whether worksheet operations are permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions"/> object that provides access to options specifying the document’s capability to perform different operations over worksheets.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.Zooming">
      <summary>
        <para>Gets or sets whether the Zoom operation is permitted.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetBehaviorOptions.ZoomingAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to zoom in and out documents.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCellCancelEditEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellCancelEdit"/> event.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCellCancelEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellBeginEdit"/> event and serves as the base class for <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellValidatingEventArgs"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellCancelEventArgs.Cancel">
      <summary>
        <para>Gets or sets whether the operation performed on the processed event should be canceled.</para>
      </summary>
      <value>true, to cancel the operation; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCellEditorBehaviorOptions">
      <summary>
        <para>Contains options for the cell editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCellEditorBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellEditorBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCellEditorBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellEditorBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellEditorBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEditorBehaviorOptions.CommitMode">
      <summary>
        <para>Gets or sets a mode that specifies when the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellValueChanged"/> event should be raised after a cell value has been edited via the cell editor and committed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.CellEditorCommitMode"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellValueChanged"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgs.Action">
      <summary>
        <para>Identifies an action which caused a change of the cell value.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.CellValueChangedAction"/> enumeration value identifying an action.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgs.OldFormula">
      <summary>
        <para>Gets the cell’s previous formula.</para>
      </summary>
      <value>A string specifying the formula.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgs.OldFormulaInvariant">
      <summary>
        <para>Gets the cell’s previous formula in the invariant culture.</para>
      </summary>
      <value>A string specifying the formula in the invariant culture (English).</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgs.OldValue">
      <summary>
        <para>Gets the cell’s previous value.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgsBase">
      <summary>
        <para>Serves as the base for classes which provide data for the events which occur on changing cell values via the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> UI.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgsBase.Cell">
      <summary>
        <para>Gets the cell for which the event is fired.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Cell"/> object.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgsBase.ColumnIndex">
      <summary>
        <para>Gets the index of the column that contains the cell.</para>
      </summary>
      <value>An integer value specifying the zero-based index of the column.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgsBase.Formula">
      <summary>
        <para>Gets the formula that is currently contained in the cell.</para>
      </summary>
      <value>A string value specifying the formula in the cell.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgsBase.FormulaInvariant">
      <summary>
        <para>Gets the formula in the invariant culture that is currently contained in the cell.</para>
      </summary>
      <value>A string value specifying the formula in the invariant culture (English).</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgsBase.RowIndex">
      <summary>
        <para>Gets the index of the row that contains the cell.</para>
      </summary>
      <value>An integer value specifying the zero-based index of the row.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgsBase.SheetName">
      <summary>
        <para>Gets the name of the worksheet that contains the cell.</para>
      </summary>
      <value>A string value specifying the worksheet name.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgsBase.Value">
      <summary>
        <para>Gets the value currently contained in the cell.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.CellValue"/> object.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellEventArgsBase.Worksheet">
      <summary>
        <para>Gets the worksheet that contains the cell.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCellOptions">
      <summary>
        <para>Contains various options which can be specified for worksheet cells.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCellOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellOptions.AutoFitMergedCellRowHeight">
      <summary>
        <para>Indicates whether the row height can be automatically adjusted for cells that are merged across a row and contain wrapped text.</para>
      </summary>
      <value>true to automatically adjust the height of a row that has cells merged across; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCellOptions.CopyFrom(DevExpress.XtraSpreadsheet.SpreadsheetCellOptions)">
      <summary>
        <para>Copies the properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellOptions"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellOptions"/> class instance, representing the source object for copying.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellOptions.KeepCellAlignmentOnShowFormulas">
      <summary>
        <para>Gets or sets a value indicating whether cell alignment should be preserved when the Show Formulas mode is enabled.</para>
      </summary>
      <value>true, to keep cell alignment when the Show Formulas option is activated; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCellValidatingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.CellEndEdit"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCellValidatingEventArgs.#ctor(DevExpress.XtraSpreadsheet.Model.Worksheet,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCellValidatingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="sheet">A <see cref="T:DevExpress.Spreadsheet.Worksheet"/> object specifying the worksheet that contains the cell for which the event has been raised.</param>
      <param name="columnIndex">An integer specifying an index of the column that contains the cell for which the event has been raised.</param>
      <param name="rowIndex">An integer specifying an index of the row that contains the cell for which the event has been raised.</param>
      <param name="editorText">A string specifying the text entered in the cell editor.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCellValidatingEventArgs.EditorText">
      <summary>
        <para>Gets or sets the string entered in the cell editor.</para>
      </summary>
      <value>A string value specifying the text that is currently entered in the cell editor.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetChartsViewOptions">
      <summary>
        <para>Provides access to the chart-specific properties of the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetChartsViewOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetChartsViewOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetChartsViewOptions.Antialiasing">
      <summary>
        <para>Gets or sets the document’s capability to apply antialiasing to 3-D charts displayed in the SpreadsheetControl.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform the operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetChartsViewOptions.AntialiasingAllowed">
      <summary>
        <para>Gets whether antialiasing of 3-D charts displayed in the SpreadsheetControl is allowed.</para>
      </summary>
      <value>true, if the operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetChartsViewOptions.CategoryAxisLabels">
      <summary>
        <para>Provides access to options that specify how to resolve overlapping category axis labels.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetAxisLabelOverlappingOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetChartsViewOptions.TextAntialiasing">
      <summary>
        <para>Gets or sets the document’s capability to apply antialiasing to text displayed in the SpreadsheetControl’s chart.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform the operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetChartsViewOptions.ValueAxisLabels">
      <summary>
        <para>Provides access to options that specify how to resolve overlapping value axis labels.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetAxisLabelOverlappingOptions"/> object.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions">
      <summary>
        <para>Contains clipboard options for the Spreadsheet control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions.AllowFormulasInBiff8">
      <summary>
        <para>Returns or specifies whether to copy cell formulas when you copy and paste data from the current Spreadsheet control to another SpreadsheetControl instance.</para>
      </summary>
      <value>true to copy formulas; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions.CopyFrom(DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions)">
      <summary>
        <para>Copies the properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions"/> class instance, that is the source object for copying.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions.DisallowDelimiterWithinFields">
      <summary>
        <para>Gets or sets whether to process double quotes within an inserted tab-delimited text.</para>
      </summary>
      <value>true, if double quotes within a field are not processed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions.KeepThemeColors">
      <summary>
        <para>Gets or sets whether to keep the current workbook’s theme colors when its data is copied to an external spreadsheet application.</para>
      </summary>
      <value>true, to keep the document’s theme colors; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions.KeepThemeFonts">
      <summary>
        <para>Gets or sets whether to keep the current workbook’s major and minor theme fonts when its data is copied to an external spreadsheet application.</para>
      </summary>
      <value>true, to keep the document’s theme fonts; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions.PasteChartAsPicture">
      <summary>
        <para>Gets or sets whether to paste a chart from the clipboard onto the Spreadsheet control as an image.</para>
      </summary>
      <value>true to paste a chart as an image; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions.PasteFormat">
      <summary>
        <para>Returns or specifies the format to use when data is pasted from the clipboard onto the Spreadsheet control.</para>
      </summary>
      <value>An enumeration member that specifies the clipboard format.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetClipboardOptions.PasteImageAsMetafile">
      <summary>
        <para>Returns or specifies whether to paste an image from the clipboard as a metafile or as a raster image.</para>
      </summary>
      <value>true to paste an image as a metafile; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions">
      <summary>
        <para>Provides options to restrict an end-user’s ability to manage columns in a worksheet of the workbook loaded into <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.AutoFit">
      <summary>
        <para>Gets or sets the document’s capability to adjust the column width to accommodate cell content.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.AutoFitAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to use the AutoFit feature for columns.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.Delete">
      <summary>
        <para>Gets or sets the document’s capability to delete columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.DeleteAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to delete columns.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.Hide">
      <summary>
        <para>Gets or sets the document’s capability to hide columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.HideAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to hide columns.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.Insert">
      <summary>
        <para>Gets or sets the document’s capability to insert new columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.InsertAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to insert columns.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.Resize">
      <summary>
        <para>Gets or sets the document’s capability to change column widths.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.ResizeAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to resize columns.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.Unhide">
      <summary>
        <para>Gets or sets the document’s capability to unhide columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetColumnBehaviorOptions.UnhideAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to unhide columns.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions">
      <summary>
        <para>Provides options to restrict an end-user’s ability to modify comments embedded into the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/>‘s document.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.Delete">
      <summary>
        <para>Gets or sets the document’s capability to delete comments.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.DeleteAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to delete comments.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.Edit">
      <summary>
        <para>Gets or sets the document’s capability to edit the existing comments.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.EditAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to edit the existing comments.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.Insert">
      <summary>
        <para>Gets or sets the document’s capability to add new comments.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.InsertAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to insert comments.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.Move">
      <summary>
        <para>Gets or sets the document’s capability to drag comments to a new location.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.MoveAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to move the comment box.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.Resize">
      <summary>
        <para>Gets or sets the document’s capability to change the size of the comment box.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.ResizeAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to resize the comment box.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.ShowHide">
      <summary>
        <para>Gets or sets the document’s capability to display or hide the existing comments.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.ShowHideAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to show or hide comments.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCommentBehaviorOptions.ShowOnHover">
      <summary>
        <para>Gets or sets the document’s capability to display a comment when the mouse hovers over a cell with a comment indicator.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value that specifies the document’s capability to perform an operation.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCompatibilityOptions">
      <summary>
        <para>Contains options used to ensure compatibility with previous Spreadsheet versions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCompatibilityOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCompatibilityOptions"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCompatibilityOptions.EnableLegacyLayoutEngine">
      <summary>
        <para>Enables the legacy layout calculation engine.</para>
      </summary>
      <value>true to enable the legacy layout engine; otherwise, false. The default value is false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCompatibilityOptions.EnableLegacyPdfExport">
      <summary>
        <para>Enables the legacy PDF export engine.</para>
      </summary>
      <value>true to use the legacy PDF export based on the Printing System functionality; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCompatibilityOptions.EnableLegacyPrintLayout">
      <summary>
        <para>Allows you to use the legacy mechanism to generate a document printout.</para>
      </summary>
      <value>true to disable enhanced printout generation; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCompatibilityOptions.TruncateLongStringsInFormulas">
      <summary>
        <para>Specifies whether the Spreadsheet should truncate string constants in formulas to 255 characters when it opens documents with formulas where this limit is exceeded.</para>
      </summary>
      <value>true to truncate string constants in formulas to 255 characters; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCopyOptions">
      <summary>
        <para>A set of options used to control copy operations.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCopyOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCopyOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetCopyOptions.CopyFrom(DevExpress.XtraSpreadsheet.SpreadsheetCopyOptions)">
      <summary>
        <para>Copies properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCopyOptions"/> class.</para>
      </summary>
      <param name="value">The source object to copy.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCopyOptions.KeepSourceThemeColors">
      <summary>
        <para>Gets or sets a value indicating whether to keep theme colors for data copied from a workbook with a different theme.</para>
      </summary>
      <value>true, to keep theme colors for inserted data; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetCopyOptions.KeepSourceThemeFonts">
      <summary>
        <para>Gets or sets a value indicating whether to keep major and minor theme fonts for data copied from a workbook with a different theme.</para>
      </summary>
      <value>true, to keep theme fonts for copied data; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetCustomAssemblyBehavior">
      <summary>
        <para>Lists actions which can be performed in response to a request for loading a custom assembly for the Entity Framework Data Source.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetCustomAssemblyBehavior.LoadSilently">
      <summary>
        <para>Custom assemblies can be loaded without notice.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetCustomAssemblyBehavior.NeverLoad">
      <summary>
        <para>No custom assembly can ever be loaded.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetCustomAssemblyBehavior.Prompt">
      <summary>
        <para>Decide whether to load each custom assembly. Raise the CustomAssemblyLoading event and check the arguments. If the event is not handled - query the notification service. Cancel loading if neither event nor service provide a response.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetDataSourceLoadingOptions">
      <summary>
        <para>Contains options which affect how the mail merge data source is created and its data is loaded.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetDataSourceLoadingOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDataSourceLoadingOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDataSourceLoadingOptions.CustomAssemblyBehavior">
      <summary>
        <para>Specifies the behavior when the <see cref="T:DevExpress.DataAccess.EntityFramework.EFDataSource"/> attempts to load a custom assembly during mail merge.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetCustomAssemblyBehavior"/> enumeration member that specifies an action performed when attempting to load a custom assembly during mail merge.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions">
      <summary>
        <para>Provides options to restrict an end-user’s capability to manage data validation rules in a document loaded into <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions.CircleInvalidData">
      <summary>
        <para>Gets or sets the document’s capability to display circles around incorrect values entered into validated cells.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions.CircleInvalidDataAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to circle invalid data.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions.ClearValidationCircles">
      <summary>
        <para>Gets or sets the document’s capability to hide data validation circles.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions.ClearValidationCirclesAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to hide validation circles.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions.ModifyValidationRules">
      <summary>
        <para>Gets or sets the document’s capability to create, modify or clear data validation rules.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDataValidationBehaviorOptions.ModifyValidationRulesAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to create or modify data validation rules.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError">
      <summary>
        <para>Lists possible errors which occur while attempting to load a password protected encrypted workbook.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError.EncryptionTypeNotSupported">
      <summary>
        <para>Indicates that the encryption type is not supported. For example, this error occurs when you open an XLS file that uses RC4 CryptoAPI encryption with third-party cryptographic service providers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError.IntegrityCheckFailed">
      <summary>
        <para>Indicates that the document being loaded did not pass the HMAC verification.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError.PasswordRequired">
      <summary>
        <para>Indicates that an .xls binary file is encrypted and you should set the <see cref="P:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions.Password"/> property to a password string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError.WrongPassword">
      <summary>
        <para>The password specified by the <see cref="P:DevExpress.XtraSpreadsheet.Import.XlsDocumentImporterOptions.Password"/> property is incorrect.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionException">
      <summary>
        <para>Fires under certain conditions when an attempt to load a password-protected .xls file fails.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionException.#ctor(DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionException"/> class with the specified settings.</para>
      </summary>
      <param name="error">An <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError"/> enumeration member specifying the error type.</param>
      <param name="message">A string that contains additional information about the error.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionException.Error">
      <summary>
        <para>Provides access to an object containing information about the error that occurs while attempting to decrypt a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDecryptionError"/> object containing information about an error.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions">
      <summary>
        <para>Provides options to restrict an end-user’s ability to modify drawing objects embedded into the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/>‘s document.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.ChangeZOrder">
      <summary>
        <para>Gets or sets the document’s capability to change the order of the drawing objects (such as pictures or charts).</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.ChangeZOrderAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to change the order of the drawing objects (such as pictures and charts).</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.Move">
      <summary>
        <para>Gets or sets the document’s capability to change the position of the drawings objects (such as pictures or charts).</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.MoveAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to move drawing objects (such as pictures and charts).</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.Resize">
      <summary>
        <para>Gets or sets the document’s capability to alter the size of the drawing objects (such as pictures or charts).</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.ResizeAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to resize drawing objects (such as pictures and charts).</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.Rotate">
      <summary>
        <para>Gets or sets the document’s capability to rotate the drawing objects (such as pictures or charts).</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetDrawingBehaviorOptions.RotateAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to rotate drawing objects (such as pictures and charts).</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetFillHandleBehaviorOptions">
      <summary>
        <para>Contains an option which turns the Fill Handle feature on or off.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetFillHandleBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetFillHandleBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetFillHandleBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetFillHandleBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetFillHandleBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetFillHandleBehaviorOptions.Enabled">
      <summary>
        <para>Gets or sets whether the fill handle is enabled.</para>
      </summary>
      <value>True, if the fill handle is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetFormulaAutoCompleteOptions">
      <summary>
        <para>Contains options affecting the Formula AutoComplete functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetFormulaAutoCompleteOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetFormulaAutoCompleteOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetFormulaAutoCompleteOptions.Enabled">
      <summary>
        <para>Gets or sets a value indicating whether the Formula AutoComplete feature is enabled.</para>
      </summary>
      <value>true, if Formula AutoComplete is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetFormulaAutoCompleteOptions.SearchMode">
      <summary>
        <para>Gets or sets a value that specifies what items should appear in the Formula AutoComplete drop-down list.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.XtraSpreadsheet.FormulaAutoCompleteSearchMode"/> enumeration members that specifies the mode for displaying matching items in the Formula AutoComplete list.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions">
      <summary>
        <para>Provides options to restrict an end-user’s ability to group data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.ChangeSettings">
      <summary>
        <para>Gets or sets whether end-users can change group settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.ChangeSettingsAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to change group settings.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.Collapse">
      <summary>
        <para>Gets or sets whether end-users can collapse groups.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.CollapseAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to collapse groups.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.CollapseExpandOnProtectedSheet">
      <summary>
        <para>Gets or sets whether end-users can collapse or expand groups located on a protected worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.CollapseExpandOnProtectedSheetAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to collapse or expand groups on a protected worksheet.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.CollapseExpandOnReadOnlyControl">
      <summary>
        <para>Gets or sets whether end-users can collapse or expand groups when the SpreadsheetControl’s ReadOnly property is set to true.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.CollapseExpandOnReadOnlyControlAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to collapse or expand groups when the SpreadsheetControl is in a read-only state.</para>
      </summary>
      <value>true, if the feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.Expand">
      <summary>
        <para>Gets or sets whether end-users can expand groups.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.ExpandAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to expand groups.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.Group">
      <summary>
        <para>Gets or sets whether end-users can group data.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.GroupAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to group data.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.Ungroup">
      <summary>
        <para>Gets or sets whether end-users can ungroup data.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupBehaviorOptions.UngroupAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to ungroup data.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetGroupInfo">
      <summary>
        <para>Contains information about a row or column group that is collapsed or expanded by a user.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupInfo.EndIndex">
      <summary>
        <para>Returns the index of the last row or column in the group.</para>
      </summary>
      <value>A zero-based row or column index.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetGroupInfo.StartIndex">
      <summary>
        <para>Returns the index of the first row or column in the group.</para>
      </summary>
      <value>A zero-based row or column index.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListOptions">
      <summary>
        <para>Contains options that specify the size and starting position of the PivotTable Field List pane at runtime.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListOptions.StartLocation">
      <summary>
        <para>Gets or sets the coordinates of the upper-left corner of the PivotTable Field List.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Point"/> object that specifies the coordinates at which the PivotTable Field List will be displayed.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListOptions.StartPosition">
      <summary>
        <para>Gets or sets the initial position of the PivotTable Field List.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListStartPosition"/> enumeration value that specifies the pane’s position.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListOptions.StartSize">
      <summary>
        <para>Gets or sets the start size of the PivotTable Field List.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> object composed of a pair of integers, which specify the width and height of the PivotTable Field List.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListStartPosition">
      <summary>
        <para>Lists values used to specify the starting position of the PivotTable Field List.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListStartPosition.CenterScreen">
      <summary>
        <para>Specifies that the PivotTable Field List should be displayed in the center of the screen.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListStartPosition.CenterSpreadsheetControl">
      <summary>
        <para>Specifies that the PivotTable Field List should be displayed in the center of the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListStartPosition.ManualScreen">
      <summary>
        <para>Specifies that the position of the PivotTable Field List is determined by the <see cref="P:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListOptions.StartLocation"/> property value relative to the upper-left corner of the screen.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListStartPosition.ManualSpreadsheetControl">
      <summary>
        <para>Specifies that the position of the PivotTable Field List is determined by the <see cref="P:DevExpress.XtraSpreadsheet.SpreadsheetPivotTableFieldListOptions.StartLocation"/> property value relative to the upper-left corner of the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetPrintContent">
      <summary>
        <para>Lists values that specify spreadsheet content to print.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPrintContent.ActiveSheets">
      <summary>
        <para>Prints the active sheet and all selected sheets (if any). To print multiple sheets, hold Ctrl while you click sheet tabs in the control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPrintContent.Default">
      <summary>
        <para>The default value (that is EntireWorkbook).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPrintContent.EntireWorkbook">
      <summary>
        <para>Prints the entire workbook.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPrintContent.Selection">
      <summary>
        <para>Prints selected cells of the active worksheet. If a chart sheet is active, it is printed completely.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetPrintOptions">
      <summary>
        <para>Provides access to options that control how the printed document is generated and previewed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetPrintOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetPrintOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetPrintOptions.PrintContent">
      <summary>
        <para>Specifies spreadsheet content to print/display within the Print Preview.</para>
      </summary>
      <value>An enumeration member that specifies  spreadsheet content to print.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetPrintOptions.RibbonPreview">
      <summary>
        <para>Gets or sets a value that specifies whether the Ribbon Print Preview window should be displayed instead of the standard Print Preview form with a Bar UI.</para>
      </summary>
      <value>true, to display the Print Preview window with a Ribbon UI; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetPrintRenderMode">
      <summary>
        <para>Lists values used to specify the render mode for the printed document.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPrintRenderMode.Gdi">
      <summary>
        <para>Specifies that the printed document is rendered using GDI.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpreadsheet.SpreadsheetPrintRenderMode.GdiPlus">
      <summary>
        <para>Specifies that the printed document is rendered using GDI+.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions">
      <summary>
        <para>Provides options to restrict an end-user’s capability to protect or unprotect a document in the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.AllowUsersToEditRange">
      <summary>
        <para>Gets or sets the document’s capability to unlock ranges in a protected worksheet for editing by authenticated users.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.AllowUsersToEditRangeAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to specify user permission to edit ranges in a protected worksheet.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.ProtectSheet">
      <summary>
        <para>Gets or sets the document’s capability to protect a worksheet.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.ProtectSheetAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to protect a worksheet.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.ProtectWorkbook">
      <summary>
        <para>Gets or sets the document’s capability to protect a workbook.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.ProtectWorkbookAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to protect a workbook.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.UnprotectSheet">
      <summary>
        <para>Gets or sets the document’s capability to remove the worksheet protection.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.UnprotectSheetAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to unprotect a worksheet.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.UnprotectWorkbook">
      <summary>
        <para>Gets or sets the document’s capability to remove the workbook protection.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionBehaviorOptions.UnprotectWorkbookAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to unprotect a workbook.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions">
      <summary>
        <para>Provides access to options specifying the encryption parameters.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions.CopyFrom(DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions)">
      <summary>
        <para>Copies the properties of the specified object into the current instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions"/> class.</para>
      </summary>
      <param name="value">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions"/> class instance that is the source object for copying.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions.SpinCount">
      <summary>
        <para>Gets or sets the number of iterations for the hashing function to run when comparing a password with the hashed value.</para>
      </summary>
      <value>An integer that is the number of iterations.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetProtectionOptions.UseStrongPasswordVerifier">
      <summary>
        <para>Gets or sets whether to use ISO password hashing algorithm to calculate a strong password verifier.</para>
      </summary>
      <value>true, to use ISO password hashing algorithm; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions">
      <summary>
        <para>Provides options to restrict an end-user’s ability to manage rows in a worksheet of the workbook loaded into <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.AutoFit">
      <summary>
        <para>Gets or sets the document’s capability to adjust row height to accommodate cell content.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.AutoFitAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to use the AutoFit feature for rows.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.Delete">
      <summary>
        <para>Gets or sets the document’s capability to delete rows.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.DeleteAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to delete rows.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.Hide">
      <summary>
        <para>Gets or sets the document’s capability to hide rows.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.HideAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to hide rows.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.Insert">
      <summary>
        <para>Gets or sets the document’s capability to insert new rows.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.InsertAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to insert rows.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.Resize">
      <summary>
        <para>Gets or sets the document’s capability to change row heights.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.ResizeAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to resize rows.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.Unhide">
      <summary>
        <para>Gets or sets the document’s capability to unhide rows.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetRowBehaviorOptions.UnhideAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to unhide rows.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions">
      <summary>
        <para>Contains options affecting cell selection in the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions.AllowExtendSelection">
      <summary>
        <para>Gets or sets whether end-users are allowed to extend selection in a worksheet by dragging or using arrow keys.</para>
      </summary>
      <value>true, if end-users can extend the selected range of cells; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions.AllowMultiSelection">
      <summary>
        <para>Gets or sets whether end-users are allowed to select multiple shapes  or cell ranges in a worksheet.</para>
      </summary>
      <value>true, if end-users can select multiple shapes or cell ranges simultaneously; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions.HideSelection">
      <summary>
        <para>Gets or sets whether a selection is highlighted.</para>
      </summary>
      <value>true, to not highlight selected cells; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions.MoveActiveCellMode">
      <summary>
        <para>Specifies the direction in which an active cell moves on an ENTER key press.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.MoveActiveCellModeOnEnterPress"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetSelectionOptions.ShowSelectionMode">
      <summary>
        <para>Gets or sets whether the cell selection should be highlighted when the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/> is in the unfocused state.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.ShowSelectionMode"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetUnhandledExceptionEventArgs">
      <summary>
        <para>Provides data for the UnhandledException event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetUnhandledExceptionEventArgs.#ctor(System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetUnhandledExceptionEventArgs"/> class with the specified exception.</para>
      </summary>
      <param name="e">An <see cref="T:System.Exception"/> object representing the exception which caused an event.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetUnhandledExceptionEventArgs.Exception">
      <summary>
        <para>Gets the exception which triggers the UnhandledException event.</para>
      </summary>
      <value>An <see cref="T:System.Exception"/> object representing an exception which caused the event.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetUnhandledExceptionEventArgs.Handled">
      <summary>
        <para>Gets or sets whether the exception should be propagated upwards.</para>
      </summary>
      <value>true to stop the exception from being propagated; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions">
      <summary>
        <para>Provides access to a set of display settings of the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.BackColor">
      <summary>
        <para>Gets or sets the SpreadsheetControl’s background color when a worksheet’s visible area is restricted.</para>
      </summary>
      <value>Specifies the color of the SpreadsheetControl’s non-editable area.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.Charts">
      <summary>
        <para>Gets options specific to chart display in the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetChartsViewOptions"/> object that provides chart-specific options.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.ColumnHeaderHeight">
      <summary>
        <para>Gets or sets the height of the column headers in pixels.</para>
      </summary>
      <value>An integer value that is the column header height in pixels.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.Pictures">
      <summary>
        <para>Provides access to options specific for displaying pictures in the spreadsheet.</para>
      </summary>
      <value>A DevExpress.XtraSpreadsheet.SpreadsheetPicturesViewOptions object containing options.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.RowHeaderWidth">
      <summary>
        <para>Gets or sets the width of the row headers in pixels.</para>
      </summary>
      <value>An integer value that is the row header width in pixels.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.ShowColumnHeaders">
      <summary>
        <para>Gets or sets a value indicating whether column headers are displayed in the SpreadsheetControl.</para>
      </summary>
      <value>true, to display column headers; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.ShowPlaceholders">
      <summary>
        <para>Gets or sets whether to display placeholders for unsupported document elements (charts, slicers, form controls, and SmartArt graphics).</para>
      </summary>
      <value>true, to display placeholders; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.ShowPrintArea">
      <summary>
        <para>Gets or sets whether the printable area of the worksheet is displayed with a dashed border.</para>
      </summary>
      <value>true, to visually indicate the print area; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.ShowRowHeaders">
      <summary>
        <para>Gets or sets a value indicating whether row headers are displayed in the SpreadsheetControl.</para>
      </summary>
      <value>true, to display row headers; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetViewOptions.UseFontSubstitution">
      <summary>
        <para>Gets or sets whether to use font substitution to display characters that are missing in the current font.</para>
      </summary>
      <value>true to enable font substitution; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions">
      <summary>
        <para>Provides options to restrict an end-user’s ability to manage worksheets of the workbook loaded into <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions"/> object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions"/> object (which is the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant) whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.Delete">
      <summary>
        <para>Gets or sets the document’s capability to delete worksheets.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.DeleteAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to delete worksheets.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.Hide">
      <summary>
        <para>Gets or sets the document’s capability to hide worksheets.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.HideAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to hide worksheets.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.Insert">
      <summary>
        <para>Gets or sets the document’s capability to insert new worksheets.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.InsertAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to insert worksheets.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.Rename">
      <summary>
        <para>Gets or sets the document’s capability to rename worksheets.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.RenameAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to rename worksheets.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.TabColor">
      <summary>
        <para>Gets or sets the document’s capability to change the colors of worksheet tabs.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.TabColorAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to change the colors of the worksheet tabs.</para>
      </summary>
      <value>true, if a feature is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.Unhide">
      <summary>
        <para>Gets or sets the document’s capability to unhide worksheets.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.SpreadsheetWorksheetBehaviorOptions.UnhideAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to unhide worksheets.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.UnhandledExceptionEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.UnhandledException"/> event.</para>
      </summary>
      <param name="sender">The event sender (typically a <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetControl"/>).</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpreadsheet.SpreadsheetUnhandledExceptionEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.VisibleRangeChangedEventArgs">
      <summary>
        <para>Provides data for the SpreadsheetControl.VisibleRangeChanged event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.VisibleRangeChangedEventArgs.Range">
      <summary>
        <para>Gets the cell range that is currently visible in the Spreadsheet control.</para>
      </summary>
      <value>The currently visible cell range.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.VisibleRangeChangedEventArgs.UnfrozenRange">
      <summary>
        <para>Gets the visible cell range of the scrollable area when there are frozen rows and columns in the worksheet.</para>
      </summary>
      <value>The currently visible cell range of the scrollable area.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.VisibleRangeChangedEventHandler">
      <summary>
        <para>A method that handles the <see cref="E:DevExpress.XtraSpreadsheet.SpreadsheetControl.VisibleRangeChanged"/> event.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the SpreadsheetControl that raised the event.</param>
      <param name="e">An object that contains event data.</param>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions">
      <summary>
        <para>Provides various options which can be specified for the document loaded in the SpreadsheetControl.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.Charts">
      <summary>
        <para>Gets or sets the document’s capability to load, insert, modify and export charts.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.ChartsAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to operate with charts.</para>
      </summary>
      <value>true, if operating with charts is allowed; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.CopyFrom(DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions)">
      <summary>
        <para>Duplicates the properties of the specified <see cref="T:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions"/> object into the current instance.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions"/> class instance representing the source object to be copied.</param>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.Formulas">
      <summary>
        <para>Gets or sets the document’s capability to load, insert, modify and export formulas.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.FormulasAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to operate with formulas.</para>
      </summary>
      <value>true, if the operation with formulas is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.Pictures">
      <summary>
        <para>Gets or sets the document’s capability to load, insert, modify and export pictures.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.PicturesAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to operate with pictures.</para>
      </summary>
      <value>true, if operating with pictures is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.Shapes">
      <summary>
        <para>Gets or sets the document’s capability to load, insert, modify and export shapes (such as lines, rectangles, basic shapes, etc.).</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.ShapesAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to operate with shapes.</para>
      </summary>
      <value>true, if operating with shapes is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.Sparklines">
      <summary>
        <para>Gets or sets the document’s capability to load, insert, modify and export sparklines.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.SparklinesAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to operate with sparklines.</para>
      </summary>
      <value>true, if operating with sparklines is allowed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.Undo">
      <summary>
        <para>Gets or sets the document’s capability to undo or redo the last command executed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpreadsheet.DocumentCapability"/> enumeration value specifying the document’s capability to perform an operation.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookCapabilitiesOptions.UndoAllowed">
      <summary>
        <para>Gets whether an end-user is allowed to undo or redo the last command executed.</para>
      </summary>
      <value>true, if an operation is allowed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.WorkbookEventOptions">
      <summary>
        <para>Provides options to specify how certain events are raised for the workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.WorkbookEventOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.WorkbookEventOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookEventOptions.RaiseOnModificationsViaAPI">
      <summary>
        <para>Gets or sets whether to raise certain events when changes are made via an API. Normally, these events are fired only when the document is modified by using the control UI.</para>
      </summary>
      <value>true, to raise events for changes made via API; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.WorkbookLayoutOptions">
      <summary>
        <para>Contains document layout options.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.WorkbookLayoutOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.WorkbookLayoutOptions"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookLayoutOptions.DefaultDpi">
      <summary>
        <para>Indicates whether a custom or default (screen) DPI value is used for document layout generation.</para>
      </summary>
      <value>true if the screen DPI value is used; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookLayoutOptions.Dpi">
      <summary>
        <para>Returns or specifies the resolution for document layout generation.</para>
      </summary>
      <value>A DPI value between 96 and 480.</value>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.WorkbookLayoutOptions.ResetDpi">
      <summary>
        <para>Specifies that the screen DPI value should be used to generate a document layout.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.WorkbookLocalizationOptions">
      <summary>
        <para>Contains localization options for a workbook.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookLocalizationOptions.FunctionNameCulture">
      <summary>
        <para>Specifies whether to localize function names in a workbook.</para>
      </summary>
      <value>Specifies culture settings for function names.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookLocalizationOptions.LocalizeBooleanValues">
      <summary>
        <para>Specifies whether to localize TRUE and FALSE values in a workbook.</para>
      </summary>
      <value>true to localize Boolean values; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.WorkbookPrintOptions">
      <summary>
        <para>Provides access to options that control how a printed document is generated and previewed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.WorkbookPrintOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.WorkbookPrintOptions"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookPrintOptions.PrintPlaceholders">
      <summary>
        <para>Gets or sets whether to print placeholders for unsupported document elements (charts, slicers, form controls, and SmartArt graphics).</para>
      </summary>
      <value>true, to include placeholders in the printout; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookPrintOptions.PrintSheetVisibility">
      <summary>
        <para>Gets or sets the visibility of worksheets to be printed.</para>
      </summary>
      <value>An enumeration member that indicates the worksheet visibility.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookPrintOptions.RenderMode">
      <summary>
        <para>Gets or sets the render mode for the printed document.</para>
      </summary>
      <value>An enumeration value that specifies the render mode.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookPrintOptions.ShowMarginsWarning">
      <summary>
        <para>Gets or sets whether to show an error message when page margins are set outside the printable area.</para>
      </summary>
      <value>true, to show the margins warning dialog; otherwise false.</value>
    </member>
    <member name="T:DevExpress.XtraSpreadsheet.WorkbookSaveOptions">
      <summary>
        <para>Provides access to options which define the file name and file format that are used when saving and loading the workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpreadsheet.WorkbookSaveOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpreadsheet.WorkbookSaveOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookSaveOptions.CurrentFileName">
      <summary>
        <para>Gets or sets the file name into which the document is saved or from which it is loaded.</para>
      </summary>
      <value>A <see cref="T:System.String"/> which represents the current file name (including the path and the file extension).</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookSaveOptions.CurrentFormat">
      <summary>
        <para>Gets or sets the file format into which the document is saved or from which it is loaded.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> member representing the current file format.</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookSaveOptions.DefaultFileName">
      <summary>
        <para>Gets or sets the default file name used for saving a new document.</para>
      </summary>
      <value>A <see cref="T:System.String"/> which represents the default file name (including the path).</value>
    </member>
    <member name="P:DevExpress.XtraSpreadsheet.WorkbookSaveOptions.DefaultFormat">
      <summary>
        <para>Gets or sets the default file format used for saving a new document.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Spreadsheet.DocumentFormat"/> member representing the default file format. It equals <see cref="F:DevExpress.Spreadsheet.DocumentFormat.OpenXml"/> unless specified explicitly.</value>
    </member>
  </members>
</doc>