<UserControl x:Class="ServiceInsight.MessageFlow.MessageFlowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:cnv="clr-namespace:ServiceInsight.ValueConverters"
             xmlns:controls="clr-namespace:ServiceInsight.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ServiceInsight.MessageFlow"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:models="clr-namespace:ServiceInsight.Models;assembly=ServiceInsight.Sdk"
             xmlns:ms="http://namespaces.mindscape.co.nz/wpf"
             xmlns:diagram="clr-namespace:ServiceInsight.SequenceDiagram.Diagram"
             IsHitTestVisible="True"
             d:DataContext="{d:DesignInstance local:MessageFlowViewModel}"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Xaml/Geometry.xaml" />
                <ResourceDictionary Source="/Images/Xaml/XamlIcons.xaml" />
                <ResourceDictionary>

                    <cnv:MiddlePointValueConverter x:Key="MiddlePointConverter" />
                    <cnv:StartSegmentValueConverter x:Key="StartSegmentConverter" />
                    <cnv:EndSegmentValueConverter x:Key="EndSegmentConverter" />
                    <ms:SegmentsToAngleConverter x:Key="EndArrowRotationConverter" ConnectionEnd="Finish" />
                    <ms:PointToTranslateTransformConverter x:Key="PointToTranslationConverter" />

                    <SolidColorBrush x:Key="MessageBackground" Color="#CCCCCC" />
                    <SolidColorBrush x:Key="FailedMessageBackground" Color="#F9916F" />
                    <SolidColorBrush x:Key="RetriedMessageBackground" Color="#F2F2F2" />
                    <SolidColorBrush x:Key="SelectedMessageBorder" Color="Black" />
                    <SolidColorBrush x:Key="SelectedMessageBackground" Color="#CCCCCC" />
                    <SolidColorBrush x:Key="SelectedFailedMessageBorder" Color="Black" />
                    <SolidColorBrush x:Key="EndpointBackground" Color="White" />
                    <SolidColorBrush x:Key="EndpointForeground" Color="#666666" />

                    <Style x:Key="FailedMessageMarker" TargetType="ContentControl">
                        <Setter Property="Margin" Value="10,5,5,5" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Message.Status}"
                                         Value="{x:Static models:MessageStatus.Failed}">
                                <Setter Property="Template" Value="{StaticResource msgFailureIcon}" />
                                <Setter Property="ToolTip" Value="Failed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Message.Status}"
                                         Value="{x:Static models:MessageStatus.RepeatedFailure}">
                                <Setter Property="Template" Value="{StaticResource msgRepeatedFailureIcon}" />
                                <Setter Property="ToolTip" Value="Repeated Failures" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Message.Status}"
                                         Value="{x:Static models:MessageStatus.RetryIssued}">
                                <Setter Property="Template" Value="{StaticResource msgRetriedIcon}" />
                                <Setter Property="ToolTip" Value="Retry Requested" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Message.Status}"
                                         Value="{x:Static models:MessageStatus.ArchivedFailure}">
                                <Setter Property="Template" Value="{StaticResource msgArchiveIcon}" />
                                <Setter Property="ToolTip" Value="Archived Failure" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="MessageTypeText" TargetType="TextBlock">
                        <Setter Property="FontWeight" Value="SemiBold" />
                        <Setter Property="FontSize" Value="11" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="TextDecorations" Value="Underline" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="TimeSentText" TargetType="TextBlock">
                        <Setter Property="FontSize" Value="9" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="ToolTip" Value="Time Sent" />
                    </Style>

                    <Style x:Key="MessageMenuIndicator" TargetType="{x:Type CheckBox}">
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="Margin" Value="0,5,0,5" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <StackPanel VerticalAlignment="Center"
                                                Background="Transparent"
                                                Orientation="Vertical"
                                                d:DataContext="{d:DesignInstance local:MessageNode}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontSize="14px"
                                                       FontWeight="Bold"
                                                       Style="{StaticResource MessageTypeText}"
                                                       Text="{Binding Message.FriendlyMessageType,
                                                                      TargetNullValue='MessageType value unknown'}"
                                                       ToolTip="{Binding Message.FriendlyMessageType}" />

                                            <Path x:Name="ChevronDown"
                                                  Width="5"
                                                  Height="5"
                                                  Margin="4,6,4,4"
                                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                                  Fill="#FF000000"
                                                  Stretch="Fill" />
                                        </StackPanel>
                                        <TextBlock Style="{StaticResource TimeSentText}" Text="{Binding TimeSent, TargetNullValue='TimeSent value unknown'}" />
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="MessageEndpointText" TargetType="TextBlock">
                        <Setter Property="FontSize" Value="9" />
                        <Setter Property="Foreground" Value="{StaticResource EndpointForeground}" />
                    </Style>

                    <Style x:Key="ConnectionPointRelocatorStyle" TargetType="ms:ConnectionRelocatorThumb">
                        <Setter Property="Width" Value="18" />
                        <Setter Property="Height" Value="18" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ms:ConnectionRelocatorThumb">
                                    <Ellipse Width="{TemplateBinding Width}"
                                             Height="{TemplateBinding Height}"
                                             Fill="#800000FF"
                                             Stroke="Blue"
                                             StrokeThickness="3">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform X="-9" Y="-9" />
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type ms:DiagramSurface}}}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <ControlTemplate x:Key="ConnectionStyleTemplate" TargetType="{x:Type ms:DiagramConnectionElement}">
                        <Canvas>
                            <Path Name="SelectionHighlight"
                                  Data="{TemplateBinding PathGeometry}"
                                  Stroke="Gray"
                                  StrokeThickness="4" />
                            <Path Data="{Binding Data,
                                                 ElementName=SelectionHighlight}"
                                  Stroke="#00FFFFFF"
                                  StrokeThickness="4" />
                            <Path Name="MainPath"
                                  Data="{Binding Data,
                                                 ElementName=SelectionHighlight}"
                                  Style="{TemplateBinding PathStyle}" />

                            <!--  Middle arrow:  -->
                            <ContentControl HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Path Name="ArrowTip"
                                      Fill="Black"
                                      Stroke="Black"
                                      StrokeThickness="1">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Figures>
                                                <PathFigure IsClosed="True" IsFilled="True">
                                                    <PathFigure.Segments>
                                                        <LineSegment Point="-7,20" />
                                                        <LineSegment Point="0,20" />
                                                        <LineSegment Point="7,20" />
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                                <ContentControl.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="{Binding Connection.Segments, Converter={StaticResource EndArrowRotationConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <TranslateTransform>
                                            <TranslateTransform.X>
                                                <MultiBinding Converter="{StaticResource MiddlePointConverter}">
                                                    <Binding Converter="{StaticResource StartSegmentConverter}"
                                                             ConverterParameter="X"
                                                             Path="Connection.Segments"
                                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Converter="{StaticResource EndSegmentConverter}"
                                                             ConverterParameter="X"
                                                             Path="Connection.Segments"
                                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </TranslateTransform.X>
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{StaticResource MiddlePointConverter}">
                                                    <Binding Converter="{StaticResource StartSegmentConverter}"
                                                             ConverterParameter="Y"
                                                             Path="Connection.Segments"
                                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Converter="{StaticResource EndSegmentConverter}"
                                                             ConverterParameter="Y"
                                                             Path="Connection.Segments"
                                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TransformGroup>
                                </ContentControl.RenderTransform>
                            </ContentControl>

                            <!--  Relocator thumbs and connection point thumb:  -->
                            <ms:ConnectionRelocatorThumb Name="toPoint"
                                                         ConnectionElement="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                         MovingEnd="Finish"
                                                         RenderTransform="{Binding ToConnectionPoint.Position,
                                                                                   Converter={StaticResource PointToTranslationConverter},
                                                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                                         Style="{StaticResource ConnectionPointRelocatorStyle}" />
                            <ms:ConnectionRelocatorThumb Name="fromPoint"
                                                         ConnectionElement="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                         MovingEnd="Start"
                                                         RenderTransform="{Binding FromConnectionPoint.Position,
                                                                                   Converter={StaticResource PointToTranslationConverter},
                                                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                                         Style="{StaticResource ConnectionPointRelocatorStyle}" />
                            <!--  Path:  -->
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="SelectionHighlight" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type ms:DiagramSurface}}}" Value="True" />
                                    <Condition Binding="{Binding ReadOnlyCanSelect, RelativeSource={RelativeSource AncestorType={x:Type ms:DiagramSurface}}}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="SelectionHighlight" Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="toPoint" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="fromPoint" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainPath" Property="Stroke" Value="#007AC5" />
                                <Setter TargetName="ArrowTip" Property="Stroke" Value="#007AC5" />
                                <Setter TargetName="ArrowTip" Property="Fill" Value="#007AC5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>


                    <Style x:Key="MessageIconStyle" TargetType="{x:Type controls:IconControl}">
                        <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTimeout}"
                                         Value="True">
                                <Setter Property="Data" Value="{StaticResource TimeoutGeometry}" />
                                <Setter Property="ToolTip" Value="Timeout" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsTimeout}" Value="False" />
                                    <Condition Binding="{Binding IsPublished}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Data" Value="{StaticResource EventGeometry}" />
                                <Setter Property="ToolTip" Value="Event" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsTimeout}" Value="False" />
                                    <Condition Binding="{Binding IsPublished}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Data" Value="{StaticResource CommandGeometry}" />
                                <Setter Property="ToolTip" Value="Command" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="MessageNodeStyle" TargetType="ms:DiagramNodeElement">
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="Cursor" Value="Arrow" />
                        <Setter Property="NodeTemplate">
                            <Setter.Value>
                                <DataTemplate DataType="diagram:DiagramItem">
                                    <StackPanel Orientation="Horizontal">
                                        <Border x:Name="MessageRectangle"
                                                HorizontalAlignment="Stretch"
                                                Background="{StaticResource MessageBackground}"
                                                BorderBrush="Transparent"
                                                BorderThickness="5"
                                                MouseLeftButtonDown="MessageRectangle_MouseLeftButtonDown"
                                                SnapsToDevicePixels="True"
                                                d:DataContext="{d:DesignInstance local:MessageNode}"
                                                ms:DiagramNodeElement.RaisesBoundsChangeRequested="True">
                                            <Grid x:Name="RootGrid">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" MinWidth="130" />
                                                    <ColumnDefinition Width="20" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Row="0"
                                                           Grid.Column="0"
                                                           Grid.ColumnSpan="3"
                                                           Background="{StaticResource EndpointBackground}"
                                                           FontSize="10px"
                                                           Padding="3,0,3,0"
                                                           Style="{StaticResource MessageEndpointText}"
                                                           Text="{Binding Message.SendingEndpoint}"
                                                           ToolTip="Sending Endpoint"
                                                           Visibility="{Binding ShowEndpoints,
                                                                                Converter={StaticResource BoolToVisibilityConverter}}" />
                                                <controls:IconControl x:Name="MessageTypeIcon"
                                                                      Grid.Row="1"
                                                                      Grid.Column="0"
                                                                      Width="24"
                                                                      Height="24"
                                                                      Margin="10"
                                                                      HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center"
                                                                      Style="{StaticResource MessageIconStyle}" />

                                                <Grid Grid.Row="1" Grid.Column="1">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>

                                                    <CheckBox x:Name="MenuContainer"
                                                              Grid.Row="0"
                                                              Style="{StaticResource MessageMenuIndicator}" />

                                                    <local:MessagePopupControl x:Name="MenuPopup"
                                                                               Grid.Row="1"
                                                                               HorizontalAlignment="Stretch"
                                                                               AllowsTransparency="True"
                                                                               DataContext="{Binding ElementName=RootGrid,
                                                                                                     Path=DataContext}"
                                                                               IsOpen="{Binding ElementName=MenuContainer,
                                                                                                Path=IsChecked}"
                                                                               Placement="Custom"
                                                                               PlacementTarget="{Binding ElementName=MenuContainer}"
                                                                               RenderTransform="{Binding Converter={StaticResource ZoomToCancelScaleConverter},
                                                                                                         RelativeSource={RelativeSource AncestorType={x:Type ms:DiagramSurface}},
                                                                                                         Path=Zoom}"
                                                                               StaysOpen="False">
                                                        <local:MessageActionPopup />
                                                    </local:MessagePopupControl>

                                                    <ItemsControl ItemsSource="{Binding SagaInvocations}"
                                                                 Grid.Row="2"
                                                                 Margin="0 -5 2 0"
                                                                 Visibility="{Binding HasSaga, Converter={StaticResource BoolToVisibilityConverter}}"
                                                                 cal:Message.Attach="[Event MouseLeftButtonUp]=[Action ShowSagaWindow]">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <UniformGrid Columns="1" IsItemsHost="True" />
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="20" />
                                                                        <ColumnDefinition Width="*" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <ContentControl x:Name="SagaStatusIcon"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Template="{StaticResource SagaInitiatedIcon}" />
                                                                    <Border Grid.Column="1"
                                                                            Margin="2 0 0 0"
                                                                            Background="#333333">
                                                                        <TextBlock VerticalAlignment="Center"
                                                                           FontSize="11px"
                                                                           FontWeight="Bold"
                                                                           Foreground="{StaticResource MessageBackground}"
                                                                           Padding="3 0"
                                                                           Text="{Binding SagaType}"
                                                                           TextTrimming="CharacterEllipsis"
                                                                           TextWrapping="NoWrap" />
                                                                    </Border>
                                                                </Grid>
                                                                <DataTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding IsSagaInitiated}"
                                                                                 Value="True">
                                                                        <Setter TargetName="SagaStatusIcon" Property="Template" Value="{StaticResource SagaTriggerIcon}" />
                                                                        <Setter TargetName="SagaStatusIcon" Property="ToolTip" Value="Message originated from Saga" />
                                                                    </DataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding IsSagaInitiated}" Value="False" />
                                                                            <Condition Binding="{Binding IsSagaCompleted}" Value="False" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="SagaStatusIcon" Property="Template" Value="{StaticResource SagaInitiatedIcon}" />
                                                                        <Setter TargetName="SagaStatusIcon" Property="ToolTip" Value="Saga Initiated / Updated" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding IsSagaInitiated}" Value="False" />
                                                                            <Condition Binding="{Binding IsSagaCompleted}" Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="SagaStatusIcon" Property="Template" Value="{StaticResource SagaCompletedIcon}" />
                                                                        <Setter TargetName="SagaStatusIcon" Property="ToolTip" Value="Saga Completed" />
                                                                    </MultiDataTrigger>
                                                                </DataTemplate.Triggers>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>

                                                </Grid>

                                                <ContentControl Grid.Row="1"
                                                                Grid.Column="2"
                                                                HorizontalAlignment="Right"
                                                                VerticalAlignment="Top"
                                                                Style="{StaticResource FailedMessageMarker}" />
                                                <TextBlock Grid.Row="2"
                                                           Grid.Column="0"
                                                           Grid.ColumnSpan="3"
                                                           Background="{StaticResource EndpointBackground}"
                                                           FontSize="10px"
                                                           Padding="3,0,3,0"
                                                           Style="{StaticResource MessageEndpointText}"
                                                           Text="{Binding Message.ReceivingEndpoint}"
                                                           ToolTip="Processing Endpoint"
                                                           Visibility="{Binding ShowEndpoints,
                                                                                Converter={StaticResource BoolToVisibilityConverter}}" />
                                            </Grid>
                                        </Border>
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding HasFailed}"
                                                     Value="True">
                                            <DataTrigger.Setters>
                                                <Setter TargetName="MessageRectangle" Property="Background" Value="{StaticResource FailedMessageBackground}" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding HasRetried}"
                                                     Value="True">
                                            <DataTrigger.Setters>
                                                <Setter TargetName="MessageRectangle" Property="Background" Value="{StaticResource RetriedMessageBackground}" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsFocused}" Value="True" />
                                                <Condition Binding="{Binding HasFailed}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="MessageRectangle" Property="BorderBrush" Value="{StaticResource SelectedFailedMessageBorder}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsFocused}" Value="True" />
                                                <Condition Binding="{Binding HasRetried}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="MessageRectangle" Property="BorderBrush" Value="{StaticResource SelectedMessageBorder}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsFocused}" Value="True" />
                                                <Condition Binding="{Binding HasFailed}" Value="False" />
                                                <Condition Binding="{Binding HasRetried}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="MessageRectangle" Property="Background" Value="{StaticResource SelectedMessageBackground}" />
                                            <Setter TargetName="MessageRectangle" Property="BorderBrush" Value="{StaticResource SelectedMessageBorder}" />
                                        </MultiDataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="CommandConnectionPathStyle" TargetType="Path">
                        <Setter Property="Stroke" Value="Black" />
                        <Setter Property="StrokeThickness" Value="3" />
                    </Style>

                    <Style x:Key="TimeoutConnectionPathStyle" TargetType="Path">
                        <Setter Property="Stroke" Value="Black" />
                        <Setter Property="StrokeThickness" Value="1" />
                    </Style>

                    <Style x:Key="EventConnectionPathStyle" TargetType="Path">
                        <Setter Property="Stroke" Value="Black" />
                        <Setter Property="StrokeThickness" Value="3" />
                        <Setter Property="StrokeDashArray" Value="1,1" />
                    </Style>

                    <ms:CorneredPathBuilder x:Key="PathBuilder" />

                    <Style x:Key="CommandConnectionStyle" TargetType="ms:DiagramConnectionElement">
                        <Setter Property="ToolTip" Value="Sent Command" />
                        <Setter Property="PathStyle" Value="{StaticResource CommandConnectionPathStyle}" />
                        <Setter Property="PathBuilder" Value="{StaticResource PathBuilder}" />
                        <Setter Property="Template" Value="{StaticResource ConnectionStyleTemplate}" />
                    </Style>

                    <Style x:Key="TimeoutConnectionStyle" TargetType="ms:DiagramConnectionElement">
                        <Setter Property="ToolTip" Value="Requested Timeout" />
                        <Setter Property="PathStyle" Value="{StaticResource TimeoutConnectionPathStyle}" />
                        <Setter Property="PathBuilder" Value="{StaticResource PathBuilder}" />
                        <Setter Property="Template" Value="{StaticResource ConnectionStyleTemplate}" />
                    </Style>

                    <Style x:Key="EventConnectionStyle" TargetType="ms:DiagramConnectionElement">
                        <Setter Property="ToolTip" Value="Published Event" />
                        <Setter Property="PathStyle" Value="{StaticResource EventConnectionPathStyle}" />
                        <Setter Property="PathBuilder" Value="{StaticResource PathBuilder}" />
                        <Setter Property="Template" Value="{StaticResource ConnectionStyleTemplate}" />
                    </Style>

                    <ms:DiagramConnectionStyleSelector x:Key="ConnectionStyleSelector">
                        <ms:TypeStyle DataType="local:CommandConnection" Style="{StaticResource CommandConnectionStyle}" />
                        <ms:TypeStyle DataType="local:EventConnection" Style="{StaticResource EventConnectionStyle}" />
                        <ms:TypeStyle DataType="local:TimeoutConnection" Style="{StaticResource TimeoutConnectionStyle}" />
                    </ms:DiagramConnectionStyleSelector>

                    <ms:ShapeNodeStyleSelector x:Key="NodeStyleSelector">
                        <ms:TypeStyle DataType="local:MessageNode" Style="{StaticResource MessageNodeStyle}" />
                    </ms:ShapeNodeStyleSelector>

                    <ms:DiagramFormatter x:Key="Formatter"
                                         ConnectionStyleSelector="{StaticResource ConnectionStyleSelector}"
                                         NodeStyleSelector="{StaticResource NodeStyleSelector}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="Root" KeyUp="Root_KeyUp">

        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border BorderBrush="#EFEFF2" BorderThickness="0 0 0 2">
            <StackPanel Margin="5" Orientation="Horizontal">
                <RepeatButton x:Name="ZoomIn" Interval="10">
                    <Image Width="12" Source="{StaticResource Shell_ToolbarZoomIn}" />
                </RepeatButton>
                <RepeatButton x:Name="ZoomOut"
                              Margin="2,0"
                              Interval="10">
                    <Image Width="12" Source="{StaticResource Shell_ToolbarZoomOut}" />
                </RepeatButton>
                <ToggleButton Margin="2,0" IsChecked="{Binding ShowEndpoints}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource Shell_ToolbarEndpoint}" Width="12" Margin="0,0,2,0" />
                        <TextBlock VerticalAlignment="Center" Text="Show Endpoints" />
                    </StackPanel>
                </ToggleButton>
            </StackPanel>
        </Border>

        <ms:DiagramSurface x:Name="ds"
                           Grid.Row="1"
                           Background="White"
                           Cursor="ScrollAll"
                           Diagram="{Binding Diagram}"
                           DragAction="Pan"
                           Formatter="{StaticResource Formatter}"
                           HorizontalSnapSpecifier="{ms:SnapToInterval 20}"
                           IsReadOnly="True"
                           IsVisibleChanged="OnDiagramVisibleChanged"
                           SelectedItem="{Binding SelectedMessage,
                                                  Mode=TwoWay}"
                           SizeChanged="OnDiagramSizeChanged"
                           VerticalSnapSpecifier="{ms:SnapToInterval 20}"
                           ZoomMode="ControlMouseWheel" />
    </Grid>
</UserControl>